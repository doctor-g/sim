var $wnd = $wnd || window.parent;
var __gwtModuleFunction = $wnd.sim;
var $sendStats = __gwtModuleFunction.__sendStats;
$sendStats('moduleStartup', 'moduleEvalStart');
var $gwt_version = "2.7.0";
var $strongName = '6B6035E3F0510BB0BD0A9525FFD79A6A';
var $gwt = {};
var $doc = $wnd.document;
var $moduleName, $moduleBase;
function __gwtStartLoadingFragment(frag) {
var fragFile = 'deferredjs/' + $strongName + '/' + frag + '.cache.js';
return __gwtModuleFunction.__startLoadingFragment(fragFile);
}
function __gwtInstallCode(code) {return __gwtModuleFunction.__installRunAsyncCode(code);}
function __gwt_isKnownPropertyValue(propName, propValue) {
return __gwtModuleFunction.__gwt_isKnownPropertyValue(propName, propValue);
}
function __gwt_getMetaProperty(name) {
return __gwtModuleFunction.__gwt_getMetaProperty(name);
}
var $stats = $wnd.__gwtStatsEvent ? function(a) {
return $wnd.__gwtStatsEvent && $wnd.__gwtStatsEvent(a);
} : null;
var $sessionId = $wnd.__gwtStatsSessionId ? $wnd.__gwtStatsSessionId : null;
var $intern_0 = 2147483647, $intern_1 = {3:1, 4:1}, $intern_2 = 1000, $intern_3 = {3:1, 50:1, 60:1}, $intern_4 = {85:1}, $intern_5 = {42:1}, $intern_6 = {56:1, 3:1, 50:1, 60:1}, $intern_7 = {3:1, 59:1}, $intern_8 = {38:1}, $intern_9 = {56:1, 3:1, 38:1}, $intern_10 = 4194303, $intern_11 = 1048575, $intern_12 = -2147483648, $intern_13 = {3:1, 18:1, 10:1, 12:1}, $intern_14 = {107:1, 30:1, 3:1, 9:1, 7:1}, $intern_15 = {82:1, 30:1, 3:1, 9:1, 7:1}, $intern_16 = {30:1, 83:1, 3:1, 9:1, 7:1}, $intern_17 = {30:1, 84:1, 3:1, 9:1, 7:1}, $intern_18 = {46:1, 3:1, 9:1, 7:1}, $intern_19 = {30:1, 143:1, 3:1, 9:1, 7:1}, $intern_20 = {30:1, 72:1, 3:1, 9:1, 7:1}, $intern_21 = {146:1, 3:1, 18:1, 10:1, 12:1}, $intern_22 = 65535, $intern_23 = {276:1, 3:1}, $intern_24 = 524288, $intern_25 = 4194304, $intern_26 = 17592186044416, $intern_27 = -9223372036854775808, $intern_28 = {137:1, 102:1, 119:1, 118:1, 138:1, 87:1, 79:1}, $intern_29 = {59:1}, $intern_30 = 65536, $intern_31 = 16777216, $intern_32 = 33554432, $intern_33 = 67108864, $intern_34 = 0.009999999776482582, $intern_35 = 0.15000000596046448, $intern_36 = {55:1, 65:1}, $intern_37 = {47:1, 3:1}, $intern_38 = 0.03999999910593033, $intern_39 = 0.10000000149011612, $intern_40 = 0.4000000059604645, $intern_41 = 0.05000000074505806, $intern_42 = 0.20000000298023224, $intern_43 = -8479085, $intern_44 = 0.019999999552965164, $intern_45 = -16777216, $intern_46 = 0.004999999888241291, $intern_47 = {22:1, 8:1}, $intern_48 = {22:1, 8:1, 34:1}, $intern_49 = {8:1, 26:1}, $intern_50 = {8:1, 28:1, 26:1}, $intern_51 = {95:1, 120:1, 8:1, 28:1, 160:1, 26:1}, $intern_52 = {54:1}, $intern_53 = {120:1, 8:1, 28:1, 160:1, 26:1}, $intern_54 = 5.9604644775390625E-8, $intern_55 = 0.800000011920929, $intern_56 = -13413835, $intern_57 = 16777215, $intern_58 = -1.5707963705062866, $intern_59 = {15:1, 21:1, 14:1}, $intern_60 = -11239534, $intern_61 = 0.8500000238418579, $intern_62 = 0.029999999329447746, $intern_63 = {95:1, 48:1, 120:1, 8:1, 28:1, 26:1}, $intern_64 = {120:1, 8:1, 174:1, 28:1, 160:1, 26:1}, $intern_65 = -3355444, $intern_66 = -1118482, $intern_67 = -5592406, $intern_68 = {163:1, 123:1, 42:1}, $intern_69 = {941:1, 3:1}, $intern_70 = 15525485, $intern_71 = {3:1, 9:1, 7:1, 101:1}, $intern_72 = {15:1, 14:1}, $intern_73 = {68:1, 63:1}, $intern_74 = {68:1, 63:1, 77:1, 76:1}, $intern_75 = 0.699999988079071, $intern_76 = {3:1, 9:1, 7:1, 115:1}, $intern_77 = 3.4028234663852886E38, $intern_78 = {3:1, 278:1}, $intern_79 = {66:1, 3:1}, $intern_80 = 34962, $intern_81 = 34963, $intern_82 = {3:1, 9:1, 7:1, 104:1}, $intern_83 = {3:1, 9:1, 7:1, 39:1}, $intern_84 = {230:1, 76:1}, $intern_85 = 0.949999988079071, $intern_86 = -3.4028234663852886E38, $intern_87 = 1.401298464324817E-45, $intern_88 = {37:1}, $intern_89 = {3:1, 9:1, 7:1, 109:1}, $intern_90 = {15:1, 14:1, 22:1, 8:1, 34:1}, $intern_91 = {3:1, 9:1, 7:1, 110:1}, $intern_92 = {3:1, 9:1, 7:1, 210:1, 73:1}, $intern_93 = {3:1, 9:1, 7:1, 111:1}, $intern_94 = {3:1, 9:1, 7:1, 89:1}, $intern_95 = 1.399999976158142, $intern_96 = 0.001500000013038516;
var _, initFnList_0, prototypesByTypeId_0 = {}, permutationId = -1;
function typeMarkerFn(){
}

function portableObjCreate(obj){
  function F(){
  }

  ;
  F.prototype = obj || {};
  return new F;
}

function modernizeBrowser(){
  !Array.isArray && (Array.isArray = function(vArg){
    return Object.prototype.toString.call(vArg) === '[object Array]';
  }
  );
}

function maybeGetClassLiteralFromPlaceHolder_0(entry){
  return entry instanceof Array?entry[0]:null;
}

function emptyMethod(){
}

function defineClass(typeId, superTypeId, castableTypeMap){
  var prototypesByTypeId = prototypesByTypeId_0;
  var createSubclassPrototype = createSubclassPrototype_0;
  var maybeGetClassLiteralFromPlaceHolder = maybeGetClassLiteralFromPlaceHolder_0;
  var prototype_0 = prototypesByTypeId[typeId];
  var clazz = maybeGetClassLiteralFromPlaceHolder(prototype_0);
  if (prototype_0 && !clazz) {
    _ = prototype_0;
  }
   else {
    _ = prototypesByTypeId[typeId] = !superTypeId?{}:createSubclassPrototype(superTypeId);
    _.castableTypeMap$ = castableTypeMap;
    _.constructor = _;
    !superTypeId && (_.typeMarker$ = typeMarkerFn);
  }
  for (var i = 3; i < arguments.length; ++i) {
    arguments[i].prototype = _;
  }
  clazz && (_.___clazz$ = clazz);
}

function createSubclassPrototype_0(superTypeId){
  var prototypesByTypeId = prototypesByTypeId_0;
  return portableObjCreate(prototypesByTypeId[superTypeId]);
}

function setGwtProperty(propertyName, propertyValue){
  typeof window === 'object' && typeof window['$gwt'] === 'object' && (window['$gwt'][propertyName] = propertyValue);
}

function registerEntry(){
  return entry_0;
}

function gwtOnLoad_0(errFn, modName, modBase, softPermutationId){
  ensureModuleInit();
  var initFnList = initFnList_0;
  $moduleName = modName;
  $moduleBase = modBase;
  permutationId = softPermutationId;
  function initializeModules(){
    for (var i = 0; i < initFnList.length; i++) {
      initFnList[i]();
    }
  }

  if (errFn) {
    try {
      $entry(initializeModules)();
    }
     catch (e) {
      errFn(modName, e);
    }
  }
   else {
    $entry(initializeModules)();
  }
}

function ensureModuleInit(){
  initFnList_0 == null && (initFnList_0 = []);
}

function addInitFunctions(){
  ensureModuleInit();
  var initFnList = initFnList_0;
  for (var i = 0; i < arguments.length; i++) {
    initFnList.push(arguments[i]);
  }
}

function $toString(this$static){
  return $getName(getClass__Ljava_lang_Class___devirtual$(this$static)) + '@' + toUnsignedRadixString(hashCode__I__devirtual$(this$static), 16);
}

function Object_0(){
}

function equals_Ljava_lang_Object__Z__devirtual$(this$static, other){
  return isJavaString(this$static)?$equals(this$static, other):hasJavaObjectVirtualDispatch(this$static)?this$static.equals$(other):isJavaArray(this$static)?this$static === other:this$static === other;
}

function getClass__Ljava_lang_Class___devirtual$(this$static){
  return isJavaString(this$static)?Ljava_lang_String_2_classLit:hasJavaObjectVirtualDispatch(this$static)?this$static.___clazz$:isJavaArray(this$static)?this$static.___clazz$:Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
}

function hashCode__I__devirtual$(this$static){
  return isJavaString(this$static)?getHashCode_0(this$static):hasJavaObjectVirtualDispatch(this$static)?this$static.hashCode$():isJavaArray(this$static)?getHashCode(this$static):getHashCode(this$static);
}

function toString__Ljava_lang_String___devirtual$(this$static){
  return isJavaString(this$static)?this$static:hasJavaObjectVirtualDispatch(this$static)?this$static.toString$():isJavaArray(this$static)?$toString(this$static):this$static.toString?this$static.toString():'[JavaScriptObject]';
}

defineClass(1, null, {}, Object_0);
_.equals$ = function equals(other){
  return this === other;
}
;
_.getClass$ = function getClass_0(){
  return this.___clazz$;
}
;
_.hashCode$ = function hashCode_0(){
  return getHashCode(this);
}
;
_.toString$ = function toString_0(){
  return $toString(this);
}
;
_.toString = function(){
  return this.toString$();
}
;
stringCastMap = {3:1, 362:1, 9:1, 2:1};
modernizeBrowser();
function charToString(x_0){
  return String.fromCharCode(x_0);
}

function hasJavaObjectVirtualDispatch(src_0){
  return !instanceofArray(src_0) && hasTypeMarker(src_0);
}

function instanceOf(src_0, dstId){
  return src_0 != null && (isJavaString(src_0) && !!stringCastMap[dstId] || src_0.castableTypeMap$ && !!src_0.castableTypeMap$[dstId]);
}

function instanceOfJso(src_0){
  return src_0 != null && !isJavaString(src_0) && !hasTypeMarker(src_0);
}

function instanceofArray(src_0){
  return Array.isArray(src_0);
}

function isJavaArray(src_0){
  return instanceofArray(src_0) && hasTypeMarker(src_0);
}

function isJavaString(src_0){
  return typeof src_0 === 'string';
}

function maskUndefined(src_0){
  return src_0 == null?null:src_0;
}

function narrow_short(x_0){
  return x_0 << 16 >> 16;
}

function round_int(x_0){
  return ~~Math.max(Math.min(x_0, $intern_0), -2147483648);
}

var stringCastMap;
function $ensureNamesAreInitialized(this$static){
  if (this$static.typeName != null) {
    return;
  }
  initializeNames(this$static);
}

function $getName(this$static){
  $ensureNamesAreInitialized(this$static);
  return this$static.typeName;
}

function $getSimpleName(this$static){
  $ensureNamesAreInitialized(this$static);
  return this$static.simpleName;
}

function Class(){
  ++nextSequentialId;
  this.typeName = null;
  this.simpleName = null;
  this.packageName = null;
  this.compoundName = null;
  this.canonicalName = null;
  this.typeId = null;
  this.arrayLiterals = null;
}

function createClassObject(packageName, compoundClassName){
  var clazz;
  clazz = new Class;
  clazz.packageName = packageName;
  clazz.compoundName = compoundClassName;
  return clazz;
}

function createForClass(packageName, compoundClassName, typeId, superclass){
  var clazz;
  clazz = createClassObject(packageName, compoundClassName);
  maybeSetClassLiteral(typeId, clazz);
  clazz.superclass = superclass;
  return clazz;
}

function createForEnum(packageName, compoundClassName, typeId, superclass, enumConstantsFunc){
  var clazz;
  clazz = createClassObject(packageName, compoundClassName);
  maybeSetClassLiteral(typeId, clazz);
  clazz.modifiers = enumConstantsFunc?8:0;
  clazz.superclass = superclass;
  clazz.enumConstantsFunc = enumConstantsFunc;
  return clazz;
}

function createForInterface(packageName, compoundClassName){
  var clazz;
  clazz = createClassObject(packageName, compoundClassName);
  clazz.modifiers = 2;
  return clazz;
}

function createForPrimitive(className, primitiveTypeId){
  var clazz;
  clazz = createClassObject('', className);
  clazz.typeId = primitiveTypeId;
  clazz.modifiers = 1;
  return clazz;
}

function getClassLiteralForArray_0(leafClass, dimensions){
  var arrayLiterals = leafClass.arrayLiterals = leafClass.arrayLiterals || [];
  return arrayLiterals[dimensions] || (arrayLiterals[dimensions] = leafClass.createClassLiteralForArray(dimensions));
}

function getPrototypeForClass(clazz){
  if (clazz.isPrimitive()) {
    return null;
  }
  var typeId = clazz.typeId;
  var prototype_0 = prototypesByTypeId_0[typeId];
  return prototype_0;
}

function initializeNames(clazz){
  if (clazz.isArray_0()) {
    var componentType = clazz.componentType;
    componentType.isPrimitive()?(clazz.typeName = '[' + componentType.typeId):!componentType.isArray_0()?(clazz.typeName = '[L' + componentType.getName() + ';'):(clazz.typeName = '[' + componentType.getName());
    clazz.canonicalName = componentType.getCanonicalName() + '[]';
    clazz.simpleName = componentType.getSimpleName() + '[]';
    return;
  }
  var packageName = clazz.packageName;
  var compoundName = clazz.compoundName;
  compoundName = compoundName.split('/');
  clazz.typeName = join_1('.', [packageName, join_1('$', compoundName)]);
  clazz.canonicalName = join_1('.', [packageName, join_1('.', compoundName)]);
  clazz.simpleName = compoundName[compoundName.length - 1];
}

function join_1(separator, strings){
  var i = 0;
  while (!strings[i] || strings[i] == '') {
    i++;
  }
  var result = strings[i++];
  for (; i < strings.length; i++) {
    if (!strings[i] || strings[i] == '') {
      continue;
    }
    result += separator + strings[i];
  }
  return result;
}

function maybeSetClassLiteral(typeId, clazz){
  var proto;
  if (!typeId) {
    return;
  }
  clazz.typeId = typeId;
  var prototype_0 = getPrototypeForClass(clazz);
  if (!prototype_0) {
    prototypesByTypeId_0[typeId] = [clazz];
    return;
  }
  prototype_0.___clazz$ = clazz;
}

defineClass(279, 1, {}, Class);
_.createClassLiteralForArray = function createClassLiteralForArray(dimensions){
  var clazz;
  clazz = new Class;
  clazz.modifiers = 4;
  clazz.superclass = Ljava_lang_Object_2_classLit;
  dimensions > 1?(clazz.componentType = getClassLiteralForArray_0(this, dimensions - 1)):(clazz.componentType = this);
  return clazz;
}
;
_.getCanonicalName = function getCanonicalName(){
  $ensureNamesAreInitialized(this);
  return this.canonicalName;
}
;
_.getName = function getName(){
  return $getName(this);
}
;
_.getSimpleName = function getSimpleName_0(){
  return $getSimpleName(this);
}
;
_.isArray_0 = function isArray(){
  return (this.modifiers & 4) != 0;
}
;
_.isPrimitive = function isPrimitive(){
  return (this.modifiers & 1) != 0;
}
;
_.toString$ = function toString_34(){
  return ((this.modifiers & 2) != 0?'interface ':(this.modifiers & 1) != 0?'':'class ') + ($ensureNamesAreInitialized(this) , this.typeName);
}
;
_.modifiers = 0;
var nextSequentialId = 1;
var Ljava_lang_Object_2_classLit = createForClass('java.lang', 'Object', 1, null), Lcom_google_gwt_core_client_JavaScriptObject_2_classLit = createForClass('com.google.gwt.core.client', 'JavaScriptObject$', 0, Ljava_lang_Object_2_classLit), Ljava_lang_Class_2_classLit = createForClass('java.lang', 'Class', 279, Ljava_lang_Object_2_classLit);
function $clinit_AbstractSound(){
  $clinit_AbstractSound = emptyMethod;
  INITIAL_LOAD_STATE = ($clinit_Sound$LoadState() , LOAD_STATE_UNINITIALIZED);
}

function $addEventHandler(this$static, handler){
  $add_0(this$static.soundHandlerCollection, handler);
  this$static.loadState != INITIAL_LOAD_STATE && $onSoundLoadStateChange(handler, new SoundLoadStateChangeEvent(this$static));
}

function $setLoadState(this$static, loadState){
  if (loadState != this$static.loadState) {
    this$static.loadState = loadState;
    loadState != INITIAL_LOAD_STATE && $fireOnSoundLoadStateChange(this$static.soundHandlerCollection, this$static);
  }
}

function AbstractSound(url_0){
  $clinit_AbstractSound();
  this.soundHandlerCollection = new SoundHandlerCollection;
  this.loadState = INITIAL_LOAD_STATE;
  this.mimeType = 'audio/mpeg';
  this.url_0 = url_0;
  this.streaming = false;
  this.crossOrigin = false;
}

defineClass(197, 1, {});
_.toString$ = function toString_1(){
  return this.getSoundType() + '("' + this.mimeType + '", "' + this.url_0 + '", ' + (this.streaming?'streaming':'not streaming') + ', ' + (this.crossOrigin?'cross origin':'same origin') + ')';
}
;
_.crossOrigin = false;
_.streaming = false;
var INITIAL_LOAD_STATE;
var Lcom_allen_1sauer_gwt_voices_client_AbstractSound_2_classLit = createForClass('com.allen_sauer.gwt.voices.client', 'AbstractSound', 197, Ljava_lang_Object_2_classLit);
function $clinit_FlashSound(){
  $clinit_FlashSound = emptyMethod;
  $clinit_AbstractSound();
  soundList = new ArrayList;
}

function $playbackCompleted(this$static){
  $fireOnPlaybackComplete(this$static.soundHandlerCollection, this$static);
}

function $registerSound(this$static){
  if (!this$static.soundRegistered) {
    $registerSound_0(this$static.voicesMovie, this$static);
    this$static.soundRegistered = true;
  }
}

function $soundLoaded(this$static){
  $setLoadState(this$static, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_AND_READY));
  this$static.volume_0 != 100 && $setVolume(this$static.voicesMovie, this$static.soundNumber, this$static.volume_0);
  this$static.looping && $setLooping(this$static.voicesMovie, this$static.soundNumber, this$static.looping);
}

function FlashSound(url_0, voicesMovie){
  $clinit_FlashSound();
  AbstractSound.call(this, url_0);
  this.voicesMovie = voicesMovie;
  this.soundNumber = soundList.array.length;
  $add_0(soundList, this);
  $registerSound(this);
}

defineClass(692, 197, {}, FlashSound);
_.getSoundType = function getSoundType(){
  return $clinit_SoundType() , FLASH;
}
;
_.play_0 = function play(){
  $registerSound(this);
  if (this.loadState == ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_AND_READY)) {
    return $playSound(this.voicesMovie, this.soundNumber);
  }
  return false;
}
;
_.setLooping_0 = function setLooping(looping){
  this.looping = looping;
  this.loadState == ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_AND_READY) && $setLooping(this.voicesMovie, this.soundNumber, looping);
}
;
_.setVolume_0 = function setVolume(volume){
  this.volume_0 = volume;
  this.loadState == ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_AND_READY) && $setVolume(this.voicesMovie, this.soundNumber, volume);
}
;
_.stop_0 = function stop_0(){
  this.loadState == ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_AND_READY) && $stopSound(this.voicesMovie, this.soundNumber);
}
;
_.looping = false;
_.soundNumber = 0;
_.soundRegistered = false;
_.volume_0 = 100;
var soundList;
var Lcom_allen_1sauer_gwt_voices_client_FlashSound_2_classLit = createForClass('com.allen_sauer.gwt.voices.client', 'FlashSound', 692, Lcom_allen_1sauer_gwt_voices_client_AbstractSound_2_classLit);
function FlashSound$1(val$index){
  this.val$index1 = val$index;
}

defineClass(693, 1, {}, FlashSound$1);
_.execute = function execute(){
  $playbackCompleted($get(($clinit_FlashSound() , soundList), this.val$index1));
}
;
_.val$index1 = 0;
var Lcom_allen_1sauer_gwt_voices_client_FlashSound$1_2_classLit = createForClass('com.allen_sauer.gwt.voices.client', 'FlashSound/1', 693, Ljava_lang_Object_2_classLit);
function FlashSound$2(val$index){
  this.val$index1 = val$index;
}

defineClass(694, 1, {}, FlashSound$2);
_.execute = function execute_0(){
  $soundLoaded($get(($clinit_FlashSound() , soundList), this.val$index1));
}
;
_.val$index1 = 0;
var Lcom_allen_1sauer_gwt_voices_client_FlashSound$2_2_classLit = createForClass('com.allen_sauer.gwt.voices.client', 'FlashSound/2', 694, Ljava_lang_Object_2_classLit);
function $createAudioElement(this$static){
  var elem;
  !!this$static.endedRegistration && $removeHandler(this$static.endedRegistration.real);
  !!this$static.audio && $removeFromParent(this$static.audio);
  this$static.audio = createIfSupported();
  elem = $getMediaElement(this$static.audio);
  this$static.endedRegistration = $addBitlessDomHandler(this$static.audio, this$static.endedHandler, ($clinit_EndedEvent() , $clinit_EndedEvent() , TYPE));
  $add_4(($clinit_RootPanel() , get_7()), this$static.audio);
  this$static.crossOrigin && $setAttribute(elem, 'crossOrigin', 'anonymous');
  $setSrc(elem, this$static.url_0);
}

function Html5Sound(url_0){
  $clinit_AbstractSound();
  var mimeTypeSupport;
  AbstractSound.call(this, url_0);
  this.endedHandler = new Html5Sound$1(this);
  $createAudioElement(this);
  mimeTypeSupport = getMimeTypeSupport();
  switch (mimeTypeSupport.ordinal) {
    case 2:
      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_MAYBE_READY));
      break;
    case 0:
      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_NOT_SUPPORTED));
      break;
    case 3:
      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORT_NOT_KNOWN));
      throw new IllegalArgumentException_0('unexpected MIME type support ' + mimeTypeSupport);
    default:throw new IllegalArgumentException_0('unknown MIME type support ' + mimeTypeSupport);
  }
}

function getMimeTypeSupport(){
  var canPlayType;
  $clinit_AbstractSound();
  var support;
  if (!isSupported()) {
    return $clinit_SoundController$MimeTypeSupport() , MIME_TYPE_NOT_SUPPORTED;
  }
  support = (canPlayType = $getMediaElement(createIfSupported()).canPlayType('audio/mpeg') , canPlayType == 'no'?'':canPlayType);
  if ($equals('probably', support)) {
    return $clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY;
  }
  if ($equals('maybe', support)) {
    return $clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY;
  }
  return $clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_UNKNOWN;
}

defineClass(697, 197, {}, Html5Sound);
_.getSoundType = function getSoundType_0(){
  return $clinit_SoundType() , HTML5;
}
;
_.play_0 = function play_0(){
  var elem;
  elem = $getMediaElement(this.audio);
  $pause(elem);
  try {
    elem.currentTime = 0;
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (!instanceOf($e0, 18))
      throw unwrap($e0);
  }
  elem.currentTime != 0 && $createAudioElement(this);
  elem.play();
  return true;
}
;
_.setLooping_0 = function setLooping_0(looping){
  $setBooleanAttr($getMediaElement(this.audio), looping);
}
;
_.setVolume_0 = function setVolume_0(volume){
  $setVolume_1($getMediaElement(this.audio), volume / 100);
}
;
_.stop_0 = function stop_1(){
  $pause($getMediaElement(this.audio));
}
;
var Lcom_allen_1sauer_gwt_voices_client_Html5Sound_2_classLit = createForClass('com.allen_sauer.gwt.voices.client', 'Html5Sound', 697, Lcom_allen_1sauer_gwt_voices_client_AbstractSound_2_classLit);
function Html5Sound$1(this$0){
  this.this$01 = this$0;
}

defineClass(698, 1, {}, Html5Sound$1);
var Lcom_allen_1sauer_gwt_voices_client_Html5Sound$1_2_classLit = createForClass('com.allen_sauer.gwt.voices.client', 'Html5Sound/1', 698, Ljava_lang_Object_2_classLit);
function NativeSound(url_0, soundControllerElement){
  var elem, m;
  $clinit_AbstractSound();
  var mimeTypeSupport;
  AbstractSound.call(this, url_0);
  this.soundControllerElement = soundControllerElement;
  elem = $createElement(url_0);
  $setVolume_0(elem, 0);
  $play(soundControllerElement, elem);
  this.element = $createElement(url_0);
  mimeTypeSupport = (m = navigator.mimeTypes['audio/mpeg'] , m != null && m.enabledPlugin != null?($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY):($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_NOT_SUPPORTED));
  switch (mimeTypeSupport.ordinal) {
    case 2:
      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_MAYBE_READY));
      break;
    case 0:
      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_NOT_SUPPORTED));
      break;
    case 3:
      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORT_NOT_KNOWN));
      break;
    case 1:
      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_NOT_READY));
      break;
    default:throw new IllegalArgumentException_0('unknown MIME type support ' + mimeTypeSupport);
  }
}

defineClass(695, 197, {}, NativeSound);
_.getSoundType = function getSoundType_1(){
  return $clinit_SoundType() , NATIVE;
}
;
_.play_0 = function play_1(){
  return $play(this.soundControllerElement, this.element);
}
;
_.setLooping_0 = function setLooping_1(looping){
  $setAttribute(this.element, 'loop', 'infinite');
}
;
_.setVolume_0 = function setVolume_1(volume){
  $setVolume_0(this.element, volume);
}
;
_.stop_0 = function stop_2(){
  $stop(this.element);
}
;
var Lcom_allen_1sauer_gwt_voices_client_NativeSound_2_classLit = createForClass('com.allen_sauer.gwt.voices.client', 'NativeSound', 695, Lcom_allen_1sauer_gwt_voices_client_AbstractSound_2_classLit);
function $name(this$static){
  return this$static.name_0 != null?this$static.name_0:'' + this$static.ordinal;
}

function Enum(name_0, ordinal){
  this.name_0 = name_0;
  this.ordinal = ordinal;
}

defineClass(7, 1, {3:1, 9:1, 7:1});
_.compareTo = function compareTo(other){
  return this.ordinal - other.ordinal;
}
;
_.equals$ = function equals_0(other){
  return this === other;
}
;
_.hashCode$ = function hashCode_1(){
  return getHashCode(this);
}
;
_.toString$ = function toString_2(){
  return this.name_0 != null?this.name_0:'' + this.ordinal;
}
;
_.ordinal = 0;
var Ljava_lang_Enum_2_classLit = createForClass('java.lang', 'Enum', 7, Ljava_lang_Object_2_classLit);
function $clinit_Sound$LoadState(){
  $clinit_Sound$LoadState = emptyMethod;
  LOAD_STATE_NOT_SUPPORTED = new Sound$LoadState('LOAD_STATE_NOT_SUPPORTED', 0);
  LOAD_STATE_SUPPORT_NOT_KNOWN = new Sound$LoadState('LOAD_STATE_SUPPORT_NOT_KNOWN', 1);
  LOAD_STATE_SUPPORTED_AND_READY = new Sound$LoadState('LOAD_STATE_SUPPORTED_AND_READY', 2);
  LOAD_STATE_SUPPORTED_MAYBE_READY = new Sound$LoadState('LOAD_STATE_SUPPORTED_MAYBE_READY', 3);
  LOAD_STATE_SUPPORTED_NOT_READY = new Sound$LoadState('LOAD_STATE_SUPPORTED_NOT_READY', 4);
  LOAD_STATE_UNINITIALIZED = new Sound$LoadState('LOAD_STATE_UNINITIALIZED', 5);
}

function Sound$LoadState(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_0(){
  $clinit_Sound$LoadState();
  return initValues(getClassLiteralForArray(Lcom_allen_1sauer_gwt_voices_client_Sound$LoadState_2_classLit, 1), $intern_1, 112, 0, [LOAD_STATE_NOT_SUPPORTED, LOAD_STATE_SUPPORT_NOT_KNOWN, LOAD_STATE_SUPPORTED_AND_READY, LOAD_STATE_SUPPORTED_MAYBE_READY, LOAD_STATE_SUPPORTED_NOT_READY, LOAD_STATE_UNINITIALIZED]);
}

defineClass(112, 7, {112:1, 3:1, 9:1, 7:1}, Sound$LoadState);
var LOAD_STATE_NOT_SUPPORTED, LOAD_STATE_SUPPORTED_AND_READY, LOAD_STATE_SUPPORTED_MAYBE_READY, LOAD_STATE_SUPPORTED_NOT_READY, LOAD_STATE_SUPPORT_NOT_KNOWN, LOAD_STATE_UNINITIALIZED;
var Lcom_allen_1sauer_gwt_voices_client_Sound$LoadState_2_classLit = createForEnum('com.allen_sauer.gwt.voices.client', 'Sound/LoadState', 112, Ljava_lang_Enum_2_classLit, values_0);
function $clinit_SoundController(){
  $clinit_SoundController = emptyMethod;
  $wnd.$GWT_VOICES_VERSION = '3.3.2';
}

function $createSound(this$static, url_0){
  var sound;
  sound = $createSoundImpl(this$static, url_0);
  sound.setVolume_0(this$static.defaultVolume);
  return sound;
}

function $createSoundImpl(this$static, url_0){
  var c, c$array, c$index, c$max, sound;
  sound = null;
  for (c$array = this$static.preferredSoundTypes , c$index = 0 , c$max = c$array.length; c$index < c$max; ++c$index) {
    c = c$array[c$index];
    switch (c.ordinal) {
      case 1:
        sound = $createSoundImplHtml5(url_0);
        break;
      case 0:
        sound = $createSoundImplFlash(this$static, url_0);
        break;
      case 2:
        sound = $createSoundImplWebAudio(url_0);
        break;
      case 3:
        sound = $createSoundImplWebAudio(url_0);
    }
    if (sound) {
      return sound;
    }
  }
  sound = $createSoundImplWebAudio(url_0);
  if (sound) {
    return sound;
  }
  sound = $createSoundImplFlash(this$static, url_0);
  if (sound) {
    return sound;
  }
  sound = $createSoundImplHtml5(url_0);
  if (sound) {
    return sound;
  }
  sound = new NativeSound(url_0, this$static.soundContainer);
  return sound;
}

function $createSoundImplFlash(this$static, url_0){
  var mimeTypeSupport, sound, vm;
  if ($equals(url_0.substr(0, 5), 'data:')) {
    return null;
  }
  $clinit_FlashMovie();
  if (impl_0.impl.getMajorVersion() >= 9) {
    vm = $getVoicesMovie(this$static);
    mimeTypeSupport = $getMimeTypeSupport(vm);
    if (mimeTypeSupport == ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY) || mimeTypeSupport == MIME_TYPE_SUPPORT_NOT_READY) {
      sound = new FlashSound(url_0, vm);
      return sound;
    }
  }
  return null;
}

function $createSoundImplHtml5(url_0){
  if (getMimeTypeSupport() == ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY)) {
    return new Html5Sound(url_0);
  }
  return null;
}

function $createSoundImplWebAudio(url_0){
  if (getMimeTypeSupport_0() == ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY)) {
    return new WebAudioSound(url_0);
  }
  return null;
}

function $getVoicesMovie(this$static){
  if (!this$static.voicesWrapper) {
    this$static.voicesWrapper = new VoicesMovie('gwtVoices' + uniqueId++, this$static.gwtVoicesSwfBaseUrl);
    $clinit_DOM();
    $appendChild(this$static.soundContainer, resolve(this$static.voicesWrapper.element));
  }
  return this$static.voicesWrapper;
}

function $setPreferredSoundTypes(this$static, soundTypes){
  var s$index, s$max;
  for (s$index = 0 , s$max = soundTypes.length; s$index < s$max; ++s$index)
  ;
  this$static.preferredSoundTypes = soundTypes;
}

function SoundController(){
  var s, i, gwtVoices, style;
  $clinit_SoundController();
  this.soundContainer = ($clinit_DOM() , $doc.createElement('div'));
  this.gwtVoicesSwfBaseUrl = (s = $doc.location.href , i = s.indexOf('#') , i != -1 && (s = s.substring(0, i)) , i = s.indexOf('?') , i != -1 && (s = s.substring(0, i)) , i = s.lastIndexOf('/') , i != -1 && (s = s.substring(0, i)) , s.length > 0?s + '/':'');
  gwtVoices = getParameter('gwt-voices');
  $equals(($clinit_SoundType() , FLASH).queryParameterValue, gwtVoices)?$setPreferredSoundTypes(this, initValues(getClassLiteralForArray(Lcom_allen_1sauer_gwt_voices_client_SoundType_2_classLit, 1), $intern_1, 78, 0, [FLASH])):$equals(HTML5.queryParameterValue, gwtVoices)?$setPreferredSoundTypes(this, initValues(getClassLiteralForArray(Lcom_allen_1sauer_gwt_voices_client_SoundType_2_classLit, 1), $intern_1, 78, 0, [HTML5])):$equals(WEB_AUDIO.queryParameterValue, gwtVoices)?$setPreferredSoundTypes(this, initValues(getClassLiteralForArray(Lcom_allen_1sauer_gwt_voices_client_SoundType_2_classLit, 1), $intern_1, 78, 0, [WEB_AUDIO])):$equals(NATIVE.queryParameterValue, gwtVoices)?$setPreferredSoundTypes(this, initValues(getClassLiteralForArray(Lcom_allen_1sauer_gwt_voices_client_SoundType_2_classLit, 1), $intern_1, 78, 0, [NATIVE])):$setPreferredSoundTypes(this, initValues(getClassLiteralForArray(Lcom_allen_1sauer_gwt_voices_client_SoundType_2_classLit, 1), $intern_1, 78, 0, [WEB_AUDIO, FLASH, HTML5]));
  $appendChild(getBodyElement(), this.soundContainer);
  style = this.soundContainer.style;
  $setPropertyImpl(style, 'position', ($clinit_Style$Position() , 'absolute'));
  $setPropertyImpl(style, 'overflow', ($clinit_Style$Overflow() , 'hidden'));
  $setPropertyImpl(style, 'left', ($clinit_Style$Unit() , '-500.0px'));
  $setPropertyImpl(style, 'top', '-500.0px');
  $setPropertyImpl(style, 'width', '0.0px');
  $setPropertyImpl(style, 'height', '0.0px');
}

defineClass(529, 1, {}, SoundController);
_.defaultVolume = 100;
var Lcom_allen_1sauer_gwt_voices_client_SoundController_2_classLit = createForClass('com.allen_sauer.gwt.voices.client', 'SoundController', 529, Ljava_lang_Object_2_classLit);
function $clinit_SoundController$MimeTypeSupport(){
  $clinit_SoundController$MimeTypeSupport = emptyMethod;
  MIME_TYPE_NOT_SUPPORTED = new SoundController$MimeTypeSupport('MIME_TYPE_NOT_SUPPORTED', 0);
  MIME_TYPE_SUPPORT_NOT_READY = new SoundController$MimeTypeSupport('MIME_TYPE_SUPPORT_NOT_READY', 1);
  MIME_TYPE_SUPPORT_READY = new SoundController$MimeTypeSupport('MIME_TYPE_SUPPORT_READY', 2);
  MIME_TYPE_SUPPORT_UNKNOWN = new SoundController$MimeTypeSupport('MIME_TYPE_SUPPORT_UNKNOWN', 3);
}

function SoundController$MimeTypeSupport(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_1(){
  $clinit_SoundController$MimeTypeSupport();
  return initValues(getClassLiteralForArray(Lcom_allen_1sauer_gwt_voices_client_SoundController$MimeTypeSupport_2_classLit, 1), $intern_1, 144, 0, [MIME_TYPE_NOT_SUPPORTED, MIME_TYPE_SUPPORT_NOT_READY, MIME_TYPE_SUPPORT_READY, MIME_TYPE_SUPPORT_UNKNOWN]);
}

defineClass(144, 7, {144:1, 3:1, 9:1, 7:1}, SoundController$MimeTypeSupport);
var MIME_TYPE_NOT_SUPPORTED, MIME_TYPE_SUPPORT_NOT_READY, MIME_TYPE_SUPPORT_READY, MIME_TYPE_SUPPORT_UNKNOWN;
var Lcom_allen_1sauer_gwt_voices_client_SoundController$MimeTypeSupport_2_classLit = createForEnum('com.allen_sauer.gwt.voices.client', 'SoundController/MimeTypeSupport', 144, Ljava_lang_Enum_2_classLit, values_1);
function $clinit_SoundType(){
  $clinit_SoundType = emptyMethod;
  FLASH = new SoundType('FLASH', 0, 'flash');
  HTML5 = new SoundType('HTML5', 1, 'html5');
  NATIVE = new SoundType('NATIVE', 2, 'native');
  WEB_AUDIO = new SoundType('WEB_AUDIO', 3, 'webaudio');
}

function SoundType(enum$name, enum$ordinal, queryParameterValue){
  Enum.call(this, enum$name, enum$ordinal);
  this.queryParameterValue = queryParameterValue;
}

function values_2(){
  $clinit_SoundType();
  return initValues(getClassLiteralForArray(Lcom_allen_1sauer_gwt_voices_client_SoundType_2_classLit, 1), $intern_1, 78, 0, [FLASH, HTML5, NATIVE, WEB_AUDIO]);
}

defineClass(78, 7, {78:1, 3:1, 9:1, 7:1}, SoundType);
var FLASH, HTML5, NATIVE, WEB_AUDIO;
var Lcom_allen_1sauer_gwt_voices_client_SoundType_2_classLit = createForEnum('com.allen_sauer.gwt.voices.client', 'SoundType', 78, Ljava_lang_Enum_2_classLit, values_2);
function $clinit_WebAudioSound(){
  $clinit_WebAudioSound = emptyMethod;
  $clinit_AbstractSound();
  audioContext = createAudioContext();
}

function $createVoice(this$static, url_0){
  var context = audioContext;
  var request = new $wnd.XMLHttpRequest;
  request.open('GET', url_0, true);
  request.responseType = 'arraybuffer';
  var self_0 = this$static;
  request.onload = function(){
    function onSuccess(decodedBuffer){
      self_0.buffer_0 = decodedBuffer;
      self_0.soundLoaded_0();
    }

    function onFailure(){
      self_0.soundLoadFailed();
    }

    context.decodeAudioData(request.response, onSuccess, onFailure);
  }
  ;
  request.send();
}

function WebAudioSound(url_0){
  $clinit_WebAudioSound();
  var mimeTypeSupport;
  AbstractSound.call(this, url_0);
  try {
    $createVoice(this, url_0);
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 12)) {
      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_NOT_SUPPORTED));
    }
     else 
      throw unwrap($e0);
  }
  mimeTypeSupport = getMimeTypeSupport_0();
  switch (mimeTypeSupport.ordinal) {
    case 1:
    case 2:
      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_NOT_READY));
      break;
    case 0:
      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_NOT_SUPPORTED));
      break;
    case 3:
      $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORT_NOT_KNOWN));
      break;
    default:throw new IllegalArgumentException_0('unknown MIME type support ' + mimeTypeSupport);
  }
}

function createAudioContext(){
  try {
    return new AudioContext;
  }
   catch (ignore) {
  }
  return null;
}

function getMimeTypeSupport_0(){
  $clinit_WebAudioSound();
  if (!audioContext) {
    return $clinit_SoundController$MimeTypeSupport() , MIME_TYPE_NOT_SUPPORTED;
  }
  return getMimeTypeSupport();
}

defineClass(702, 197, {}, WebAudioSound);
_.getSoundType = function getSoundType_2(){
  return $clinit_SoundType() , WEB_AUDIO;
}
;
_.plackbackCompleted = function plackbackCompleted(){
  $fireOnPlaybackComplete(this.soundHandlerCollection, this);
}
;
_.play_0 = function play_2(){
  var buffer = this.buffer_0;
  if (buffer == null) {
    return false;
  }
  this.stop_0();
  var context = audioContext;
  var voice = context.createBufferSource();
  this.voice = voice;
  this.looping && (voice.loop = true);
  var node = voice;
  var volume = this.volume_0;
  if (volume != 100) {
    var gainNode = context.createGain();
    gainNode.gain.value = volume / 100;
    node.connect(gainNode);
    node = gainNode;
  }
  node.connect(context.destination);
  voice.buffer = buffer;
  voice.start(context.currentTime);
  if (!voice.loop) {
    var self_0 = this;
    setTimeout(function(){
      self_0.plackbackCompleted();
    }
    , voice.buffer.duration * $intern_2);
  }
  return true;
}
;
_.setLooping_0 = function setLooping_2(looping){
  this.looping = looping;
}
;
_.setVolume_0 = function setVolume_2(volume){
  this.volume_0 = volume;
}
;
_.soundLoadFailed = function soundLoadFailed(){
  $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_NOT_SUPPORTED));
}
;
_.soundLoaded_0 = function soundLoaded(){
  $setLoadState(this, ($clinit_Sound$LoadState() , LOAD_STATE_SUPPORTED_AND_READY));
}
;
_.stop_0 = function stop_3(){
  var context = audioContext;
  var voice = this.voice;
  if (voice == null) {
    return;
  }
  voice.stop(context.currentTime);
  this.voice = null;
}
;
_.looping = false;
_.volume_0 = 0;
var audioContext;
var Lcom_allen_1sauer_gwt_voices_client_WebAudioSound_2_classLit = createForClass('com.allen_sauer.gwt.voices.client', 'WebAudioSound', 702, Lcom_allen_1sauer_gwt_voices_client_AbstractSound_2_classLit);
function EventObject(source){
  this.source = source;
}

defineClass(329, 1, {});
var Ljava_util_EventObject_2_classLit = createForClass('java.util', 'EventObject', 329, Ljava_lang_Object_2_classLit);
function PlaybackCompleteEvent(source){
  EventObject.call(this, source);
}

defineClass(780, 329, {}, PlaybackCompleteEvent);
_.toString$ = function toString_3(){
  var sound;
  sound = this.source;
  return getSimpleName(Lcom_allen_1sauer_gwt_voices_client_handler_PlaybackCompleteEvent_2_classLit) + ': ' + sound;
}
;
var Lcom_allen_1sauer_gwt_voices_client_handler_PlaybackCompleteEvent_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.handler', 'PlaybackCompleteEvent', 780, Ljava_util_EventObject_2_classLit);
function $addAll(this$static, c){
  var changed, e, e$iterator;
  checkNotNull_1(c);
  changed = false;
  for (e$iterator = c.iterator(); e$iterator.hasNext();) {
    e = e$iterator.next_0();
    changed = changed | this$static.add_0(e);
  }
  return changed;
}

function $advanceToFind(this$static, o, remove){
  var e, iter;
  for (iter = this$static.iterator(); iter.hasNext();) {
    e = iter.next_0();
    if (maskUndefined(o) === maskUndefined(e) || o != null && equals_Ljava_lang_Object__Z__devirtual$(o, e)) {
      remove && iter.remove_1();
      return true;
    }
  }
  return false;
}

function $containsAll(this$static, c){
  var e, e$iterator;
  checkNotNull_1(c);
  for (e$iterator = c.iterator(); e$iterator.hasNext();) {
    e = e$iterator.next_0();
    if (!this$static.contains_0(e)) {
      return false;
    }
  }
  return true;
}

function $toArray(this$static){
  return this$static.toArray_0(initDim(Ljava_lang_Object_2_classLit, $intern_1, 1, this$static.size_1(), 3, 1));
}

function $toArray_0(this$static, a){
  var i, it, size_0;
  size_0 = this$static.size_1();
  a.length < size_0 && (a = createFrom(a, size_0));
  it = this$static.iterator();
  for (i = 0; i < size_0; ++i) {
    a[i] = it.next_0();
  }
  a.length > size_0 && (a[size_0] = null);
  return a;
}

function $toString_0(this$static){
  var comma, e, e$iterator, sb;
  sb = new StringBuilder_1('[');
  comma = false;
  for (e$iterator = this$static.iterator(); e$iterator.hasNext();) {
    e = e$iterator.next_0();
    comma?(sb.string += ', ' , sb):(comma = true);
    sb.string += e === this$static?'(this Collection)':'' + e;
  }
  sb.string += ']';
  return sb.string;
}

defineClass(960, 1, {});
_.add_0 = function add_0(o){
  throw new UnsupportedOperationException_0('Add not supported on this collection');
}
;
_.contains_0 = function contains(o){
  return $advanceToFind(this, o, false);
}
;
_.containsAll = function containsAll(c){
  return $containsAll(this, c);
}
;
_.isEmpty = function isEmpty(){
  return this.size_1() == 0;
}
;
_.remove = function remove_0(o){
  return $advanceToFind(this, o, true);
}
;
_.toArray = function toArray(){
  return $toArray(this);
}
;
_.toArray_0 = function toArray_0(a){
  return $toArray_0(this, a);
}
;
_.toString$ = function toString_4(){
  return $toString_0(this);
}
;
var Ljava_util_AbstractCollection_2_classLit = createForClass('java.util', 'AbstractCollection', 960, Ljava_lang_Object_2_classLit);
function $indexOf(this$static, toFind){
  var i, n;
  for (i = 0 , n = this$static.array.length; i < n; ++i) {
    if (equals_32(toFind, (checkElementIndex(i, this$static.array.length) , this$static.array[i]))) {
      return i;
    }
  }
  return -1;
}

defineClass(966, 960, {50:1});
_.add_1 = function add_1(index_0, element){
  throw new UnsupportedOperationException_0('Add not supported on this list');
}
;
_.add_0 = function add_2(obj){
  this.add_1(this.size_1(), obj);
  return true;
}
;
_.equals$ = function equals_1(o){
  var elem, elem$iterator, elemOther, iterOther, other;
  if (o === this) {
    return true;
  }
  if (!instanceOf(o, 50)) {
    return false;
  }
  other = o;
  if (this.size_1() != other.size_1()) {
    return false;
  }
  iterOther = other.iterator();
  for (elem$iterator = this.iterator(); elem$iterator.hasNext();) {
    elem = elem$iterator.next_0();
    elemOther = iterOther.next_0();
    if (!(maskUndefined(elem) === maskUndefined(elemOther) || elem != null && equals_Ljava_lang_Object__Z__devirtual$(elem, elemOther))) {
      return false;
    }
  }
  return true;
}
;
_.hashCode$ = function hashCode_2(){
  return hashCode_30(this);
}
;
_.iterator = function iterator_0(){
  return new AbstractList$IteratorImpl(this);
}
;
_.listIterator = function listIterator(){
  return this.listIterator_0(0);
}
;
_.listIterator_0 = function listIterator_0(from){
  return new AbstractList$ListIteratorImpl(this, from);
}
;
_.remove_0 = function remove_1(index_0){
  throw new UnsupportedOperationException_0('Remove not supported on this list');
}
;
var Ljava_util_AbstractList_2_classLit = createForClass('java.util', 'AbstractList', 966, Ljava_util_AbstractCollection_2_classLit);
function $$init(this$static){
  this$static.array = initDim(Ljava_lang_Object_2_classLit, $intern_1, 1, 0, 3, 1);
}

function $add(this$static, index_0, o){
  checkPositionIndex_0(index_0, this$static.array.length);
  splice_0(this$static.array, index_0, 0, o);
}

function $add_0(this$static, o){
  this$static.array[this$static.array.length] = o;
  return true;
}

function $addAll_0(this$static, c){
  var cArray, len;
  cArray = c.toArray();
  len = cArray.length;
  if (len == 0) {
    return false;
  }
  $insertAt(this$static, this$static.array.length, cArray);
  return true;
}

function $get(this$static, index_0){
  checkElementIndex(index_0, this$static.array.length);
  return this$static.array[index_0];
}

function $indexOf_0(this$static, o, index_0){
  for (; index_0 < this$static.array.length; ++index_0) {
    if (equals_32(o, this$static.array[index_0])) {
      return index_0;
    }
  }
  return -1;
}

function $insertAt(this$static, index_0, values){
  nativeArraySplice(values, 0, this$static.array, index_0, values.length, false);
}

function $remove(this$static, index_0){
  var previous;
  previous = (checkElementIndex(index_0, this$static.array.length) , this$static.array[index_0]);
  splice(this$static.array, index_0, 1);
  return previous;
}

function $remove_0(this$static, o){
  var i;
  i = $indexOf_0(this$static, o, 0);
  if (i == -1) {
    return false;
  }
  this$static.remove_0(i);
  return true;
}

function $set(this$static, index_0, o){
  var previous;
  previous = (checkElementIndex(index_0, this$static.array.length) , this$static.array[index_0]);
  this$static.array[index_0] = o;
  return previous;
}

function $toArray_1(this$static){
  return cloneSubrange(this$static.array, this$static.array.length);
}

function $toArray_2(this$static, out){
  var i, size_0;
  size_0 = this$static.array.length;
  out.length < size_0 && (out = createFrom(out, size_0));
  for (i = 0; i < size_0; ++i) {
    out[i] = this$static.array[i];
  }
  out.length > size_0 && (out[size_0] = null);
  return out;
}

function ArrayList(){
  $$init(this);
}

function ArrayList_0(initialCapacity){
  $$init(this);
  checkCriticalArgument_0(initialCapacity >= 0, 'Initial capacity must not be negative');
}

function ArrayList_1(c){
  $$init(this);
  $insertAt(this, 0, c.toArray());
}

function splice(array, index_0, deleteCount){
  array.splice(index_0, deleteCount);
}

function splice_0(array, index_0, deleteCount, value_0){
  array.splice(index_0, deleteCount, value_0);
}

defineClass(13, 966, $intern_3, ArrayList, ArrayList_0, ArrayList_1);
_.add_1 = function add_3(index_0, o){
  $add(this, index_0, o);
}
;
_.add_0 = function add_4(o){
  return $add_0(this, o);
}
;
_.contains_0 = function contains_0(o){
  return $indexOf_0(this, o, 0) != -1;
}
;
_.get_0 = function get_0(index_0){
  return $get(this, index_0);
}
;
_.isEmpty = function isEmpty_0(){
  return this.array.length == 0;
}
;
_.remove_0 = function remove_2(index_0){
  return $remove(this, index_0);
}
;
_.remove = function remove_3(o){
  return $remove_0(this, o);
}
;
_.size_1 = function size_1(){
  return this.array.length;
}
;
_.toArray = function toArray_1(){
  return $toArray_1(this);
}
;
_.toArray_0 = function toArray_2(out){
  return $toArray_2(this, out);
}
;
var Ljava_util_ArrayList_2_classLit = createForClass('java.util', 'ArrayList', 13, Ljava_util_AbstractList_2_classLit);
function $fireOnPlaybackComplete(this$static, sender){
  var handler, handler$iterator;
  new PlaybackCompleteEvent(sender);
  for (handler$iterator = new AbstractList$IteratorImpl(this$static); handler$iterator.i < handler$iterator.this$01_0.size_1();) {
    handler = (checkCriticalElement(handler$iterator.i < handler$iterator.this$01_0.size_1()) , handler$iterator.this$01_0.get_0(handler$iterator.last = handler$iterator.i++));
    handler.this$01.playing = false;
  }
}

function $fireOnSoundLoadStateChange(this$static, sender){
  var event_0, handler, handler$iterator;
  event_0 = new SoundLoadStateChangeEvent(sender);
  for (handler$iterator = new AbstractList$IteratorImpl(this$static); handler$iterator.i < handler$iterator.this$01_0.size_1();) {
    handler = (checkCriticalElement(handler$iterator.i < handler$iterator.this$01_0.size_1()) , handler$iterator.this$01_0.get_0(handler$iterator.last = handler$iterator.i++));
    $onSoundLoadStateChange(handler, event_0);
  }
}

function SoundHandlerCollection(){
  ArrayList.call(this);
}

defineClass(724, 13, $intern_3, SoundHandlerCollection);
var Lcom_allen_1sauer_gwt_voices_client_handler_SoundHandlerCollection_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.handler', 'SoundHandlerCollection', 724, Ljava_util_ArrayList_2_classLit);
function SoundLoadStateChangeEvent(source){
  EventObject.call(this, source);
  this.loadState = source.loadState;
}

defineClass(330, 329, {}, SoundLoadStateChangeEvent);
_.toString$ = function toString_5(){
  var sound;
  sound = this.source;
  return getSimpleName(Lcom_allen_1sauer_gwt_voices_client_handler_SoundLoadStateChangeEvent_2_classLit) + ': ' + sound + '; ' + $name(this.loadState);
}
;
var Lcom_allen_1sauer_gwt_voices_client_handler_SoundLoadStateChangeEvent_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.handler', 'SoundLoadStateChangeEvent', 330, Ljava_util_EventObject_2_classLit);
function $clinit_FlashMovie(){
  $clinit_FlashMovie = emptyMethod;
  impl_0 = new FlashMovieImplPlayN;
}

defineClass(699, 1, {});
var impl_0;
var Lcom_allen_1sauer_gwt_voices_client_ui_FlashMovie_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.ui', 'FlashMovie', 699, Ljava_lang_Object_2_classLit);
function $clinit_VoicesMovie(){
  $clinit_VoicesMovie = emptyMethod;
  $clinit_FlashMovie();
  FLASH_SUPPORTED_MIME_TYPES = initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['audio/mpeg', 'audio/mpeg; codecs=MP3']);
}

function $callCreateSound(this$static, id_0, soundURL, checkPolicyFile){
  var elem = this$static.element;
  elem.createSound(id_0, soundURL, checkPolicyFile);
}

function $getMimeTypeSupport(this$static){
  switch (this$static.flashSupport.ordinal) {
    case 2:
    case 1:
      return contains_1(FLASH_SUPPORTED_MIME_TYPES)?($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY):($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_NOT_SUPPORTED);
    case 3:
    case 0:
      return this$static.flashSupport;
    default:throw new RuntimeException_0('Unhandled flash support value ' + this$static.flashSupport);
  }
}

function $installFlashCallbackHooks(this$static, id_1){
  $doc.VoicesMovie === undefined && ($doc.VoicesMovie = {});
  var self_0 = this$static;
  $doc.VoicesMovie[id_1] = {};
  $doc.VoicesMovie[id_1].ready = function(){
    self_0.movieReady();
  }
  ;
  $doc.VoicesMovie[id_1].soundLoaded = function(id_0){
    $clinit_FlashSound();
    $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE), new FlashSound$2(id_0));
    return true;
  }
  ;
  $doc.VoicesMovie[id_1].playbackCompleted = function(id_0){
    $clinit_FlashSound();
    $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE), new FlashSound$1(id_0));
  }
  ;
  $doc.VoicesMovie[id_1].log = function(text_0){
    self_0.debug('FLASH[' + id_1 + ']: ' + text_0);
  }
  ;
}

function $movieUnsupported(this$static){
  var flashSound, flashSound$iterator;
  for (flashSound$iterator = new AbstractList$IteratorImpl(this$static.unitializedSoundList); flashSound$iterator.i < flashSound$iterator.this$01_0.size_1();) {
    flashSound = (checkCriticalElement(flashSound$iterator.i < flashSound$iterator.this$01_0.size_1()) , flashSound$iterator.this$01_0.get_0(flashSound$iterator.last = flashSound$iterator.i++));
    $setLoadState(flashSound, ($clinit_Sound$LoadState() , LOAD_STATE_NOT_SUPPORTED));
  }
}

function $playSound(this$static, id_0){
  var elem;
  if (this$static.flashSupport == ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY)) {
    return elem = this$static.element , elem.playSound(id_0);
  }
  return false;
}

function $registerSound_0(this$static, flashSound){
  this$static.flashSupport == ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY)?$callCreateSound(this$static, flashSound.soundNumber, flashSound.url_0, flashSound.crossOrigin):$add_0(this$static.unitializedSoundList, flashSound);
}

function $setLooping(this$static, id_0, looping){
  var elem;
  this$static.flashSupport == ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY) && (elem = this$static.element , elem.setLooping(id_0, looping?$intern_0:0) , undefined);
}

function $setVolume(this$static, id_0, volume){
  var elem;
  this$static.flashSupport == ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY) && (elem = this$static.element , elem.setVolume(id_0, volume / 100) , undefined);
}

function $stopSound(this$static, id_0){
  var elem;
  this$static.flashSupport == ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY) && (elem = this$static.element , elem.stopSound(id_0) , undefined);
}

function VoicesMovie(id_0, gwtVoicesSwfBaseUrl){
  $clinit_VoicesMovie();
  this.element = $createElementMaybeSetURL(impl_0, id_0, gwtVoicesSwfBaseUrl + 'gwt-voices.swf');
  this.flashSupport = ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_UNKNOWN);
  this.unitializedSoundList = new ArrayList;
  $installFlashCallbackHooks(this, id_0);
  if (impl_0.impl.getMajorVersion() >= 9) {
    this.flashSupport = MIME_TYPE_SUPPORT_NOT_READY;
  }
   else {
    this.flashSupport = MIME_TYPE_NOT_SUPPORTED;
    $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE), new VoicesMovie$1(this));
  }
}

defineClass(700, 699, {}, VoicesMovie);
_.debug = function debug(text_0){
  $clinit_System();
}
;
_.movieReady = function movieReady(){
  var flashSound, iterator;
  this.flashSupport = ($clinit_SoundController$MimeTypeSupport() , MIME_TYPE_SUPPORT_READY);
  for (iterator = new AbstractList$IteratorImpl(this.unitializedSoundList); iterator.i < iterator.this$01_0.size_1();) {
    flashSound = (checkCriticalElement(iterator.i < iterator.this$01_0.size_1()) , iterator.this$01_0.get_0(iterator.last = iterator.i++));
    $callCreateSound(this, flashSound.soundNumber, flashSound.url_0, flashSound.crossOrigin);
    $remove_7(iterator);
  }
}
;
var FLASH_SUPPORTED_MIME_TYPES;
var Lcom_allen_1sauer_gwt_voices_client_ui_VoicesMovie_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.ui', 'VoicesMovie', 700, Lcom_allen_1sauer_gwt_voices_client_ui_FlashMovie_2_classLit);
function VoicesMovie$1(this$0){
  this.this$01 = this$0;
}

defineClass(701, 1, {}, VoicesMovie$1);
_.execute = function execute_1(){
  $movieUnsupported(this.this$01);
}
;
var Lcom_allen_1sauer_gwt_voices_client_ui_VoicesMovie$1_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.ui', 'VoicesMovie/1', 701, Ljava_lang_Object_2_classLit);
defineClass(1012, 1, {});
_.getMajorVersion = function getMajorVersion(){
  var versionString;
  versionString = this.getVersionString();
  return versionString == null?0:__parseAndValidateInt($replaceFirst(versionString, ',.*', ''));
}
;
_.getVersionString = function getVersionString(){
  var rawVersionString;
  rawVersionString = this.getRawVersionString();
  return rawVersionString == null?null:$replaceFirst($replaceAll(rawVersionString, '\\D*(\\d+)', '$1,'), ',$', '');
}
;
var Lcom_allen_1sauer_gwt_voices_client_ui_impl_FlashMovieImpl_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.ui.impl', 'FlashMovieImpl', 1012, Ljava_lang_Object_2_classLit);
function FlashMovieImplIE6(){
}

defineClass(755, 1012, {}, FlashMovieImplIE6);
_.createElementMaybeSetURL = function createElementMaybeSetURL(id_0, url_0){
  var elem = $doc.createElement('object');
  elem.tabIndex = -1;
  elem.id = id_0;
  elem.classid = 'clsid:d27cdb6e-ae6d-11cf-96b8-444553540000';
  elem.codebase = 'http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0';
  elem.FlashVars = 'id=' + id_0;
  elem.Movie = url_0;
  return elem;
}
;
_.getRawVersionString = function getRawVersionString(){
  try {
    return (new ActiveXObject('ShockwaveFlash.ShockwaveFlash')).GetVariable('$version');
  }
   catch (e) {
    return null;
  }
}
;
var Lcom_allen_1sauer_gwt_voices_client_ui_impl_FlashMovieImplIE6_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.ui.impl', 'FlashMovieImplIE6', 755, Lcom_allen_1sauer_gwt_voices_client_ui_impl_FlashMovieImpl_2_classLit);
function $createElementMaybeSetURL(this$static, id_0, url_0){
  return this$static.impl.createElementMaybeSetURL(id_0, url_0);
}

function FlashMovieImplPlayN(){
  getUserAgent().indexOf('MSIE') != -1?(this.impl = new FlashMovieImplIE6):(this.impl = new FlashMovieImplSafari);
}

defineClass(723, 1012, {}, FlashMovieImplPlayN);
_.createElementMaybeSetURL = function createElementMaybeSetURL_0(id_0, url_0){
  return $createElementMaybeSetURL(this, id_0, url_0);
}
;
_.getMajorVersion = function getMajorVersion_0(){
  return this.impl.getMajorVersion();
}
;
_.getRawVersionString = function getRawVersionString_0(){
  return this.impl.getRawVersionString();
}
;
_.getVersionString = function getVersionString_0(){
  return this.impl.getVersionString();
}
;
var Lcom_allen_1sauer_gwt_voices_client_ui_impl_FlashMovieImplPlayN_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.ui.impl', 'FlashMovieImplPlayN', 723, Lcom_allen_1sauer_gwt_voices_client_ui_impl_FlashMovieImpl_2_classLit);
defineClass(1014, 1012, {});
_.createElementMaybeSetURL = function createElementMaybeSetURL_1(id_0, url_0){
  var elem = $doc.createElement('object');
  elem.setAttribute('id', id_0);
  elem.setAttribute('type', 'application/x-shockwave-flash');
  elem.setAttribute('data', url_0);
  var param = $doc.createElement('param');
  param.setAttribute('name', 'FlashVars');
  param.setAttribute('value', 'id=' + id_0);
  elem.appendChild(param);
  return elem;
}
;
_.getRawVersionString = function getRawVersionString_1(){
  var p = navigator.plugins['Shockwave Flash'];
  return p == null?null:p.description;
}
;
var Lcom_allen_1sauer_gwt_voices_client_ui_impl_FlashMovieImplStandard_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.ui.impl', 'FlashMovieImplStandard', 1014, Lcom_allen_1sauer_gwt_voices_client_ui_impl_FlashMovieImpl_2_classLit);
function FlashMovieImplSafari(){
}

defineClass(756, 1014, {}, FlashMovieImplSafari);
var Lcom_allen_1sauer_gwt_voices_client_ui_impl_FlashMovieImplSafari_2_classLit = createForClass('com.allen_sauer.gwt.voices.client.ui.impl', 'FlashMovieImplSafari', 756, Lcom_allen_1sauer_gwt_voices_client_ui_impl_FlashMovieImplStandard_2_classLit);
function $stop(elem){
  var parent_0 = elem.parentNode;
  parent_0 != null && parent_0.removeChild(elem);
}

function $createElement(url_0){
  var elem = $doc.createElement('object');
  elem.setAttribute('data', url_0);
  elem.setAttribute('autostart', 'true');
  return elem;
}

function $setVolume_0(elem, volume){
  elem.setAttribute('volume', '' + volume);
}

function $play(soundControllerElement, elem){
  var parent_0 = elem.parentNode;
  parent_0 != null && parent_0.removeChild(elem);
  soundControllerElement.appendChild(elem);
  return true;
}

var uniqueId = $intern_2;
function contains_1(arr){
  var element, element$index, element$max;
  for (element$index = 0 , element$max = arr.length; element$index < element$max; ++element$index) {
    element = arr[element$index];
    if ($equals(element, 'audio/mpeg')) {
      return true;
    }
  }
  return false;
}

function getSimpleName(clazz){
  var name_0;
  name_0 = ($ensureNamesAreInitialized(clazz) , clazz.typeName);
  return $substring(name_0, $lastIndexOf(name_0, fromCodePoint(46)) + 1);
}

function Joiner(separator){
  this.separator = checkNotNull(separator);
}

defineClass(231, 1, {}, Joiner);
_.toString_0 = function toString_6(part){
  checkNotNull(part);
  return instanceOf(part, 362)?part:toString__Ljava_lang_String___devirtual$(part);
}
;
_.useForNull = function useForNull(nullText){
  checkNotNull(nullText);
  return new Joiner$1(this, this, nullText);
}
;
var Lcom_google_common_base_Joiner_2_classLit = createForClass('com.google.common.base', 'Joiner', 231, Ljava_lang_Object_2_classLit);
function $toString_1(this$static, part){
  return part == null?this$static.val$nullText3:this$static.this$01.toString_0(part);
}

function Joiner$1(this$0, $anonymous0, val$nullText){
  this.this$01 = this$0;
  this.val$nullText3 = val$nullText;
  this.separator = $anonymous0.separator;
}

defineClass(574, 231, {}, Joiner$1);
_.toString_0 = function toString_7(part){
  return $toString_1(this, part);
}
;
_.useForNull = function useForNull_0(nullText){
  throw new UnsupportedOperationException_0('already specified useForNull');
}
;
var Lcom_google_common_base_Joiner$1_2_classLit = createForClass('com.google.common.base', 'Joiner/1', 574, Lcom_google_common_base_Joiner_2_classLit);
function $appendTo(this$static, appendable, parts){
  var e, entry;
  checkNotNull(appendable);
  if (parts.hasNext()) {
    entry = parts.next_0();
    $append_5(appendable, $toString_1(this$static.joiner, entry.getKey()));
    $append_5(appendable, this$static.keyValueSeparator);
    $append_5(appendable, $toString_1(this$static.joiner, entry.getValue()));
    while (parts.hasNext()) {
      $append_5(appendable, this$static.joiner.separator);
      e = parts.next_0();
      $append_5(appendable, $toString_1(this$static.joiner, e.getKey()));
      $append_5(appendable, this$static.keyValueSeparator);
      $append_5(appendable, $toString_1(this$static.joiner, e.getValue()));
    }
  }
  return appendable;
}

function $appendTo_0(this$static, builder, entries){
  $appendTo(this$static, builder, entries);
  return builder;
}

function Joiner$MapJoiner(joiner){
  this.joiner = joiner;
  this.keyValueSeparator = checkNotNull('=');
}

defineClass(573, 1, {}, Joiner$MapJoiner);
var Lcom_google_common_base_Joiner$MapJoiner_2_classLit = createForClass('com.google.common.base', 'Joiner/MapJoiner', 573, Ljava_lang_Object_2_classLit);
function $addHolder(this$static, name_0, value_0){
  var valueHolder, valueHolder_0;
  valueHolder = (valueHolder_0 = new MoreObjects$ToStringHelper$ValueHolder , this$static.holderTail = this$static.holderTail.next = valueHolder_0 , valueHolder_0);
  valueHolder.value_0 = value_0;
  valueHolder.name_0 = checkNotNull(name_0);
  return this$static;
}

function $toString_2(this$static){
  var arrayString, builder, nextSeparator, objectArray, value_0, valueHolder;
  nextSeparator = '';
  builder = $append_1($append_7(new StringBuilder_0, this$static.className), 123);
  for (valueHolder = this$static.holderHead.next; valueHolder; valueHolder = valueHolder.next) {
    value_0 = valueHolder.value_0;
    builder.string += nextSeparator;
    nextSeparator = ', ';
    valueHolder.name_0 != null && $append_1($append_7(builder, valueHolder.name_0), 61);
    if (value_0 != null && (getClass__Ljava_lang_Class___devirtual$(value_0).modifiers & 4) != 0) {
      objectArray = initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [value_0]);
      arrayString = deepToString(objectArray, new HashSet);
      $append_7(builder, $substring_0(arrayString, 1, arrayString.length - 1));
    }
     else {
      builder.string += value_0;
    }
  }
  return (builder.string += '}' , builder).string;
}

function MoreObjects$ToStringHelper(className){
  this.holderHead = new MoreObjects$ToStringHelper$ValueHolder;
  this.holderTail = this.holderHead;
  this.className = checkNotNull(className);
}

defineClass(190, 1, {}, MoreObjects$ToStringHelper);
_.toString$ = function toString_8(){
  return $toString_2(this);
}
;
var Lcom_google_common_base_MoreObjects$ToStringHelper_2_classLit = createForClass('com.google.common.base', 'MoreObjects/ToStringHelper', 190, Ljava_lang_Object_2_classLit);
function MoreObjects$ToStringHelper$ValueHolder(){
}

defineClass(299, 1, {}, MoreObjects$ToStringHelper$ValueHolder);
var Lcom_google_common_base_MoreObjects$ToStringHelper$ValueHolder_2_classLit = createForClass('com.google.common.base', 'MoreObjects/ToStringHelper/ValueHolder', 299, Ljava_lang_Object_2_classLit);
function equal(a, b){
  return maskUndefined(a) === maskUndefined(b) || a != null && equals_Ljava_lang_Object__Z__devirtual$(a, b);
}

function badPositionIndex(index_0, size_0){
  if (index_0 < 0) {
    return format_0('%s (%s) must not be negative', initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, ['index', valueOf(index_0)]));
  }
   else if (size_0 < 0) {
    throw new IllegalArgumentException_0('negative size: ' + size_0);
  }
   else {
    return format_0('%s (%s) must not be greater than size (%s)', initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, ['index', valueOf(index_0), valueOf(size_0)]));
  }
}

function checkArgument(expression){
  if (!expression) {
    throw new IllegalArgumentException;
  }
}

function checkArgument_0(expression, errorMessage){
  if (!expression) {
    throw new IllegalArgumentException_0('' + errorMessage);
  }
}

function checkNotNull(reference){
  if (reference == null) {
    throw new NullPointerException;
  }
  return reference;
}

function checkNotNull_0(reference, errorMessage){
  if (reference == null) {
    throw new NullPointerException_0('' + errorMessage);
  }
  return reference;
}

function checkPositionIndex(index_0, size_0){
  if (index_0 < 0 || index_0 > size_0) {
    throw new IndexOutOfBoundsException_0(badPositionIndex(index_0, size_0));
  }
  return index_0;
}

function checkState(expression){
  if (!expression) {
    throw new IllegalStateException;
  }
}

function checkState_0(expression, errorMessage){
  if (!expression) {
    throw new IllegalStateException_0('' + errorMessage);
  }
}

function format_0(template, args){
  var builder, i, placeholderStart, templateStart;
  template = '' + template;
  builder = new StringBuilder_0(template.length + 16 * args.length);
  templateStart = 0;
  i = 0;
  while (i < args.length) {
    placeholderStart = template.indexOf('%s', templateStart);
    if (placeholderStart == -1) {
      break;
    }
    $append_7(builder, template.substr(templateStart, placeholderStart - templateStart));
    $append_6(builder, args[i++]);
    templateStart = placeholderStart + 2;
  }
  $append_7(builder, __substr(template, templateStart, template.length - templateStart));
  if (i < args.length) {
    builder.string += ' [';
    $append_6(builder, args[i++]);
    while (i < args.length) {
      builder.string += ', ';
      $append_6(builder, args[i++]);
    }
    builder.string += ']';
  }
  return builder.string;
}

var Lcom_google_common_base_Predicate_2_classLit = createForInterface('com.google.common.base', 'Predicate');
function $clinit_Predicates(){
  $clinit_Predicates = emptyMethod;
  new Joiner(',');
}

function $apply(this$static, t){
  try {
    return this$static.target.contains_0(t);
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 44)) {
      return false;
    }
     else if (instanceOf($e0, 67)) {
      return false;
    }
     else 
      throw unwrap($e0);
  }
}

function Predicates$InPredicate(target){
  this.target = checkNotNull(target);
}

defineClass(275, 1, {275:1, 3:1}, Predicates$InPredicate);
_.apply_0 = function apply_0(t){
  return $apply(this, t);
}
;
_.equals$ = function equals_2(obj){
  var that;
  if (instanceOf(obj, 275)) {
    that = obj;
    return this.target.equals$(that.target);
  }
  return false;
}
;
_.hashCode$ = function hashCode_3(){
  return this.target.hashCode$();
}
;
_.toString$ = function toString_9(){
  return 'Predicates.in(' + this.target + ')';
}
;
var Lcom_google_common_base_Predicates$InPredicate_2_classLit = createForClass('com.google.common.base', 'Predicates/InPredicate', 275, Ljava_lang_Object_2_classLit);
defineClass(85, 1, $intern_4);
_.remove_1 = function remove_4(){
  throw new UnsupportedOperationException;
}
;
var Lcom_google_common_collect_UnmodifiableIterator_2_classLit = createForClass('com.google.common.collect', 'UnmodifiableIterator', 85, Ljava_lang_Object_2_classLit);
defineClass(991, 85, $intern_4);
var Lcom_google_common_collect_UnmodifiableListIterator_2_classLit = createForClass('com.google.common.collect', 'UnmodifiableListIterator', 991, Lcom_google_common_collect_UnmodifiableIterator_2_classLit);
defineClass(564, 991, $intern_4);
_.hasNext = function hasNext(){
  return this.position_0 < this.size_0;
}
;
_.hasPrevious = function hasPrevious(){
  return this.position_0 > 0;
}
;
_.next_0 = function next_0(){
  if (this.position_0 >= this.size_0) {
    throw new NoSuchElementException;
  }
  return $get_2(this, this.position_0++);
}
;
_.previous_0 = function previous_0(){
  if (this.position_0 <= 0) {
    throw new NoSuchElementException;
  }
  return $get_2(this, --this.position_0);
}
;
_.position_0 = 0;
_.size_0 = 0;
var Lcom_google_common_collect_AbstractIndexedListIterator_2_classLit = createForClass('com.google.common.collect', 'AbstractIndexedListIterator', 564, Lcom_google_common_collect_UnmodifiableListIterator_2_classLit);
function $hasNext(this$static){
  checkState(this$static.state != 3);
  switch (this$static.state) {
    case 2:
      return false;
    case 0:
      return true;
  }
  return $tryToComputeNext(this$static);
}

function $next(this$static){
  var result;
  if (!$hasNext(this$static)) {
    throw new NoSuchElementException;
  }
  this$static.state = 1;
  result = this$static.next;
  this$static.next = null;
  return result;
}

function $tryToComputeNext(this$static){
  this$static.state = 3;
  this$static.next = $computeNext(this$static);
  if (this$static.state != 2) {
    this$static.state = 0;
    return true;
  }
  return false;
}

defineClass(563, 85, $intern_4);
_.hasNext = function hasNext_0(){
  return $hasNext(this);
}
;
_.next_0 = function next_1(){
  return $next(this);
}
;
_.state = 1;
var Lcom_google_common_collect_AbstractIterator_2_classLit = createForClass('com.google.common.collect', 'AbstractIterator', 563, Lcom_google_common_collect_UnmodifiableIterator_2_classLit);
defineClass(992, 1, $intern_5);
_.equals$ = function equals_3(object){
  var that;
  if (instanceOf(object, 42)) {
    that = object;
    return equal(this.key_0, that.getKey()) && equal(this.value_0, that.getValue());
  }
  return false;
}
;
_.hashCode$ = function hashCode_4(){
  var k, v;
  k = this.key_0;
  v = this.value_0;
  return (k == null?0:hashCode__I__devirtual$(k)) ^ (v == null?0:hashCode__I__devirtual$(v));
}
;
_.setValue = function setValue(value_0){
  throw new UnsupportedOperationException;
}
;
_.toString$ = function toString_10(){
  return this.key_0 + '=' + this.value_0;
}
;
var Lcom_google_common_collect_AbstractMapEntry_2_classLit = createForClass('com.google.common.collect', 'AbstractMapEntry', 992, Ljava_lang_Object_2_classLit);
function checkEntryNotNull(key, value_0){
  if (key == null) {
    throw new NullPointerException_0('null key in entry: null=' + value_0);
  }
   else if (value_0 == null) {
    throw new NullPointerException_0('null value in entry: ' + key + '=null');
  }
}

function checkNonnegative(value_0, name_0){
  if (value_0 < 0) {
    throw new IllegalArgumentException_0(name_0 + ' cannot be negative but was: ' + value_0);
  }
  return value_0;
}

function $clinit_Collections2(){
  $clinit_Collections2 = emptyMethod;
  STANDARD_JOINER = (new Joiner(', ')).useForNull('null');
}

function filter_0(unfiltered, predicate){
  $clinit_Collections2();
  return new Collections2$FilteredCollection(checkNotNull(unfiltered), checkNotNull(predicate));
}

function newStringBuilderForCollection(size_0){
  $clinit_Collections2();
  checkNonnegative(size_0, 'size');
  return new StringBuilder_0(toInt(lt(mul(fromInt(size_0), {l:8, m:0, h:0}), {l:0, m:256, h:0})?mul(fromInt(size_0), {l:8, m:0, h:0}):{l:0, m:256, h:0}));
}

function safeContains(collection, object){
  $clinit_Collections2();
  checkNotNull(collection);
  try {
    return collection.contains_0(object);
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 67)) {
      return false;
    }
     else if (instanceOf($e0, 44)) {
      return false;
    }
     else 
      throw unwrap($e0);
  }
}

var STANDARD_JOINER;
function $contains(this$static, element){
  if (safeContains(this$static.unfiltered, element)) {
    return this$static.predicate.apply_0(element);
  }
  return false;
}

function $iterator(this$static){
  return filter_1(this$static.unfiltered.iterator(), this$static.predicate);
}

function Collections2$FilteredCollection(unfiltered, predicate){
  this.unfiltered = unfiltered;
  this.predicate = predicate;
}

defineClass(562, 960, {}, Collections2$FilteredCollection);
_.add_0 = function add_5(element){
  checkArgument(this.predicate.apply_0(element));
  return this.unfiltered.add_0(element);
}
;
_.contains_0 = function contains_2(element){
  return $contains(this, element);
}
;
_.containsAll = function containsAll_0(collection){
  return $clinit_Collections2() , all_0(collection, ($clinit_Predicates() , new Predicates$InPredicate(this)));
}
;
_.isEmpty = function isEmpty_1(){
  return !any(this.unfiltered, this.predicate);
}
;
_.iterator = function iterator_1(){
  return $iterator(this);
}
;
_.remove = function remove_5(element){
  return $contains(this, element) && this.unfiltered.remove(element);
}
;
_.size_1 = function size_2(){
  return size_10(filter_1(this.unfiltered.iterator(), this.predicate));
}
;
_.toArray = function toArray_3(){
  return $toArray_1(newArrayList_0(filter_1(this.unfiltered.iterator(), this.predicate)));
}
;
_.toArray_0 = function toArray_4(array){
  return $toArray_2(newArrayList_0(filter_1(this.unfiltered.iterator(), this.predicate)), array);
}
;
var Lcom_google_common_collect_Collections2$FilteredCollection_2_classLit = createForClass('com.google.common.collect', 'Collections2/FilteredCollection', 562, Ljava_util_AbstractCollection_2_classLit);
defineClass(986, 1, {});
_.toString$ = function toString_11(){
  return $entrySet_0(this.this$01.delegate).coll.toString$();
}
;
var Lcom_google_common_collect_ForwardingObject_2_classLit = createForClass('com.google.common.collect', 'ForwardingObject', 986, Ljava_lang_Object_2_classLit);
defineClass(987, 986, {});
_.add_0 = function add_6(element){
  return $add_9($entrySet_0(this.this$01.delegate));
}
;
_.contains_0 = function contains_3(object){
  return $contains_4($entrySet_0(this.this$01.delegate), object);
}
;
_.containsAll = function containsAll_1(collection){
  return $containsAll_0($entrySet_0(this.this$01.delegate), collection);
}
;
_.isEmpty = function isEmpty_2(){
  return $entrySet_0(this.this$01.delegate).coll.isEmpty();
}
;
_.iterator = function iterator_2(){
  return $iterator_1($entrySet_0(this.this$01.delegate));
}
;
_.remove = function remove_6(object){
  return $remove_9($entrySet_0(this.this$01.delegate));
}
;
_.size_1 = function size_3(){
  return $entrySet_0(this.this$01.delegate).coll.size_1();
}
;
_.toArray = function toArray_5(){
  return $toArray_3($entrySet_0(this.this$01.delegate));
}
;
_.toArray_0 = function toArray_6(array){
  return $toArray_4($entrySet_0(this.this$01.delegate), array);
}
;
var Lcom_google_common_collect_ForwardingCollection_2_classLit = createForClass('com.google.common.collect', 'ForwardingCollection', 987, Lcom_google_common_collect_ForwardingObject_2_classLit);
function $clinit_ImmutableCollection(){
  $clinit_ImmutableCollection = emptyMethod;
  new ForwardingImmutableCollection(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST));
}

function $asList(this$static){
  var list;
  list = this$static.asList;
  return !list?(this$static.asList = this$static.createAsList()):list;
}

defineClass(56, 960, {56:1, 3:1});
_.add_0 = function add_7(e){
  throw new UnsupportedOperationException;
}
;
_.asList_0 = function asList(){
  return $asList(this);
}
;
_.contains_0 = function contains_4(object){
  return object != null && $advanceToFind(this, object, false);
}
;
_.createAsList = function createAsList(){
  switch (this.size_1()) {
    case 0:
      return $clinit_ImmutableList() , $clinit_ImmutableList() , EMPTY;
    case 1:
      return $clinit_ImmutableList() , new SingletonImmutableList(this.iterator_0().next_0());
    default:return new RegularImmutableAsList_0(this, this.toArray());
  }
}
;
_.iterator = function iterator_3(){
  return this.iterator_0();
}
;
_.remove = function remove_7(object){
  throw new UnsupportedOperationException;
}
;
var Lcom_google_common_collect_ImmutableCollection_2_classLit = createForClass('com.google.common.collect', 'ImmutableCollection', 56, Ljava_util_AbstractCollection_2_classLit);
function ForwardingImmutableCollection(delegate){
  this.delegate = delegate;
}

defineClass(603, 56, {56:1, 3:1}, ForwardingImmutableCollection);
_.contains_0 = function contains_5(object){
  return false;
}
;
_.containsAll = function containsAll_2(targets){
  return $containsAll(this.delegate, targets);
}
;
_.isEmpty = function isEmpty_3(){
  return true;
}
;
_.iterator_0 = function iterator_4(){
  return unmodifiableIterator(($clinit_Collections() , $clinit_Collections$EmptyListIterator() , INSTANCE_0));
}
;
_.size_1 = function size_4(){
  return 0;
}
;
_.toArray = function toArray_7(){
  return $toArray(this.delegate);
}
;
_.toArray_0 = function toArray_8(other){
  return $toArray_0(this.delegate, other);
}
;
_.toString$ = function toString_12(){
  return $toString_0(this.delegate);
}
;
var Lcom_google_common_collect_ForwardingImmutableCollection_2_classLit = createForClass('com.google.common.collect', 'ForwardingImmutableCollection', 603, Lcom_google_common_collect_ImmutableCollection_2_classLit);
function $clinit_ImmutableList(){
  $clinit_ImmutableList = emptyMethod;
  $clinit_ImmutableCollection();
  EMPTY = new RegularImmutableList(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST));
}

function $listIterator(this$static, index_0){
  return new ImmutableList$1(this$static, this$static.size_1(), index_0);
}

function arrayCopy(dest, source){
  arraycopy(source, 0, dest, 0, source.length);
}

function copyFromCollection(collection){
  $clinit_ImmutableList();
  var elements, list;
  elements = collection.toArray();
  switch (elements.length) {
    case 0:
      return EMPTY;
    case 1:
      list = new SingletonImmutableList(elements[0]);
      return list;
    default:return new RegularImmutableList(nullCheckedList(elements));
  }
}

function copyOf(elements){
  $clinit_ImmutableList();
  var list;
  if (instanceOf(elements, 56)) {
    list = elements;
    return list.asList_0();
  }
  return copyFromCollection(elements);
}

function nullCheckedList(array){
  $clinit_ImmutableList();
  var i, len;
  for (i = 0 , len = array.length; i < len; i++) {
    if (array[i] == null) {
      throw new NullPointerException_0('at index ' + i);
    }
  }
  return new Arrays$ArrayList(array);
}

function of(others){
  $clinit_ImmutableList();
  var array;
  array = initDim(Ljava_lang_Object_2_classLit, $intern_1, 1, 12 + others.length, 3, 1);
  arrayCopy(array, initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, ['Cross-Site Scripting', 'Denial of Service', 'Phishing Scam', 'SQL Injection', 'Password Cracking', 'Privilege Escalation', 'Session Hijacking', 'Weak Passwords', 'Man in the Middle', 'DNS Spoofing', 'Improper Input Validation', 'Malware']));
  arraycopy(others, 0, array, 12, others.length);
  return new RegularImmutableList(nullCheckedList(array));
}

function unsafeDelegateList(list){
  switch (list.array.length) {
    case 0:
      return EMPTY;
    case 1:
      return new SingletonImmutableList($next_2(new AbstractList$IteratorImpl(list)));
    default:return new RegularImmutableList(list);
  }
}

defineClass(989, 56, $intern_6);
_.asList_0 = function asList_0(){
  return this;
}
;
_.equals$ = function equals_4(obj){
  return equalsImpl(this, obj);
}
;
_.hashCode$ = function hashCode_5(){
  return hashCodeImpl(this);
}
;
_.iterator_0 = function iterator_5(){
  return this.listIterator_1(0);
}
;
_.iterator = function iterator_6(){
  return this.iterator_0();
}
;
_.listIterator = function listIterator_1(){
  return this.listIterator_1(0);
}
;
_.listIterator_1 = function listIterator_2(index_0){
  return $listIterator(this, index_0);
}
;
_.listIterator_0 = function listIterator_3(index_0){
  return this.listIterator_1(index_0);
}
;
var EMPTY;
var Lcom_google_common_collect_ImmutableList_2_classLit = createForClass('com.google.common.collect', 'ImmutableList', 989, Lcom_google_common_collect_ImmutableCollection_2_classLit);
function $get_0(this$static, index_0){
  return this$static.delegateList_0().get_0(index_0);
}

defineClass(997, 989, $intern_6);
_.contains_0 = function contains_6(object){
  return object != null && this.delegateList_0().contains_0(object);
}
;
_.containsAll = function containsAll_3(targets){
  return this.delegateList_0().containsAll(targets);
}
;
_.equals$ = function equals_5(obj){
  return this.delegateList_0().equals$(obj);
}
;
_.get_0 = function get_1(index_0){
  return $get_0(this, index_0);
}
;
_.hashCode$ = function hashCode_6(){
  return this.delegateList_0().hashCode$();
}
;
_.isEmpty = function isEmpty_4(){
  return this.delegateList_0().isEmpty();
}
;
_.iterator_0 = function iterator_7(){
  return unmodifiableIterator(this.delegateList_0().iterator());
}
;
_.size_1 = function size_5(){
  return this.delegateList_0().size_1();
}
;
_.toArray = function toArray_9(){
  return this.delegateList_0().toArray_0(initDim(Ljava_lang_Object_2_classLit, $intern_1, 1, this.delegateList_0().size_1(), 3, 1));
}
;
_.toArray_0 = function toArray_10(other){
  return this.delegateList_0().toArray_0(other);
}
;
_.toString$ = function toString_13(){
  return this.delegateList_0().toString$();
}
;
var Lcom_google_common_collect_ForwardingImmutableList_2_classLit = createForClass('com.google.common.collect', 'ForwardingImmutableList', 997, Lcom_google_common_collect_ImmutableList_2_classLit);
function $entrySet(this$static){
  if (this$static.cachedEntrySet) {
    return this$static.cachedEntrySet;
  }
  return this$static.cachedEntrySet = this$static.createEntrySet();
}

function $keyIterator(this$static){
  var entryIterator;
  entryIterator = $entrySet(this$static).iterator_0();
  return new ImmutableMap$1(entryIterator);
}

function $keySet(this$static){
  if (this$static.cachedKeySet) {
    return this$static.cachedKeySet;
  }
  return this$static.cachedKeySet = this$static.createKeySet();
}

function copyOf_0(map_0){
  var e, e$iterator, entry, orderPreservingCopy, size_0;
  size_0 = map_0.map_0.size_1();
  switch (size_0) {
    case 0:
      return $clinit_RegularImmutableBiMap() , EMPTY_0;
    case 1:
      entry = getOnlyElement(new LinkedHashMap$EntrySet$EntryIterator(new LinkedHashMap$EntrySet(map_0)));
      return of_0(entry.getKey(), entry.getValue());
    default:orderPreservingCopy = ($clinit_Maps() , new LinkedHashMap);
      for (e$iterator = new LinkedHashMap$EntrySet$EntryIterator(new LinkedHashMap$EntrySet(map_0)); e$iterator.next != e$iterator.this$11.this$01.head;) {
        e = (checkStructuralChange(e$iterator.this$11.this$01.map_0, e$iterator) , checkCriticalElement(e$iterator.next != e$iterator.this$11.this$01.head) , e$iterator.last = e$iterator.next , e$iterator.next = e$iterator.next.next , e$iterator.last);
        $put_7(orderPreservingCopy, checkNotNull(e.key_0), checkNotNull(e.value_0));
      }

      return new RegularImmutableMap(orderPreservingCopy);
  }
}

function fromEntryList(entries){
  var entry, entryArray, size_0;
  size_0 = entries.array.length;
  switch (size_0) {
    case 0:
      return $clinit_RegularImmutableBiMap() , EMPTY_0;
    case 1:
      entry = getOnlyElement(new AbstractList$IteratorImpl(entries));
      return of_0(entry.getKey(), entry.getValue());
    default:entryArray = $toArray_2(entries, initDim(Ljava_util_Map$Entry_2_classLit, $intern_1, 42, entries.array.length, 0, 1));
      return new RegularImmutableMap_0(entryArray);
  }
}

function of_0(k1, v1){
  return checkEntryNotNull(k1, v1) , new SingletonImmutableBiMap(k1, v1);
}

defineClass(332, 1, $intern_7);
_.containsKey = function containsKey(key){
  return this.get_1(key) != null;
}
;
_.createKeySet = function createKeySet(){
  return new ImmutableMapKeySet(this);
}
;
_.entrySet_0 = function entrySet(){
  return $entrySet(this);
}
;
_.equals$ = function equals_6(object){
  return equalsImpl_0(this, object);
}
;
_.hashCode$ = function hashCode_7(){
  return $entrySet(this).hashCode$();
}
;
_.isEmpty = function isEmpty_5(){
  return this.size_1() == 0;
}
;
_.keySet_0 = function keySet(){
  return $keySet(this);
}
;
_.put = function put(k, v){
  throw new UnsupportedOperationException;
}
;
_.remove_2 = function remove_8(o){
  throw new UnsupportedOperationException;
}
;
_.toString$ = function toString_14(){
  var sb;
  return $clinit_Maps() , sb = $append_1(newStringBuilderForCollection(this.size_1()), 123) , $appendTo_0(STANDARD_JOINER_0, sb, $entrySet(this).iterator()) , (sb.string += '}' , sb).string;
}
;
_.cachedEntrySet = null;
_.cachedKeySet = null;
var Lcom_google_common_collect_ImmutableMap_2_classLit = createForClass('com.google.common.collect', 'ImmutableMap', 332, Ljava_lang_Object_2_classLit);
function $containsKey(this$static, key){
  return safeContainsKey(this$static.delegate, key);
}

function $get_1(this$static, key){
  return key == null?null:safeGet(this$static.delegate, key);
}

function ForwardingImmutableMap(delegate){
  this.delegate = ($clinit_Collections() , new Collections$UnmodifiableMap(delegate));
}

function ForwardingImmutableMap_0(entries){
  var delegate, entry, entry$index, entry$max, key, previous;
  delegate = ($clinit_Maps() , new LinkedHashMap);
  for (entry$index = 0 , entry$max = entries.length; entry$index < entry$max; ++entry$index) {
    entry = entries[entry$index];
    key = checkNotNull(entry.getKey());
    previous = $put_7(delegate, key, checkNotNull(entry.getValue()));
    if (previous != null) {
      throw new IllegalArgumentException_0('duplicate key: ' + key);
    }
  }
  this.delegate = ($clinit_Collections() , new Collections$UnmodifiableMap(delegate));
}

defineClass(258, 332, $intern_7);
_.containsKey = function containsKey_0(key){
  return $containsKey(this, key);
}
;
_.createEntrySet = function createEntrySet(){
  return unsafeDelegate(new ForwardingImmutableMap$1(this));
}
;
_.createKeySet = function createKeySet_0(){
  return unsafeDelegate($keySet_0(this.delegate));
}
;
_.equals$ = function equals_7(object){
  return $equals_0(this.delegate, object);
}
;
_.get_1 = function get_2(key){
  return $get_1(this, key);
}
;
_.hashCode$ = function hashCode_8(){
  return this.delegate.map_0.hashCode$();
}
;
_.isEmpty = function isEmpty_6(){
  return this.delegate.map_0.isEmpty();
}
;
_.size_1 = function size_6(){
  return this.delegate.map_0.size_1();
}
;
_.toString$ = function toString_15(){
  return this.delegate.map_0.toString$();
}
;
var Lcom_google_common_collect_ForwardingImmutableMap_2_classLit = createForClass('com.google.common.collect', 'ForwardingImmutableMap', 258, Lcom_google_common_collect_ImmutableMap_2_classLit);
defineClass(988, 987, $intern_8);
_.equals$ = function equals_8(object){
  return object === this || $equals_1($entrySet_0(this.this$01.delegate), object);
}
;
_.hashCode$ = function hashCode_9(){
  return $entrySet_0(this.this$01.delegate).coll.hashCode$();
}
;
var Lcom_google_common_collect_ForwardingSet_2_classLit = createForClass('com.google.common.collect', 'ForwardingSet', 988, Lcom_google_common_collect_ForwardingCollection_2_classLit);
function ForwardingImmutableMap$1(this$0){
  this.this$01 = this$0;
}

defineClass(818, 988, $intern_8, ForwardingImmutableMap$1);
_.contains_0 = function contains_7(object){
  if (instanceOf(object, 42) && object.getKey() == null) {
    return false;
  }
  try {
    return $contains_4($entrySet_0(this.this$01.delegate), object);
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 67)) {
      return false;
    }
     else 
      throw unwrap($e0);
  }
}
;
_.toArray_0 = function toArray_11(array){
  var result;
  result = $toArray_4($entrySet_0(this.this$01.delegate), array);
  $entrySet_0(this.this$01.delegate).coll.size_1() < result.length && (result[$entrySet_0(this.this$01.delegate).coll.size_1()] = null);
  return result;
}
;
var Lcom_google_common_collect_ForwardingImmutableMap$1_2_classLit = createForClass('com.google.common.collect', 'ForwardingImmutableMap/1', 818, Lcom_google_common_collect_ForwardingSet_2_classLit);
function unsafeDelegate(delegate){
  $clinit_ImmutableCollection();
  switch (delegate.size_1()) {
    case 0:
      return $clinit_RegularImmutableSet() , EMPTY_1;
    case 1:
      return new SingletonImmutableSet(delegate.iterator().next_0());
    default:return new RegularImmutableSet(delegate);
  }
}

defineClass(1015, 56, $intern_9);
_.equals$ = function equals_9(obj){
  return equalsImpl_1(this, obj);
}
;
_.hashCode$ = function hashCode_10(){
  return hashCodeImpl_0(this);
}
;
var Lcom_google_common_collect_ImmutableSet_2_classLit = createForClass('com.google.common.collect', 'ImmutableSet', 1015, Lcom_google_common_collect_ImmutableCollection_2_classLit);
defineClass(910, 1015, $intern_9);
_.contains_0 = function contains_8(object){
  return object != null && this.delegate.contains_0(object);
}
;
_.containsAll = function containsAll_4(targets){
  return this.delegate.containsAll(targets);
}
;
_.hashCode$ = function hashCode_11(){
  return this.delegate.coll.hashCode$();
}
;
_.isEmpty = function isEmpty_7(){
  return this.delegate.isEmpty();
}
;
_.iterator_0 = function iterator_8(){
  return unmodifiableIterator(this.delegate.iterator());
}
;
_.iterator = function iterator_9(){
  return unmodifiableIterator(this.delegate.iterator());
}
;
_.size_1 = function size_7(){
  return this.delegate.size_1();
}
;
_.toArray = function toArray_12(){
  return this.delegate.toArray();
}
;
_.toArray_0 = function toArray_13(other){
  return this.delegate.toArray_0(other);
}
;
_.toString$ = function toString_16(){
  return this.delegate.coll.toString$();
}
;
var Lcom_google_common_collect_ForwardingImmutableSet_2_classLit = createForClass('com.google.common.collect', 'ForwardingImmutableSet', 910, Lcom_google_common_collect_ImmutableSet_2_classLit);
defineClass(1007, 989, $intern_6);
_.contains_0 = function contains_9(target){
  return this.delegateCollection().contains_0(target);
}
;
_.isEmpty = function isEmpty_8(){
  return this.delegateCollection().isEmpty();
}
;
_.size_1 = function size_8(){
  return this.delegateCollection().size_1();
}
;
var Lcom_google_common_collect_ImmutableAsList_2_classLit = createForClass('com.google.common.collect', 'ImmutableAsList', 1007, Lcom_google_common_collect_ImmutableList_2_classLit);
function ImmutableBiMap(delegate){
  ForwardingImmutableMap.call(this, delegate);
}

defineClass(350, 258, $intern_7);
var Lcom_google_common_collect_ImmutableBiMap_2_classLit = createForClass('com.google.common.collect', 'ImmutableBiMap', 350, Lcom_google_common_collect_ForwardingImmutableMap_2_classLit);
function $addAll_1(this$static, elements){
  var element, element$iterator;
  checkNotNull(elements);
  for (element$iterator = unmodifiableIterator(elements.delegate.iterator()); element$iterator.hasNext();) {
    element = element$iterator.next_0();
    $add_1(this$static, checkNotNull(element));
  }
  return this$static;
}

defineClass(990, 1, {});
var Lcom_google_common_collect_ImmutableCollection$Builder_2_classLit = createForClass('com.google.common.collect', 'ImmutableCollection/Builder', 990, Ljava_lang_Object_2_classLit);
function ImmutableEntry(key, value_0){
  this.key_0 = key;
  this.value_0 = value_0;
}

defineClass(849, 992, {3:1, 42:1}, ImmutableEntry);
_.getKey = function getKey(){
  return this.key_0;
}
;
_.getValue = function getValue(){
  return this.value_0;
}
;
_.setValue = function setValue_0(value_0){
  throw new UnsupportedOperationException;
}
;
var Lcom_google_common_collect_ImmutableEntry_2_classLit = createForClass('com.google.common.collect', 'ImmutableEntry', 849, Lcom_google_common_collect_AbstractMapEntry_2_classLit);
function $get_2(this$static, index_0){
  return this$static.this$01.get_0(index_0);
}

function ImmutableList$1(this$0, $anonymous0, $anonymous1){
  this.this$01 = this$0;
  checkPositionIndex($anonymous1, $anonymous0);
  this.size_0 = $anonymous0;
  this.position_0 = $anonymous1;
}

defineClass(565, 564, $intern_4, ImmutableList$1);
var Lcom_google_common_collect_ImmutableList$1_2_classLit = createForClass('com.google.common.collect', 'ImmutableList/1', 565, Lcom_google_common_collect_AbstractIndexedListIterator_2_classLit);
function $add_1(this$static, element){
  return $add_0(this$static.contents, checkNotNull(element)) , this$static;
}

function $add_2(this$static, element){
  $add_0(this$static.contents, checkNotNull(element));
  return this$static;
}

function $addAll_2(this$static, elements){
  $addAll_1(this$static, elements);
  return this$static;
}

function ImmutableList$Builder(){
  this.contents = new ArrayList;
}

defineClass(297, 990, {}, ImmutableList$Builder);
var Lcom_google_common_collect_ImmutableList$Builder_2_classLit = createForClass('com.google.common.collect', 'ImmutableList/Builder', 297, Lcom_google_common_collect_ImmutableCollection$Builder_2_classLit);
function ImmutableMap$1(val$entryIterator){
  this.val$entryIterator2 = val$entryIterator;
}

defineClass(758, 85, $intern_4, ImmutableMap$1);
_.hasNext = function hasNext_1(){
  return this.val$entryIterator2.hasNext();
}
;
_.next_0 = function next_2(){
  return this.val$entryIterator2.next_0().getKey();
}
;
var Lcom_google_common_collect_ImmutableMap$1_2_classLit = createForClass('com.google.common.collect', 'ImmutableMap/1', 758, Lcom_google_common_collect_UnmodifiableIterator_2_classLit);
function $put(this$static, key, value_0){
  $add_0(this$static.entries, (checkEntryNotNull(key, value_0) , $clinit_Maps() , new ImmutableEntry(key, value_0)));
  return this$static;
}

function ImmutableMap$Builder(){
  this.entries = new ArrayList;
}

defineClass(333, 1, {}, ImmutableMap$Builder);
var Lcom_google_common_collect_ImmutableMap$Builder_2_classLit = createForClass('com.google.common.collect', 'ImmutableMap/Builder', 333, Ljava_lang_Object_2_classLit);
defineClass(1016, 1015, $intern_9);
_.createAsList = function createAsList_0(){
  return new ImmutableSet$Indexed$1(this);
}
;
_.iterator_0 = function iterator_10(){
  return $asList(this).iterator_0();
}
;
_.iterator = function iterator_11(){
  return $keyIterator(this.map_0);
}
;
var Lcom_google_common_collect_ImmutableSet$Indexed_2_classLit = createForClass('com.google.common.collect', 'ImmutableSet/Indexed', 1016, Lcom_google_common_collect_ImmutableSet_2_classLit);
function $get_3(this$static, index_0){
  return $asList($entrySet(this$static.map_0)).get_0(index_0).getKey();
}

function ImmutableMapKeySet(map_0){
  $clinit_ImmutableCollection();
  this.map_0 = map_0;
}

defineClass(783, 1016, $intern_9, ImmutableMapKeySet);
_.contains_0 = function contains_10(object){
  return this.map_0.containsKey(object);
}
;
_.iterator_0 = function iterator_12(){
  return $keyIterator(this.map_0);
}
;
_.size_1 = function size_9(){
  return this.map_0.size_1();
}
;
var Lcom_google_common_collect_ImmutableMapKeySet_2_classLit = createForClass('com.google.common.collect', 'ImmutableMapKeySet', 783, Lcom_google_common_collect_ImmutableSet$Indexed_2_classLit);
function ImmutableSet$Indexed$1(this$1){
  $clinit_ImmutableList();
  this.this$11 = this$1;
}

defineClass(759, 1007, $intern_6, ImmutableSet$Indexed$1);
_.delegateCollection = function delegateCollection(){
  return this.this$11;
}
;
_.get_0 = function get_3(index_0){
  return $get_3(this.this$11, index_0);
}
;
var Lcom_google_common_collect_ImmutableSet$Indexed$1_2_classLit = createForClass('com.google.common.collect', 'ImmutableSet/Indexed/1', 759, Lcom_google_common_collect_ImmutableAsList_2_classLit);
function addAll(addTo, elementsToAdd){
  var c;
  if (elementsToAdd) {
    c = ($clinit_Collections2() , elementsToAdd);
    return $addAll(addTo, c);
  }
  return addAll_0(addTo, checkNotNull(null).iterator());
}

function all_0(iterable, predicate){
  return all_1(iterable.iterator(), predicate);
}

function any(iterable, predicate){
  return indexOf(iterable.iterator(), predicate) != -1;
}

function addAll_0(addTo, iterator){
  var wasModified;
  checkNotNull(addTo);
  checkNotNull(iterator);
  wasModified = false;
  while (iterator.hasNext()) {
    wasModified = wasModified | addTo.add_0(iterator.next_0());
  }
  return wasModified;
}

function all_1(iterator, predicate){
  var element;
  checkNotNull(predicate);
  while (iterator.hasNext()) {
    element = iterator.next_0();
    if (!$apply(predicate, element)) {
      return false;
    }
  }
  return true;
}

function elementsEqual(iterator1, iterator2){
  var o1, o2;
  while (iterator1.hasNext()) {
    if (!iterator2.hasNext()) {
      return false;
    }
    o1 = iterator1.next_0();
    o2 = iterator2.next_0();
    if (!(maskUndefined(o1) === maskUndefined(o2) || o1 != null && equals_Ljava_lang_Object__Z__devirtual$(o1, o2))) {
      return false;
    }
  }
  return !iterator2.hasNext();
}

function filter_1(unfiltered, predicate){
  checkNotNull(unfiltered);
  checkNotNull(predicate);
  return new Iterators$7(unfiltered, predicate);
}

function getOnlyElement(iterator){
  var first, i, sb;
  first = iterator.next_0();
  if (!iterator.hasNext()) {
    return first;
  }
  sb = new StringBuilder;
  sb.string += 'expected one element but was: <' + first;
  for (i = 0; i < 4 && iterator.hasNext(); i++) {
    $append_7(sb, ', ' + iterator.next_0());
  }
  iterator.hasNext() && (sb.string += ', ...' , sb);
  sb.string += '>';
  throw new IllegalArgumentException_0(sb.string);
}

function indexOf(iterator, predicate){
  var current, i;
  checkNotNull_0(predicate, 'predicate');
  for (i = 0; iterator.hasNext(); i++) {
    current = iterator.next_0();
    if (predicate.apply_0(current)) {
      return i;
    }
  }
  return -1;
}

function size_10(iterator){
  var count;
  count = 0;
  while ($hasNext(iterator)) {
    $next(iterator);
    ++count;
  }
  return count;
}

function unmodifiableIterator(iterator){
  checkNotNull(iterator);
  if (instanceOf(iterator, 85)) {
    return iterator;
  }
  return new Iterators$3(iterator);
}

function Iterators$12(val$value){
  this.val$value1 = val$value;
}

defineClass(324, 85, $intern_4, Iterators$12);
_.hasNext = function hasNext_2(){
  return !this.done;
}
;
_.next_0 = function next_3(){
  if (this.done) {
    throw new NoSuchElementException;
  }
  this.done = true;
  return this.val$value1;
}
;
_.done = false;
var Lcom_google_common_collect_Iterators$12_2_classLit = createForClass('com.google.common.collect', 'Iterators/12', 324, Lcom_google_common_collect_UnmodifiableIterator_2_classLit);
function Iterators$3(val$iterator){
  this.val$iterator1 = val$iterator;
}

defineClass(653, 85, $intern_4, Iterators$3);
_.hasNext = function hasNext_3(){
  return this.val$iterator1.hasNext();
}
;
_.next_0 = function next_4(){
  return this.val$iterator1.next_0();
}
;
var Lcom_google_common_collect_Iterators$3_2_classLit = createForClass('com.google.common.collect', 'Iterators/3', 653, Lcom_google_common_collect_UnmodifiableIterator_2_classLit);
function $computeNext(this$static){
  var element;
  while (this$static.val$unfiltered1.hasNext()) {
    element = this$static.val$unfiltered1.next_0();
    if (this$static.val$predicate2.apply_0(element)) {
      return element;
    }
  }
  return this$static.state = 2 , null;
}

function Iterators$7(val$unfiltered, val$predicate){
  this.val$unfiltered1 = val$unfiltered;
  this.val$predicate2 = val$predicate;
}

defineClass(654, 563, $intern_4, Iterators$7);
var Lcom_google_common_collect_Iterators$7_2_classLit = createForClass('com.google.common.collect', 'Iterators/7', 654, Lcom_google_common_collect_AbstractIterator_2_classLit);
function computeArrayListCapacity(arraySize){
  checkNonnegative(arraySize, 'arraySize');
  return saturatedCast(add_8(add_8({l:5, m:0, h:0}, fromInt(arraySize)), fromInt(~~(arraySize / 10))));
}

function equalsImpl(thisList, other){
  var i, otherList, size_0;
  if (maskUndefined(other) === maskUndefined(checkNotNull(thisList))) {
    return true;
  }
  if (!instanceOf(other, 50)) {
    return false;
  }
  otherList = other;
  size_0 = thisList.size_1();
  if (size_0 != otherList.size_1()) {
    return false;
  }
  if (instanceOf(otherList, 60)) {
    for (i = 0; i < size_0; i++) {
      if (!equal(thisList.get_0(i), otherList.get_0(i))) {
        return false;
      }
    }
    return true;
  }
   else {
    return elementsEqual(thisList.iterator_0(), otherList.iterator());
  }
}

function hashCodeImpl(list){
  var hashCode, o, o$iterator;
  hashCode = 1;
  for (o$iterator = list.iterator_0(); o$iterator.hasNext();) {
    o = o$iterator.next_0();
    hashCode = 31 * hashCode + (o == null?0:hashCode__I__devirtual$(o));
    hashCode = ~~hashCode;
  }
  return hashCode;
}

function newArrayList(elements){
  checkNotNull(elements);
  return elements?new ArrayList_1(($clinit_Collections2() , elements)):newArrayList_0(null.iterator_0());
}

function newArrayList_0(elements){
  var list;
  list = new ArrayList;
  addAll_0(list, elements);
  return list;
}

function newArrayList_1(elements){
  var capacity, list;
  checkNotNull(elements);
  capacity = computeArrayListCapacity(elements.length);
  list = new ArrayList_0(capacity);
  addAll_1(list, elements);
  return list;
}

function newArrayListWithCapacity(initialArraySize){
  checkNonnegative(initialArraySize, 'initialArraySize');
  return new ArrayList_0(initialArraySize);
}

function newLinkedList(elements){
  var list;
  list = new LinkedList;
  addAll(list, elements);
  return list;
}

function $clinit_Maps(){
  $clinit_Maps = emptyMethod;
  STANDARD_JOINER_0 = new Joiner$MapJoiner(($clinit_Collections2() , STANDARD_JOINER));
}

function equalsImpl_0(map_0, object){
  $clinit_Maps();
  var o;
  if (map_0 === object) {
    return true;
  }
   else if (instanceOf(object, 59)) {
    o = object;
    return equalsImpl_1($entrySet(map_0), o.entrySet_0());
  }
  return false;
}

function safeContainsKey(map_0, key){
  $clinit_Maps();
  checkNotNull(map_0);
  try {
    return map_0.map_0.containsKey(key);
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 67)) {
      return false;
    }
     else if (instanceOf($e0, 44)) {
      return false;
    }
     else 
      throw unwrap($e0);
  }
}

function safeGet(map_0, key){
  $clinit_Maps();
  checkNotNull(map_0);
  try {
    return map_0.map_0.get_1(key);
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 67)) {
      return null;
    }
     else if (instanceOf($e0, 44)) {
      return null;
    }
     else 
      throw unwrap($e0);
  }
}

var STANDARD_JOINER_0;
function RegularImmutableAsList(delegate, delegateList){
  this.delegate = delegate;
  this.delegateList = delegateList;
}

function RegularImmutableAsList_0(delegate, array){
  $clinit_ImmutableList();
  RegularImmutableAsList.call(this, delegate, unsafeDelegateList(new Arrays$ArrayList(array)));
}

defineClass(327, 1007, $intern_6, RegularImmutableAsList_0);
_.delegateCollection = function delegateCollection_0(){
  return this.delegate;
}
;
_.get_0 = function get_4(index_0){
  return $get_0(this.delegateList, index_0);
}
;
_.listIterator_1 = function listIterator_4(index_0){
  return $listIterator(this.delegateList, index_0);
}
;
var Lcom_google_common_collect_RegularImmutableAsList_2_classLit = createForClass('com.google.common.collect', 'RegularImmutableAsList', 327, Lcom_google_common_collect_ImmutableAsList_2_classLit);
function $clinit_RegularImmutableBiMap(){
  $clinit_RegularImmutableBiMap = emptyMethod;
  EMPTY_0 = new RegularImmutableBiMap;
}

function RegularImmutableBiMap(){
  ImmutableBiMap.call(this, new RegularImmutableMap(new HashMap));
}

defineClass(890, 350, $intern_7, RegularImmutableBiMap);
var EMPTY_0;
var Lcom_google_common_collect_RegularImmutableBiMap_2_classLit = createForClass('com.google.common.collect', 'RegularImmutableBiMap', 890, Lcom_google_common_collect_ImmutableBiMap_2_classLit);
function RegularImmutableList(delegate){
  $clinit_ImmutableList();
  this.delegate = ($clinit_Collections() , instanceOf(delegate, 60)?new Collections$UnmodifiableRandomAccessList(delegate):new Collections$UnmodifiableList(delegate));
}

defineClass(57, 997, $intern_6, RegularImmutableList);
_.delegateList_0 = function delegateList_0(){
  return this.delegate;
}
;
var Lcom_google_common_collect_RegularImmutableList_2_classLit = createForClass('com.google.common.collect', 'RegularImmutableList', 57, Lcom_google_common_collect_ForwardingImmutableList_2_classLit);
function RegularImmutableMap(delegate){
  ForwardingImmutableMap.call(this, delegate);
}

function RegularImmutableMap_0(entries){
  ForwardingImmutableMap_0.call(this, entries);
}

defineClass(259, 258, $intern_7, RegularImmutableMap, RegularImmutableMap_0);
var Lcom_google_common_collect_RegularImmutableMap_2_classLit = createForClass('com.google.common.collect', 'RegularImmutableMap', 259, Lcom_google_common_collect_ForwardingImmutableMap_2_classLit);
function $clinit_RegularImmutableSet(){
  $clinit_RegularImmutableSet = emptyMethod;
  $clinit_ImmutableCollection();
  EMPTY_1 = new RegularImmutableSet(($clinit_Collections() , $clinit_Collections() , EMPTY_SET));
}

function RegularImmutableSet(delegate){
  $clinit_RegularImmutableSet();
  $clinit_ImmutableCollection();
  this.delegate = ($clinit_Collections() , new Collections$UnmodifiableSet(delegate));
}

defineClass(358, 910, $intern_9, RegularImmutableSet);
var EMPTY_1;
var Lcom_google_common_collect_RegularImmutableSet_2_classLit = createForClass('com.google.common.collect', 'RegularImmutableSet', 358, Lcom_google_common_collect_ForwardingImmutableSet_2_classLit);
function equalsImpl_1(s, object){
  var o;
  if (s === object) {
    return true;
  }
  if (instanceOf(object, 38)) {
    o = object;
    try {
      return s.size_1() == o.size_1() && s.containsAll(o);
    }
     catch ($e0) {
      $e0 = wrap_0($e0);
      if (instanceOf($e0, 44)) {
        return false;
      }
       else if (instanceOf($e0, 67)) {
        return false;
      }
       else 
        throw unwrap($e0);
    }
  }
  return false;
}

function hashCodeImpl_0(s){
  var hashCode, o, o$iterator;
  hashCode = 0;
  for (o$iterator = s.iterator(); o$iterator.hasNext();) {
    o = o$iterator.next_0();
    hashCode += o != null?hashCode__I__devirtual$(o):0;
    hashCode = ~~hashCode;
  }
  return hashCode;
}

function SingletonImmutableBiMap(key, value_0){
  ImmutableBiMap.call(this, singletonMap(checkNotNull(key), checkNotNull(value_0)));
}

defineClass(891, 350, $intern_7, SingletonImmutableBiMap);
var Lcom_google_common_collect_SingletonImmutableBiMap_2_classLit = createForClass('com.google.common.collect', 'SingletonImmutableBiMap', 891, Lcom_google_common_collect_ImmutableBiMap_2_classLit);
function SingletonImmutableList(element){
  $clinit_ImmutableList();
  this.delegate = ($clinit_Collections() , new Collections$SingletonList(checkNotNull(element)));
}

defineClass(53, 997, $intern_6, SingletonImmutableList);
_.delegateList_0 = function delegateList_1(){
  return this.delegate;
}
;
var Lcom_google_common_collect_SingletonImmutableList_2_classLit = createForClass('com.google.common.collect', 'SingletonImmutableList', 53, Lcom_google_common_collect_ForwardingImmutableList_2_classLit);
function SingletonImmutableSet(element){
  this.element = checkNotNull(element);
}

defineClass(909, 1015, $intern_9, SingletonImmutableSet);
_.contains_0 = function contains_11(object){
  return equals_Ljava_lang_Object__Z__devirtual$(this.element, object);
}
;
_.iterator_0 = function iterator_13(){
  return new Iterators$12(this.element);
}
;
_.iterator = function iterator_14(){
  return new Iterators$12(this.element);
}
;
_.size_1 = function size_11(){
  return 1;
}
;
var Lcom_google_common_collect_SingletonImmutableSet_2_classLit = createForClass('com.google.common.collect', 'SingletonImmutableSet', 909, Lcom_google_common_collect_ImmutableSet_2_classLit);
function saturatedCast(value_0){
  if (gt(value_0, {l:$intern_10, m:511, h:0})) {
    return $intern_0;
  }
  if (lt(value_0, {l:0, m:4193792, h:$intern_11})) {
    return $intern_12;
  }
  return toInt(value_0);
}

function $addColorStop(this$static, offset, color_0){
  this$static.addColorStop(offset, color_0);
}

function $arcTo(this$static, x1, y1, x2, y2, radius){
  this$static.arcTo(x1, y1, x2, y2, radius);
}

function $clearRect(this$static, x_0, y_0, w, h){
  this$static.clearRect(x_0, y_0, w, h);
}

function $createLinearGradient(this$static, x0, y0, x1, y1){
  return this$static.createLinearGradient(x0, y0, x1, y1);
}

function $drawImage(this$static, image, dx, dy, dw, dh){
  this$static.drawImage(image, dx, dy, dw, dh);
}

function $fillRect(this$static, x_0, y_0, w, h){
  this$static.fillRect(x_0, y_0, w, h);
}

function $fillText(this$static, text_0, x_0, y_0){
  this$static.fillText && this$static.fillText(text_0, x_0, y_0);
}

function $moveTo(this$static, x_0, y_0){
  this$static.moveTo(x_0, y_0);
}

function $restore(this$static){
  this$static.restore();
}

function $save(this$static){
  this$static.save();
}

function $scale(this$static, x_0, y_0){
  this$static.scale(x_0, y_0);
}

function $setFillStyleWeb(this$static, fillStyle){
  this$static.fillStyle = fillStyle;
}

function $setFont(this$static, f){
  this$static.font = f;
}

function $setLineCap(this$static, lineCap){
  this$static.lineCap = lineCap;
}

function $setLineJoin(this$static, lineJoin){
  this$static.lineJoin = lineJoin;
}

function $setLineWidth(this$static, lineWidth){
  this$static.lineWidth = lineWidth;
}

function $setStrokeStyleWeb(this$static, strokeStyle){
  this$static.strokeStyle = strokeStyle;
}

function $setTextBaseline(this$static, baseline){
  this$static.textBaseline = baseline;
}

function $strokeText(this$static, text_0, x_0, y_0){
  this$static.strokeText(text_0, x_0, y_0);
}

function $clinit_Context2d$LineCap(){
  $clinit_Context2d$LineCap = emptyMethod;
  BUTT = new Context2d$LineCap('BUTT', 0, 'butt');
  ROUND = new Context2d$LineCap('ROUND', 1, 'round');
  SQUARE = new Context2d$LineCap('SQUARE', 2, 'square');
}

function Context2d$LineCap(enum$name, enum$ordinal, value_0){
  Enum.call(this, enum$name, enum$ordinal);
  this.value_0 = value_0;
}

function values_3(){
  $clinit_Context2d$LineCap();
  return initValues(getClassLiteralForArray(Lcom_google_gwt_canvas_dom_client_Context2d$LineCap_2_classLit, 1), $intern_1, 167, 0, [BUTT, ROUND, SQUARE]);
}

defineClass(167, 7, {167:1, 3:1, 9:1, 7:1}, Context2d$LineCap);
var BUTT, ROUND, SQUARE;
var Lcom_google_gwt_canvas_dom_client_Context2d$LineCap_2_classLit = createForEnum('com.google.gwt.canvas.dom.client', 'Context2d/LineCap', 167, Ljava_lang_Enum_2_classLit, values_3);
function $clinit_Context2d$LineJoin(){
  $clinit_Context2d$LineJoin = emptyMethod;
  BEVEL = new Context2d$LineJoin('BEVEL', 0, 'bevel');
  MITER = new Context2d$LineJoin('MITER', 1, 'miter');
  ROUND_0 = new Context2d$LineJoin('ROUND', 2, 'round');
}

function Context2d$LineJoin(enum$name, enum$ordinal, value_0){
  Enum.call(this, enum$name, enum$ordinal);
  this.value_0 = value_0;
}

function values_4(){
  $clinit_Context2d$LineJoin();
  return initValues(getClassLiteralForArray(Lcom_google_gwt_canvas_dom_client_Context2d$LineJoin_2_classLit, 1), $intern_1, 168, 0, [BEVEL, MITER, ROUND_0]);
}

defineClass(168, 7, {168:1, 3:1, 9:1, 7:1}, Context2d$LineJoin);
var BEVEL, MITER, ROUND_0;
var Lcom_google_gwt_canvas_dom_client_Context2d$LineJoin_2_classLit = createForEnum('com.google.gwt.canvas.dom.client', 'Context2d/LineJoin', 168, Ljava_lang_Enum_2_classLit, values_4);
function $clinit_Context2d$TextBaseline(){
  $clinit_Context2d$TextBaseline = emptyMethod;
  ALPHABETIC = new Context2d$TextBaseline('ALPHABETIC', 0, 'alphabetic');
  BOTTOM = new Context2d$TextBaseline('BOTTOM', 1, 'bottom');
  HANGING = new Context2d$TextBaseline('HANGING', 2, 'hanging');
  IDEOGRAPHIC = new Context2d$TextBaseline('IDEOGRAPHIC', 3, 'ideographic');
  MIDDLE = new Context2d$TextBaseline('MIDDLE', 4, 'middle');
  TOP = new Context2d$TextBaseline('TOP', 5, 'top');
}

function Context2d$TextBaseline(enum$name, enum$ordinal, value_0){
  Enum.call(this, enum$name, enum$ordinal);
  this.value_0 = value_0;
}

function values_5(){
  $clinit_Context2d$TextBaseline();
  return initValues(getClassLiteralForArray(Lcom_google_gwt_canvas_dom_client_Context2d$TextBaseline_2_classLit, 1), $intern_1, 106, 0, [ALPHABETIC, BOTTOM, HANGING, IDEOGRAPHIC, MIDDLE, TOP]);
}

defineClass(106, 7, {106:1, 3:1, 9:1, 7:1}, Context2d$TextBaseline);
var ALPHABETIC, BOTTOM, HANGING, IDEOGRAPHIC, MIDDLE, TOP;
var Lcom_google_gwt_canvas_dom_client_Context2d$TextBaseline_2_classLit = createForEnum('com.google.gwt.canvas.dom.client', 'Context2d/TextBaseline', 106, Ljava_lang_Enum_2_classLit, values_5);
function Duration(){
  this.start_0 = now_1();
}

defineClass(556, 1, {}, Duration);
_.start_0 = 0;
var Lcom_google_gwt_core_client_Duration_2_classLit = createForClass('com.google.gwt.core.client', 'Duration', 556, Ljava_lang_Object_2_classLit);
function isScript(){
  return true;
}

function setUncaughtExceptionHandler(handler){
  uncaughtExceptionHandler = handler;
}

var uncaughtExceptionHandler = null;
function $addSuppressed(this$static, exception){
  checkNotNull_2(exception, 'Cannot suppress a null exception.');
  checkCriticalArgument_0(exception != this$static, 'Exception can not suppress itself.');
  if (this$static.disableSuppression) {
    return;
  }
  this$static.suppressedExceptions == null?(this$static.suppressedExceptions = initValues(getClassLiteralForArray(Ljava_lang_Throwable_2_classLit, 1), $intern_1, 12, 0, [exception])):(this$static.suppressedExceptions[this$static.suppressedExceptions.length] = exception);
}

function $initCause(this$static, cause){
  checkState_2(!this$static.cause);
  checkCriticalArgument_0(cause != this$static, 'Self-causation not permitted');
  this$static.cause = cause;
  return this$static;
}

function $toString_3(this$static){
  var className, msg;
  className = $getName(this$static.___clazz$);
  msg = this$static.getMessage();
  return msg != null?className + ': ' + msg:className;
}

defineClass(12, 1, {3:1, 12:1});
_.fillInStackTrace = function fillInStackTrace(){
  this.stackTrace = null;
  captureStackTrace(this, this.detailMessage);
  return this;
}
;
_.getMessage = function getMessage(){
  return this.detailMessage;
}
;
_.printStackTrace = function printStackTrace(out){
  var element$array, element$index, element$max, t, stackTrace;
  for (t = this; t; t = t.cause) {
    for (element$array = (t.stackTrace == null && (t.stackTrace = ($clinit_StackTraceCreator() , stackTrace = collector_0.getStackTrace(t) , dropInternalFrames(stackTrace))) , t.stackTrace) , element$index = 0 , element$max = element$array.length; element$index < element$max; ++element$index)
    ;
  }
}
;
_.toString$ = function toString_17(){
  return $toString_3(this);
}
;
_.disableSuppression = false;
var Ljava_lang_Throwable_2_classLit = createForClass('java.lang', 'Throwable', 12, Ljava_lang_Object_2_classLit);
function Exception(message){
  this.detailMessage = message;
  this.fillInStackTrace();
}

defineClass(18, 12, {3:1, 18:1, 12:1}, Exception);
var Ljava_lang_Exception_2_classLit = createForClass('java.lang', 'Exception', 18, Ljava_lang_Throwable_2_classLit);
function RuntimeException(){
  this.fillInStackTrace();
}

function RuntimeException_0(message){
  Exception.call(this, message);
}

function RuntimeException_1(message, cause){
  this.cause = cause;
  this.detailMessage = message;
  this.fillInStackTrace();
}

function RuntimeException_2(cause){
  this.detailMessage = !cause?null:$toString_3(cause);
  this.cause = cause;
  this.fillInStackTrace();
}

defineClass(10, 18, $intern_13, RuntimeException, RuntimeException_0, RuntimeException_2);
var Ljava_lang_RuntimeException_2_classLit = createForClass('java.lang', 'RuntimeException', 10, Ljava_lang_Exception_2_classLit);
defineClass(368, 10, $intern_13);
var Lcom_google_gwt_core_client_impl_JavaScriptExceptionBase_2_classLit = createForClass('com.google.gwt.core.client.impl', 'JavaScriptExceptionBase', 368, Ljava_lang_RuntimeException_2_classLit);
function $clinit_JavaScriptException(){
  $clinit_JavaScriptException = emptyMethod;
  NOT_SET = new Object_0;
}

function $ensureInit(this$static){
  var exception;
  if (this$static.message_0 == null) {
    exception = maskUndefined(this$static.e) === maskUndefined(NOT_SET)?null:this$static.e;
    this$static.name_0 = exception == null?'null':instanceOfJso(exception)?exception == null?null:exception.name:isJavaString(exception)?'String':$getName(getClass__Ljava_lang_Class___devirtual$(exception));
    this$static.description_0 = this$static.description_0 + ': ' + (instanceOfJso(exception)?exception == null?null:exception.message:exception + '');
    this$static.message_0 = '(' + this$static.name_0 + ') ' + this$static.description_0;
  }
}

function JavaScriptException(e){
  $clinit_JavaScriptException();
  this.cause = null;
  this.detailMessage = null;
  this.disableSuppression = !true;
  this.description_0 = '';
  this.e = e;
  this.description_0 = '';
}

defineClass(121, 368, {121:1, 3:1, 18:1, 10:1, 12:1}, JavaScriptException);
_.getMessage = function getMessage_0(){
  $ensureInit(this);
  return this.message_0;
}
;
_.getThrown = function getThrown(){
  return maskUndefined(this.e) === maskUndefined(NOT_SET)?null:this.e;
}
;
var NOT_SET;
var Lcom_google_gwt_core_client_JavaScriptException_2_classLit = createForClass('com.google.gwt.core.client', 'JavaScriptException', 121, Lcom_google_gwt_core_client_impl_JavaScriptExceptionBase_2_classLit);
function $push(this$static, value_0){
  this$static[this$static.length] = value_0;
}

function create(milliseconds){
  return new Date(milliseconds);
}

function now_1(){
  if (Date.now) {
    return Date.now();
  }
  return (new Date).getTime();
}

defineClass(942, 1, {});
var Lcom_google_gwt_core_client_Scheduler_2_classLit = createForClass('com.google.gwt.core.client', 'Scheduler', 942, Ljava_lang_Object_2_classLit);
function apply_1(jsFunction, thisObj, args){
  return jsFunction.apply(thisObj, args);
  var __0;
}

function enter(){
  var now_0;
  if (entryDepth != 0) {
    now_0 = now_1();
    if (now_0 - watchdogEntryDepthLastScheduled > 2000) {
      watchdogEntryDepthLastScheduled = now_0;
      watchdogEntryDepthTimerId = $wnd.setTimeout(watchdogEntryDepthRun, 10);
    }
  }
  if (entryDepth++ == 0) {
    $flushEntryCommands(($clinit_SchedulerImpl() , INSTANCE));
    return true;
  }
  return false;
}

function entry_0(jsFunction){
  return function(){
    if (isScript()) {
      return entry0(jsFunction, this, arguments);
    }
     else {
      var __0 = entry0(jsFunction, this, arguments);
      __0 != null && (__0 = __0.val);
      return __0;
    }
  }
  ;
}

function entry0(jsFunction, thisObj, args){
  var initialEntry, t;
  initialEntry = enter();
  try {
    if (uncaughtExceptionHandler) {
      try {
        return apply_1(jsFunction, thisObj, args);
      }
       catch ($e0) {
        $e0 = wrap_0($e0);
        if (instanceOf($e0, 12)) {
          t = $e0;
          reportUncaughtException(t);
          return undefined;
        }
         else 
          throw unwrap($e0);
      }
    }
     else {
      return apply_1(jsFunction, thisObj, args);
    }
  }
   finally {
    exit(initialEntry);
  }
}

function exit(initialEntry){
  initialEntry && $flushFinallyCommands(($clinit_SchedulerImpl() , INSTANCE));
  --entryDepth;
  if (initialEntry) {
    if (watchdogEntryDepthTimerId != -1) {
      watchdogEntryDepthCancel(watchdogEntryDepthTimerId);
      watchdogEntryDepthTimerId = -1;
    }
  }
}

function getHashCode(o){
  return o.$H || (o.$H = ++sNextHashId);
}

function reportToBrowser(e){
  $wnd.setTimeout(function(){
    throw e;
  }
  , 0);
}

function reportUncaughtException(e){
  var handler;
  handler = uncaughtExceptionHandler;
  if (handler) {
    if (handler == uncaughtExceptionHandlerForTest) {
      return;
    }
    $reportError(handler.this$01, 'Uncaught Exception: ', e);
    return;
  }
  reportToBrowser(instanceOf(e, 121)?e.getThrown():e);
}

function watchdogEntryDepthCancel(timerId){
  $wnd.clearTimeout(timerId);
}

function watchdogEntryDepthRun(){
  entryDepth != 0 && (entryDepth = 0);
  watchdogEntryDepthTimerId = -1;
}

var entryDepth = 0, sNextHashId = 0, uncaughtExceptionHandlerForTest, watchdogEntryDepthLastScheduled = 0, watchdogEntryDepthTimerId = -1;
function $clinit_SchedulerImpl(){
  $clinit_SchedulerImpl = emptyMethod;
  INSTANCE = new SchedulerImpl;
}

function $flushEntryCommands(this$static){
  var oldQueue, rescheduled;
  if (this$static.entryCommands) {
    rescheduled = null;
    do {
      oldQueue = this$static.entryCommands;
      this$static.entryCommands = null;
      rescheduled = runScheduledTasks(oldQueue, rescheduled);
    }
     while (this$static.entryCommands);
    this$static.entryCommands = rescheduled;
  }
}

function $flushFinallyCommands(this$static){
  var oldQueue, rescheduled;
  if (this$static.finallyCommands) {
    rescheduled = null;
    do {
      oldQueue = this$static.finallyCommands;
      this$static.finallyCommands = null;
      rescheduled = runScheduledTasks(oldQueue, rescheduled);
    }
     while (this$static.finallyCommands);
    this$static.finallyCommands = rescheduled;
  }
}

function $flushPostEventPumpCommands(this$static){
  var oldDeferred;
  if (this$static.deferredCommands) {
    oldDeferred = this$static.deferredCommands;
    this$static.deferredCommands = null;
    !this$static.incrementalCommands && (this$static.incrementalCommands = []);
    runScheduledTasks(oldDeferred, this$static.incrementalCommands);
  }
  !!this$static.incrementalCommands && (this$static.incrementalCommands = $runRepeatingTasks(this$static.incrementalCommands));
}

function $isWorkQueued(this$static){
  return !!this$static.deferredCommands || !!this$static.incrementalCommands;
}

function $maybeSchedulePostEventPumpCommands(this$static){
  if (!this$static.shouldBeRunning) {
    this$static.shouldBeRunning = true;
    !this$static.flusher && (this$static.flusher = new SchedulerImpl$Flusher(this$static));
    scheduleFixedDelayImpl(this$static.flusher, 1);
    !this$static.rescue && (this$static.rescue = new SchedulerImpl$Rescuer(this$static));
    scheduleFixedDelayImpl(this$static.rescue, 50);
  }
}

function $runRepeatingTasks(tasks){
  var canceledSomeTasks, duration, executedSomeTask, i, length_0, newTasks, t;
  length_0 = tasks.length;
  if (length_0 == 0) {
    return null;
  }
  canceledSomeTasks = false;
  duration = new Duration;
  while (now_1() - duration.start_0 < 16) {
    executedSomeTask = false;
    for (i = 0; i < length_0; i++) {
      t = tasks[i];
      if (!t) {
        continue;
      }
      executedSomeTask = true;
      if (!t[0].execute_0()) {
        tasks[i] = null;
        canceledSomeTasks = true;
      }
    }
    if (!executedSomeTask) {
      break;
    }
  }
  if (canceledSomeTasks) {
    newTasks = [];
    for (i = 0; i < length_0; i++) {
      !!tasks[i] && $push(newTasks, tasks[i]);
    }
    return newTasks.length == 0?null:newTasks;
  }
   else {
    return tasks;
  }
}

function $scheduleDeferred(this$static, cmd){
  this$static.deferredCommands = push_0(this$static.deferredCommands, [cmd, false]);
  $maybeSchedulePostEventPumpCommands(this$static);
}

function SchedulerImpl(){
}

function execute_2(cmd){
  return cmd.execute_0();
}

function push_0(queue, task){
  !queue && (queue = []);
  $push(queue, task);
  return queue;
}

function runScheduledTasks(tasks, rescheduled){
  var e, i, j, t;
  for (i = 0 , j = tasks.length; i < j; i++) {
    t = tasks[i];
    try {
      t[1]?t[0].execute_0() && (rescheduled = push_0(rescheduled, t)):t[0].execute();
    }
     catch ($e0) {
      $e0 = wrap_0($e0);
      if (instanceOf($e0, 12)) {
        e = $e0;
        reportUncaughtException(e);
      }
       else 
        throw unwrap($e0);
    }
  }
  return rescheduled;
}

function scheduleFixedDelayImpl(cmd, delayMs){
  $clinit_SchedulerImpl();
  function callback(){
    var ret = $entry(execute_2)(cmd);
    !isScript() && (ret = ret == true);
    ret && $wnd.setTimeout(callback, delayMs);
  }

  $wnd.setTimeout(callback, delayMs);
}

defineClass(557, 942, {}, SchedulerImpl);
_.flushRunning = false;
_.shouldBeRunning = false;
var INSTANCE;
var Lcom_google_gwt_core_client_impl_SchedulerImpl_2_classLit = createForClass('com.google.gwt.core.client.impl', 'SchedulerImpl', 557, Lcom_google_gwt_core_client_Scheduler_2_classLit);
function SchedulerImpl$Flusher(this$0){
  this.this$01 = this$0;
}

defineClass(558, 1, {}, SchedulerImpl$Flusher);
_.execute_0 = function execute_3(){
  this.this$01.flushRunning = true;
  $flushPostEventPumpCommands(this.this$01);
  this.this$01.flushRunning = false;
  return this.this$01.shouldBeRunning = $isWorkQueued(this.this$01);
}
;
var Lcom_google_gwt_core_client_impl_SchedulerImpl$Flusher_2_classLit = createForClass('com.google.gwt.core.client.impl', 'SchedulerImpl/Flusher', 558, Ljava_lang_Object_2_classLit);
function SchedulerImpl$Rescuer(this$0){
  this.this$01 = this$0;
}

defineClass(559, 1, {}, SchedulerImpl$Rescuer);
_.execute_0 = function execute_4(){
  this.this$01.flushRunning && scheduleFixedDelayImpl(this.this$01.flusher, 1);
  return this.this$01.shouldBeRunning;
}
;
var Lcom_google_gwt_core_client_impl_SchedulerImpl$Rescuer_2_classLit = createForClass('com.google.gwt.core.client.impl', 'SchedulerImpl/Rescuer', 559, Ljava_lang_Object_2_classLit);
function $clinit_StackTraceCreator(){
  $clinit_StackTraceCreator = emptyMethod;
  var c, enforceLegacy;
  enforceLegacy = !(!!Error.stackTraceLimit || 'stack' in new Error);
  c = new StackTraceCreator$CollectorModernNoSourceMap;
  collector_0 = enforceLegacy?new StackTraceCreator$CollectorLegacy:c;
}

function captureStackTrace(throwable, reference){
  $clinit_StackTraceCreator();
  collector_0.collect(throwable, reference);
}

function dropInternalFrames(stackTrace){
  var dropFrameUntilFnName, i, numberOfFrameToSearch;
  dropFrameUntilFnName = 'captureStackTrace';
  numberOfFrameToSearch = min_1(stackTrace.length, 5);
  for (i = 0; i < numberOfFrameToSearch; i++) {
    if ($equals(stackTrace[i].methodName, dropFrameUntilFnName)) {
      return stackTrace.length >= i + 1 && stackTrace.splice(0, i + 1) , stackTrace;
    }
  }
  return stackTrace;
}

function extractFunctionName(fnName){
  var fnRE = /function(?:\s+([\w$]+))?\s*\(/;
  var match_0 = fnRE.exec(fnName);
  return match_0 && match_0[1] || 'anonymous';
}

function parseInt_0(number){
  $clinit_StackTraceCreator();
  return parseInt(number) || -1;
}

var collector_0;
defineClass(957, 1, {});
var Lcom_google_gwt_core_client_impl_StackTraceCreator$Collector_2_classLit = createForClass('com.google.gwt.core.client.impl', 'StackTraceCreator/Collector', 957, Ljava_lang_Object_2_classLit);
function StackTraceCreator$CollectorLegacy(){
}

defineClass(369, 957, {}, StackTraceCreator$CollectorLegacy);
_.collect = function collect(t, thrownIgnored){
  var seen = {}, name_1;
  t.fnStack = [];
  var callee = arguments.callee.caller;
  while (callee) {
    var name_0 = ($clinit_StackTraceCreator() , callee.name || (callee.name = extractFunctionName(callee.toString())));
    t.fnStack.push(name_0);
    var keyName = ':' + name_0;
    var withThisName = seen[keyName];
    if (withThisName) {
      var i, j;
      for (i = 0 , j = withThisName.length; i < j; i++) {
        if (withThisName[i] === callee) {
          return;
        }
      }
    }
    (withThisName || (seen[keyName] = [])).push(callee);
    callee = callee.caller;
  }
}
;
_.getStackTrace = function getStackTrace(t){
  var i, length_0, stack_0, stackTrace;
  stack_0 = ($clinit_StackTraceCreator() , t && t.fnStack && t.fnStack instanceof Array?t.fnStack:[]);
  length_0 = stack_0.length;
  stackTrace = initDim(Ljava_lang_StackTraceElement_2_classLit, $intern_1, 122, length_0, 0, 1);
  for (i = 0; i < length_0; i++) {
    stackTrace[i] = new StackTraceElement(stack_0[i], null, -1);
  }
  return stackTrace;
}
;
var Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorLegacy_2_classLit = createForClass('com.google.gwt.core.client.impl', 'StackTraceCreator/CollectorLegacy', 369, Lcom_google_gwt_core_client_impl_StackTraceCreator$Collector_2_classLit);
function $clinit_StackTraceCreator$CollectorModern(){
  $clinit_StackTraceCreator$CollectorModern = emptyMethod;
  Error.stackTraceLimit = 64;
}

function $parse(this$static, stString){
  var closeParen, col, endFileUrlIndex, fileName, index_0, lastColonIndex, line, location_0, toReturn;
  if (!stString.length) {
    return this$static.createSte('Unknown', 'anonymous', -1, -1);
  }
  toReturn = $trim(stString);
  $equals(toReturn.substr(0, 3), 'at ') && (toReturn = __substr(toReturn, 3, toReturn.length - 3));
  toReturn = toReturn.replace(/\[.*?\]/g, '');
  index_0 = toReturn.indexOf('(');
  if (index_0 == -1) {
    index_0 = toReturn.indexOf('@');
    if (index_0 == -1) {
      location_0 = toReturn;
      toReturn = '';
    }
     else {
      location_0 = $trim(__substr(toReturn, index_0 + 1, toReturn.length - (index_0 + 1)));
      toReturn = $trim(toReturn.substr(0, index_0));
    }
  }
   else {
    closeParen = toReturn.indexOf(')', index_0);
    location_0 = toReturn.substr(index_0 + 1, closeParen - (index_0 + 1));
    toReturn = $trim(toReturn.substr(0, index_0));
  }
  index_0 = $indexOf_2(toReturn, fromCodePoint(46));
  index_0 != -1 && (toReturn = __substr(toReturn, index_0 + 1, toReturn.length - (index_0 + 1)));
  (!toReturn.length || $equals(toReturn, 'Anonymous function')) && (toReturn = 'anonymous');
  lastColonIndex = $lastIndexOf(location_0, fromCodePoint(58));
  endFileUrlIndex = $lastIndexOf_0(location_0, fromCodePoint(58), lastColonIndex - 1);
  line = -1;
  col = -1;
  fileName = 'Unknown';
  if (lastColonIndex != -1 && endFileUrlIndex != -1) {
    fileName = location_0.substr(0, endFileUrlIndex);
    line = parseInt_0(location_0.substr(endFileUrlIndex + 1, lastColonIndex - (endFileUrlIndex + 1)));
    col = parseInt_0(__substr(location_0, lastColonIndex + 1, location_0.length - (lastColonIndex + 1)));
  }
  return this$static.createSte(fileName, toReturn, line, col);
}

defineClass(958, 957, {});
_.collect = function collect_0(t, jsThrown){
  function fixIE(e){
    if (!('stack' in e)) {
      try {
        throw e;
      }
       catch (ignored) {
      }
    }
    return e;
  }

  var backingJsError;
  typeof jsThrown == 'string'?(backingJsError = fixIE(new Error(jsThrown))):jsThrown instanceof Object && 'stack' in jsThrown?(backingJsError = jsThrown):(backingJsError = fixIE(new Error));
  t.__gwt$backingJsError = backingJsError;
}
;
_.createSte = function createSte(fileName, method, line, col){
  return new StackTraceElement(method, fileName + '@' + col, line < 0?-1:line);
}
;
_.getStackTrace = function getStackTrace_0(t){
  var addIndex, i, length_0, stack_0, stackTrace, ste, e;
  stack_0 = ($clinit_StackTraceCreator() , e = t.__gwt$backingJsError , e && e.stack?e.stack.split('\n'):[]);
  stackTrace = initDim(Ljava_lang_StackTraceElement_2_classLit, $intern_1, 122, 0, 0, 1);
  addIndex = 0;
  length_0 = stack_0.length;
  if (length_0 == 0) {
    return stackTrace;
  }
  ste = $parse(this, stack_0[0]);
  $equals(ste.methodName, 'anonymous') || (stackTrace[addIndex++] = ste);
  for (i = 1; i < length_0; i++) {
    stackTrace[addIndex++] = $parse(this, stack_0[i]);
  }
  return stackTrace;
}
;
var Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorModern_2_classLit = createForClass('com.google.gwt.core.client.impl', 'StackTraceCreator/CollectorModern', 958, Lcom_google_gwt_core_client_impl_StackTraceCreator$Collector_2_classLit);
function StackTraceCreator$CollectorModernNoSourceMap(){
  $clinit_StackTraceCreator$CollectorModern();
}

defineClass(370, 958, {}, StackTraceCreator$CollectorModernNoSourceMap);
_.createSte = function createSte_0(fileName, method, line, col){
  return new StackTraceElement(method, fileName, -1);
}
;
var Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorModernNoSourceMap_2_classLit = createForClass('com.google.gwt.core.client.impl', 'StackTraceCreator/CollectorModernNoSourceMap', 370, Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorModern_2_classLit);
function checkArrayType(expression, errorMessage){
  if (!expression) {
    throw new ArrayStoreException('' + errorMessage);
  }
}

function checkCriticalArgument(expression){
  if (!expression) {
    throw new IllegalArgumentException;
  }
}

function checkCriticalArgument_0(expression, errorMessage){
  if (!expression) {
    throw new IllegalArgumentException_0('' + errorMessage);
  }
}

function checkCriticalArgument_1(expression, errorMessageArgs){
  if (!expression) {
    throw new IllegalArgumentException_0(format_1('%s > %s', errorMessageArgs));
  }
}

function checkCriticalElement(expression){
  if (!expression) {
    throw new NoSuchElementException;
  }
}

function checkElementIndex(index_0, size_0){
  if (index_0 < 0 || index_0 >= size_0) {
    throw new IndexOutOfBoundsException_0('Index: ' + index_0 + ', Size: ' + size_0);
  }
}

function checkNotNull_1(reference){
  if (reference == null) {
    throw new NullPointerException;
  }
  return reference;
}

function checkNotNull_2(reference, errorMessage){
  if (reference == null) {
    throw new NullPointerException_0('' + errorMessage);
  }
}

function checkPositionIndex_0(index_0, size_0){
  if (index_0 < 0 || index_0 > size_0) {
    throw new IndexOutOfBoundsException_0('Index: ' + index_0 + ', Size: ' + size_0);
  }
}

function checkState_1(expression){
  if (!expression) {
    throw new IllegalStateException;
  }
}

function checkState_2(expression){
  if (!expression) {
    throw new IllegalStateException_0("Can't overwrite cause");
  }
}

function format_1(template, args){
  var builder, i, placeholderStart, templateStart;
  template = '' + template;
  builder = new StringBuilder_0(template.length + 16 * args.length);
  templateStart = 0;
  i = 0;
  while (i < args.length) {
    placeholderStart = template.indexOf('%s', templateStart);
    if (placeholderStart == -1) {
      break;
    }
    $append_7(builder, template.substr(templateStart, placeholderStart - templateStart));
    $append_6(builder, args[i++]);
    templateStart = placeholderStart + 2;
  }
  $append_7(builder, __substr(template, templateStart, template.length - templateStart));
  if (i < args.length) {
    builder.string += ' [';
    $append_6(builder, args[i++]);
    while (i < args.length) {
      builder.string += ', ';
      $append_6(builder, args[i++]);
    }
    builder.string += ']';
  }
  return builder.string;
}

function $appendChild(this$static, newChild){
  return this$static.appendChild(newChild);
}

function $removeChild(this$static, oldChild){
  return this$static.removeChild(oldChild);
}

function $getSubPixelOffsetHeight(this$static){
  return this$static.offsetHeight || 0;
}

function $getSubPixelOffsetWidth(this$static){
  return this$static.offsetWidth || 0;
}

function $getSubPixelScrollTop(this$static){
  return this$static.scrollTop || 0;
}

function $setAttribute(this$static, name_0, value_0){
  this$static.setAttribute(name_0, value_0);
}

function $pause(this$static){
  this$static.pause();
}

function $setBooleanAttr(this$static, value_0){
  value_0?$setAttribute(this$static, 'loop', ''):(this$static.removeAttribute('loop') , undefined);
}

function $setSrc(this$static, url_0){
  this$static.src = url_0;
}

function $setVolume_1(this$static, volume){
  this$static.volume = volume;
}

function $getContext2d(this$static){
  return this$static.getContext('2d');
}

function $setHeight(this$static, height){
  this$static.height = height;
}

function $setWidth(this$static, width_0){
  this$static.width = width_0;
}

function $eventGetAltKey(evt){
  return !!evt.altKey;
}

function $eventGetCtrlKey(evt){
  return !!evt.ctrlKey;
}

function $eventGetKeyCode(evt){
  return evt.keyCode | 0;
}

function $eventGetMetaKey(evt){
  return !!evt.metaKey;
}

function $eventGetShiftKey(evt){
  return !!evt.shiftKey;
}

function $getSubPixelScrollLeft(elem){
  return elem.scrollLeft || 0;
}

function $eventGetButton(evt){
  var button = evt.button;
  if (button == 1) {
    return 4;
  }
   else if (button == 2) {
    return 2;
  }
  return 1;
}

function $eventPreventDefault(evt){
  evt.preventDefault();
}

function $isOrHasChild(parent_0, child){
  return parent_0.contains(child);
}

function $setInnerText(elem, text_0){
  elem.textContent = text_0 || '';
}

function $eventGetCurrentTarget(event_0){
  return event_0.currentTarget || $wnd;
}

function $getAbsoluteLeft(elem){
  var left, rect;
  rect = getBoundingClientRect(elem);
  left = rect?rect.left + $getScrollLeft_0(elem.ownerDocument.body):getAbsoluteLeftUsingOffsets(elem);
  return left | 0;
}

function $getAbsoluteTop(elem){
  var rect, top_0, top_1;
  rect = getBoundingClientRect(elem);
  top_0 = rect?rect.top + ((elem.ownerDocument.body.scrollTop || 0) | 0):getAbsoluteTopUsingOffsets(elem);
  return top_0 | 0;
}

function $getScrollLeft(doc){
  return doc.documentElement.scrollLeft || doc.body.scrollLeft;
}

function $getScrollLeft_0(elem){
  if (!$equalsIgnoreCase('body', elem.tagName) && elem.ownerDocument.defaultView.getComputedStyle(elem, '').direction == 'rtl') {
    return ($getSubPixelScrollLeft(elem) | 0) - (((elem.scrollWidth || 0) | 0) - (elem.clientWidth | 0));
  }
  return $getSubPixelScrollLeft(elem) | 0;
}

function $getScrollTop(doc){
  return doc.documentElement.scrollTop || doc.body.scrollTop;
}

function $getTabIndex(elem){
  return typeof elem.tabIndex != 'undefined'?elem.tabIndex:-1;
}

function getAbsoluteLeftUsingOffsets(elem){
  if (elem.offsetLeft == null) {
    return 0;
  }
  var left = 0;
  var doc = elem.ownerDocument;
  var curr = elem.parentNode;
  if (curr) {
    while (curr.offsetParent) {
      left -= curr.scrollLeft;
      doc.defaultView.getComputedStyle(curr, '').getPropertyValue('direction') == 'rtl' && (left += curr.scrollWidth - curr.clientWidth);
      curr = curr.parentNode;
    }
  }
  while (elem) {
    left += elem.offsetLeft;
    if (doc.defaultView.getComputedStyle(elem, '')['position'] == 'fixed') {
      left += doc.body.scrollLeft;
      return left;
    }
    var parent_0 = elem.offsetParent;
    parent_0 && $wnd.devicePixelRatio && (left += parseInt(doc.defaultView.getComputedStyle(parent_0, '').getPropertyValue('border-left-width')));
    if (parent_0 && parent_0.tagName == 'BODY' && elem.style.position == 'absolute') {
      break;
    }
    elem = parent_0;
  }
  return left;
}

function getAbsoluteTopUsingOffsets(elem){
  if (elem.offsetTop == null) {
    return 0;
  }
  var top_0 = 0;
  var doc = elem.ownerDocument;
  var curr = elem.parentNode;
  if (curr) {
    while (curr.offsetParent) {
      top_0 -= curr.scrollTop;
      curr = curr.parentNode;
    }
  }
  while (elem) {
    top_0 += elem.offsetTop;
    if (doc.defaultView.getComputedStyle(elem, '')['position'] == 'fixed') {
      top_0 += doc.body.scrollTop;
      return top_0;
    }
    var parent_0 = elem.offsetParent;
    parent_0 && $wnd.devicePixelRatio && (top_0 += parseInt(doc.defaultView.getComputedStyle(parent_0, '').getPropertyValue('border-top-width')));
    if (parent_0 && parent_0.tagName == 'BODY' && elem.style.position == 'absolute') {
      break;
    }
    elem = parent_0;
  }
  return top_0;
}

function getBoundingClientRect(element){
  return element.getBoundingClientRect && element.getBoundingClientRect();
}

function $getElementById(this$static, elementId){
  return this$static.getElementById(elementId);
}

function $setPropertyImpl(this$static, name_0, value_0){
  this$static[name_0] = value_0;
}

function $clinit_Style$FontStyle(){
  $clinit_Style$FontStyle = emptyMethod;
  NORMAL = new Style$FontStyle$1;
  ITALIC = new Style$FontStyle$2;
  OBLIQUE = new Style$FontStyle$3;
}

function Style$FontStyle(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_6(){
  $clinit_Style$FontStyle();
  return initValues(getClassLiteralForArray(Lcom_google_gwt_dom_client_Style$FontStyle_2_classLit, 1), $intern_1, 107, 0, [NORMAL, ITALIC, OBLIQUE]);
}

defineClass(107, 7, $intern_14);
var ITALIC, NORMAL, OBLIQUE;
var Lcom_google_gwt_dom_client_Style$FontStyle_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/FontStyle', 107, Ljava_lang_Enum_2_classLit, values_6);
function Style$FontStyle$1(){
  Style$FontStyle.call(this, 'NORMAL', 0);
}

defineClass(507, 107, $intern_14, Style$FontStyle$1);
var Lcom_google_gwt_dom_client_Style$FontStyle$1_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/FontStyle/1', 507, Lcom_google_gwt_dom_client_Style$FontStyle_2_classLit, null);
function Style$FontStyle$2(){
  Style$FontStyle.call(this, 'ITALIC', 1);
}

defineClass(508, 107, $intern_14, Style$FontStyle$2);
var Lcom_google_gwt_dom_client_Style$FontStyle$2_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/FontStyle/2', 508, Lcom_google_gwt_dom_client_Style$FontStyle_2_classLit, null);
function Style$FontStyle$3(){
  Style$FontStyle.call(this, 'OBLIQUE', 2);
}

defineClass(509, 107, $intern_14, Style$FontStyle$3);
var Lcom_google_gwt_dom_client_Style$FontStyle$3_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/FontStyle/3', 509, Lcom_google_gwt_dom_client_Style$FontStyle_2_classLit, null);
function $clinit_Style$FontWeight(){
  $clinit_Style$FontWeight = emptyMethod;
  NORMAL_0 = new Style$FontWeight$1;
  BOLD = new Style$FontWeight$2;
  BOLDER = new Style$FontWeight$3;
  LIGHTER = new Style$FontWeight$4;
}

function Style$FontWeight(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_7(){
  $clinit_Style$FontWeight();
  return initValues(getClassLiteralForArray(Lcom_google_gwt_dom_client_Style$FontWeight_2_classLit, 1), $intern_1, 82, 0, [NORMAL_0, BOLD, BOLDER, LIGHTER]);
}

defineClass(82, 7, $intern_15);
var BOLD, BOLDER, LIGHTER, NORMAL_0;
var Lcom_google_gwt_dom_client_Style$FontWeight_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/FontWeight', 82, Ljava_lang_Enum_2_classLit, values_7);
function Style$FontWeight$1(){
  Style$FontWeight.call(this, 'NORMAL', 0);
}

defineClass(510, 82, $intern_15, Style$FontWeight$1);
var Lcom_google_gwt_dom_client_Style$FontWeight$1_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/FontWeight/1', 510, Lcom_google_gwt_dom_client_Style$FontWeight_2_classLit, null);
function Style$FontWeight$2(){
  Style$FontWeight.call(this, 'BOLD', 1);
}

defineClass(511, 82, $intern_15, Style$FontWeight$2);
var Lcom_google_gwt_dom_client_Style$FontWeight$2_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/FontWeight/2', 511, Lcom_google_gwt_dom_client_Style$FontWeight_2_classLit, null);
function Style$FontWeight$3(){
  Style$FontWeight.call(this, 'BOLDER', 2);
}

defineClass(512, 82, $intern_15, Style$FontWeight$3);
var Lcom_google_gwt_dom_client_Style$FontWeight$3_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/FontWeight/3', 512, Lcom_google_gwt_dom_client_Style$FontWeight_2_classLit, null);
function Style$FontWeight$4(){
  Style$FontWeight.call(this, 'LIGHTER', 3);
}

defineClass(513, 82, $intern_15, Style$FontWeight$4);
var Lcom_google_gwt_dom_client_Style$FontWeight$4_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/FontWeight/4', 513, Lcom_google_gwt_dom_client_Style$FontWeight_2_classLit, null);
function $clinit_Style$Overflow(){
  $clinit_Style$Overflow = emptyMethod;
  VISIBLE = new Style$Overflow$1;
  HIDDEN = new Style$Overflow$2;
  SCROLL = new Style$Overflow$3;
  AUTO = new Style$Overflow$4;
}

function Style$Overflow(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_8(){
  $clinit_Style$Overflow();
  return initValues(getClassLiteralForArray(Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, 1), $intern_1, 83, 0, [VISIBLE, HIDDEN, SCROLL, AUTO]);
}

defineClass(83, 7, $intern_16);
var AUTO, HIDDEN, SCROLL, VISIBLE;
var Lcom_google_gwt_dom_client_Style$Overflow_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Overflow', 83, Ljava_lang_Enum_2_classLit, values_8);
function Style$Overflow$1(){
  Style$Overflow.call(this, 'VISIBLE', 0);
}

defineClass(514, 83, $intern_16, Style$Overflow$1);
var Lcom_google_gwt_dom_client_Style$Overflow$1_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Overflow/1', 514, Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, null);
function Style$Overflow$2(){
  Style$Overflow.call(this, 'HIDDEN', 1);
}

defineClass(515, 83, $intern_16, Style$Overflow$2);
var Lcom_google_gwt_dom_client_Style$Overflow$2_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Overflow/2', 515, Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, null);
function Style$Overflow$3(){
  Style$Overflow.call(this, 'SCROLL', 2);
}

defineClass(516, 83, $intern_16, Style$Overflow$3);
var Lcom_google_gwt_dom_client_Style$Overflow$3_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Overflow/3', 516, Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, null);
function Style$Overflow$4(){
  Style$Overflow.call(this, 'AUTO', 3);
}

defineClass(517, 83, $intern_16, Style$Overflow$4);
var Lcom_google_gwt_dom_client_Style$Overflow$4_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Overflow/4', 517, Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, null);
function $clinit_Style$Position(){
  $clinit_Style$Position = emptyMethod;
  STATIC = new Style$Position$1;
  RELATIVE = new Style$Position$2;
  ABSOLUTE = new Style$Position$3;
  FIXED = new Style$Position$4;
}

function Style$Position(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_9(){
  $clinit_Style$Position();
  return initValues(getClassLiteralForArray(Lcom_google_gwt_dom_client_Style$Position_2_classLit, 1), $intern_1, 84, 0, [STATIC, RELATIVE, ABSOLUTE, FIXED]);
}

defineClass(84, 7, $intern_17);
var ABSOLUTE, FIXED, RELATIVE, STATIC;
var Lcom_google_gwt_dom_client_Style$Position_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Position', 84, Ljava_lang_Enum_2_classLit, values_9);
function Style$Position$1(){
  Style$Position.call(this, 'STATIC', 0);
}

defineClass(518, 84, $intern_17, Style$Position$1);
var Lcom_google_gwt_dom_client_Style$Position$1_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Position/1', 518, Lcom_google_gwt_dom_client_Style$Position_2_classLit, null);
function Style$Position$2(){
  Style$Position.call(this, 'RELATIVE', 1);
}

defineClass(519, 84, $intern_17, Style$Position$2);
var Lcom_google_gwt_dom_client_Style$Position$2_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Position/2', 519, Lcom_google_gwt_dom_client_Style$Position_2_classLit, null);
function Style$Position$3(){
  Style$Position.call(this, 'ABSOLUTE', 2);
}

defineClass(520, 84, $intern_17, Style$Position$3);
var Lcom_google_gwt_dom_client_Style$Position$3_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Position/3', 520, Lcom_google_gwt_dom_client_Style$Position_2_classLit, null);
function Style$Position$4(){
  Style$Position.call(this, 'FIXED', 3);
}

defineClass(521, 84, $intern_17, Style$Position$4);
var Lcom_google_gwt_dom_client_Style$Position$4_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Position/4', 521, Lcom_google_gwt_dom_client_Style$Position_2_classLit, null);
function $clinit_Style$Unit(){
  $clinit_Style$Unit = emptyMethod;
  PX = new Style$Unit$1;
  PCT = new Style$Unit$2;
  EM = new Style$Unit$3;
  EX = new Style$Unit$4;
  PT = new Style$Unit$5;
  PC = new Style$Unit$6;
  IN = new Style$Unit$7;
  CM = new Style$Unit$8;
  MM = new Style$Unit$9;
}

function Style$Unit(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_10(){
  $clinit_Style$Unit();
  return initValues(getClassLiteralForArray(Lcom_google_gwt_dom_client_Style$Unit_2_classLit, 1), $intern_1, 46, 0, [PX, PCT, EM, EX, PT, PC, IN, CM, MM]);
}

defineClass(46, 7, $intern_18);
var CM, EM, EX, IN, MM, PC, PCT, PT, PX;
var Lcom_google_gwt_dom_client_Style$Unit_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit', 46, Ljava_lang_Enum_2_classLit, values_10);
function Style$Unit$1(){
  Style$Unit.call(this, 'PX', 0);
}

defineClass(498, 46, $intern_18, Style$Unit$1);
var Lcom_google_gwt_dom_client_Style$Unit$1_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/1', 498, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null);
function Style$Unit$2(){
  Style$Unit.call(this, 'PCT', 1);
}

defineClass(499, 46, $intern_18, Style$Unit$2);
var Lcom_google_gwt_dom_client_Style$Unit$2_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/2', 499, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null);
function Style$Unit$3(){
  Style$Unit.call(this, 'EM', 2);
}

defineClass(500, 46, $intern_18, Style$Unit$3);
var Lcom_google_gwt_dom_client_Style$Unit$3_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/3', 500, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null);
function Style$Unit$4(){
  Style$Unit.call(this, 'EX', 3);
}

defineClass(501, 46, $intern_18, Style$Unit$4);
var Lcom_google_gwt_dom_client_Style$Unit$4_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/4', 501, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null);
function Style$Unit$5(){
  Style$Unit.call(this, 'PT', 4);
}

defineClass(502, 46, $intern_18, Style$Unit$5);
var Lcom_google_gwt_dom_client_Style$Unit$5_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/5', 502, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null);
function Style$Unit$6(){
  Style$Unit.call(this, 'PC', 5);
}

defineClass(503, 46, $intern_18, Style$Unit$6);
var Lcom_google_gwt_dom_client_Style$Unit$6_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/6', 503, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null);
function Style$Unit$7(){
  Style$Unit.call(this, 'IN', 6);
}

defineClass(504, 46, $intern_18, Style$Unit$7);
var Lcom_google_gwt_dom_client_Style$Unit$7_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/7', 504, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null);
function Style$Unit$8(){
  Style$Unit.call(this, 'CM', 7);
}

defineClass(505, 46, $intern_18, Style$Unit$8);
var Lcom_google_gwt_dom_client_Style$Unit$8_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/8', 505, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null);
function Style$Unit$9(){
  Style$Unit.call(this, 'MM', 8);
}

defineClass(506, 46, $intern_18, Style$Unit$9);
var Lcom_google_gwt_dom_client_Style$Unit$9_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Unit/9', 506, Lcom_google_gwt_dom_client_Style$Unit_2_classLit, null);
function $clinit_Style$Visibility(){
  $clinit_Style$Visibility = emptyMethod;
  VISIBLE_0 = new Style$Visibility$1;
  HIDDEN_0 = new Style$Visibility$2;
}

function Style$Visibility(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_11(){
  $clinit_Style$Visibility();
  return initValues(getClassLiteralForArray(Lcom_google_gwt_dom_client_Style$Visibility_2_classLit, 1), $intern_1, 143, 0, [VISIBLE_0, HIDDEN_0]);
}

defineClass(143, 7, $intern_19);
var HIDDEN_0, VISIBLE_0;
var Lcom_google_gwt_dom_client_Style$Visibility_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Visibility', 143, Ljava_lang_Enum_2_classLit, values_11);
function Style$Visibility$1(){
  Style$Visibility.call(this, 'VISIBLE', 0);
}

defineClass(522, 143, $intern_19, Style$Visibility$1);
var Lcom_google_gwt_dom_client_Style$Visibility$1_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Visibility/1', 522, Lcom_google_gwt_dom_client_Style$Visibility_2_classLit, null);
function Style$Visibility$2(){
  Style$Visibility.call(this, 'HIDDEN', 1);
}

defineClass(523, 143, $intern_19, Style$Visibility$2);
var Lcom_google_gwt_dom_client_Style$Visibility$2_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/Visibility/2', 523, Lcom_google_gwt_dom_client_Style$Visibility_2_classLit, null);
function $clinit_Style$WhiteSpace(){
  $clinit_Style$WhiteSpace = emptyMethod;
  NORMAL_1 = new Style$WhiteSpace$1;
  NOWRAP = new Style$WhiteSpace$2;
  PRE = new Style$WhiteSpace$3;
  PRE_LINE = new Style$WhiteSpace$4;
  PRE_WRAP = new Style$WhiteSpace$5;
}

function Style$WhiteSpace(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_12(){
  $clinit_Style$WhiteSpace();
  return initValues(getClassLiteralForArray(Lcom_google_gwt_dom_client_Style$WhiteSpace_2_classLit, 1), $intern_1, 72, 0, [NORMAL_1, NOWRAP, PRE, PRE_LINE, PRE_WRAP]);
}

defineClass(72, 7, $intern_20);
var NORMAL_1, NOWRAP, PRE, PRE_LINE, PRE_WRAP;
var Lcom_google_gwt_dom_client_Style$WhiteSpace_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/WhiteSpace', 72, Ljava_lang_Enum_2_classLit, values_12);
function Style$WhiteSpace$1(){
  Style$WhiteSpace.call(this, 'NORMAL', 0);
}

defineClass(524, 72, $intern_20, Style$WhiteSpace$1);
var Lcom_google_gwt_dom_client_Style$WhiteSpace$1_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/WhiteSpace/1', 524, Lcom_google_gwt_dom_client_Style$WhiteSpace_2_classLit, null);
function Style$WhiteSpace$2(){
  Style$WhiteSpace.call(this, 'NOWRAP', 1);
}

defineClass(525, 72, $intern_20, Style$WhiteSpace$2);
var Lcom_google_gwt_dom_client_Style$WhiteSpace$2_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/WhiteSpace/2', 525, Lcom_google_gwt_dom_client_Style$WhiteSpace_2_classLit, null);
function Style$WhiteSpace$3(){
  Style$WhiteSpace.call(this, 'PRE', 2);
}

defineClass(526, 72, $intern_20, Style$WhiteSpace$3);
var Lcom_google_gwt_dom_client_Style$WhiteSpace$3_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/WhiteSpace/3', 526, Lcom_google_gwt_dom_client_Style$WhiteSpace_2_classLit, null);
function Style$WhiteSpace$4(){
  Style$WhiteSpace.call(this, 'PRE_LINE', 3);
}

defineClass(527, 72, $intern_20, Style$WhiteSpace$4);
var Lcom_google_gwt_dom_client_Style$WhiteSpace$4_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/WhiteSpace/4', 527, Lcom_google_gwt_dom_client_Style$WhiteSpace_2_classLit, null);
function Style$WhiteSpace$5(){
  Style$WhiteSpace.call(this, 'PRE_WRAP', 4);
}

defineClass(528, 72, $intern_20, Style$WhiteSpace$5);
var Lcom_google_gwt_dom_client_Style$WhiteSpace$5_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/WhiteSpace/5', 528, Lcom_google_gwt_dom_client_Style$WhiteSpace_2_classLit, null);
function $getRelativeX(this$static, target){
  return ((this$static.clientX || 0) | 0) - $getAbsoluteLeft(target) + $getScrollLeft_0(target) + $getScrollLeft(target.ownerDocument);
}

function $getRelativeY(this$static, target){
  return ((this$static.clientY || 0) | 0) - $getAbsoluteTop(target) + ($getSubPixelScrollTop(target) | 0) + $getScrollTop(target.ownerDocument);
}

defineClass(970, 1, {});
_.toString$ = function toString_18(){
  return 'An event type';
}
;
var Lcom_google_web_bindery_event_shared_Event_2_classLit = createForClass('com.google.web.bindery.event.shared', 'Event', 970, Ljava_lang_Object_2_classLit);
function $overrideSource(this$static, source){
  this$static.source = source;
}

defineClass(971, 970, {});
_.dead = false;
var Lcom_google_gwt_event_shared_GwtEvent_2_classLit = createForClass('com.google.gwt.event.shared', 'GwtEvent', 971, Lcom_google_web_bindery_event_shared_Event_2_classLit);
function $setNativeEvent(this$static, nativeEvent){
  this$static.nativeEvent = nativeEvent;
}

function $setRelativeElement(this$static, relativeElem){
  this$static.relativeElem = relativeElem;
}

function fireNativeEvent(nativeEvent, handlerSource, relativeElem){
  var currentNative, currentRelativeElem, type_0, type$iterator, types;
  if (registered) {
    types = $unsafeGet(registered, nativeEvent.type);
    if (types) {
      for (type$iterator = types.iterator(); type$iterator.hasNext();) {
        type_0 = type$iterator.next_0();
        currentNative = type_0.flyweight.nativeEvent;
        currentRelativeElem = type_0.flyweight.relativeElem;
        $setNativeEvent(type_0.flyweight, nativeEvent);
        $setRelativeElement(type_0.flyweight, relativeElem);
        $fireEvent_0(handlerSource, type_0.flyweight);
        $setNativeEvent(type_0.flyweight, currentNative);
        $setRelativeElement(type_0.flyweight, currentRelativeElem);
      }
    }
  }
}

defineClass(1017, 971, {});
_.getAssociatedType = function getAssociatedType(){
  return $clinit_EndedEvent() , TYPE;
}
;
var registered;
var Lcom_google_gwt_event_dom_client_DomEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'DomEvent', 1017, Lcom_google_gwt_event_shared_GwtEvent_2_classLit);
defineClass(430, 1, {});
_.hashCode$ = function hashCode_12(){
  return this.index_0;
}
;
_.toString$ = function toString_19(){
  return 'Event type';
}
;
_.index_0 = 0;
var nextHashCode = 0;
var Lcom_google_web_bindery_event_shared_Event$Type_2_classLit = createForClass('com.google.web.bindery.event.shared', 'Event/Type', 430, Ljava_lang_Object_2_classLit);
function GwtEvent$Type(){
  this.index_0 = ++nextHashCode;
}

defineClass(220, 430, {}, GwtEvent$Type);
var Lcom_google_gwt_event_shared_GwtEvent$Type_2_classLit = createForClass('com.google.gwt.event.shared', 'GwtEvent/Type', 220, Lcom_google_web_bindery_event_shared_Event$Type_2_classLit);
function DomEvent$Type(flyweight){
  var types;
  GwtEvent$Type.call(this);
  this.flyweight = flyweight;
  !registered && (registered = new PrivateMap);
  types = registered.map_0['ended'];
  if (!types) {
    types = new ArrayList;
    $unsafePut(registered, types);
  }
  types.add_0(this);
  this.name_0 = 'ended';
}

defineClass(772, 220, {}, DomEvent$Type);
var Lcom_google_gwt_event_dom_client_DomEvent$Type_2_classLit = createForClass('com.google.gwt.event.dom.client', 'DomEvent/Type', 772, Lcom_google_gwt_event_shared_GwtEvent$Type_2_classLit);
function $clinit_EndedEvent(){
  $clinit_EndedEvent = emptyMethod;
  TYPE = new DomEvent$Type(new EndedEvent);
}

function EndedEvent(){
}

defineClass(771, 1017, {}, EndedEvent);
_.dispatch = function dispatch(handler){
  $fireOnPlaybackComplete(handler.this$01.soundHandlerCollection, handler.this$01);
}
;
var TYPE;
var Lcom_google_gwt_event_dom_client_EndedEvent_2_classLit = createForClass('com.google.gwt.event.dom.client', 'EndedEvent', 771, Lcom_google_gwt_event_dom_client_DomEvent_2_classLit);
function $unsafeGet(this$static, key){
  return this$static.map_0[key];
}

function $unsafePut(this$static, value_0){
  this$static.map_0['ended'] = value_0;
}

function PrivateMap(){
  this.map_0 = {};
}

defineClass(817, 1, {}, PrivateMap);
var Lcom_google_gwt_event_dom_client_PrivateMap_2_classLit = createForClass('com.google.gwt.event.dom.client', 'PrivateMap', 817, Ljava_lang_Object_2_classLit);
function CloseEvent_0(){
}

function fire(source){
  var event_0;
  if (TYPE_0) {
    event_0 = new CloseEvent_0;
    $fireEvent(source, event_0);
  }
}

defineClass(592, 971, {}, CloseEvent_0);
_.dispatch = function dispatch_0(handler){
  detachWidgets();
}
;
_.getAssociatedType = function getAssociatedType_0(){
  return TYPE_0;
}
;
var TYPE_0;
var Lcom_google_gwt_event_logical_shared_CloseEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared', 'CloseEvent', 592, Lcom_google_gwt_event_shared_GwtEvent_2_classLit);
function $addHandler(this$static, type_0, handler){
  return new LegacyHandlerWrapper($doAdd(this$static.eventBus, type_0, handler));
}

function $fireEvent(this$static, event_0){
  var e, oldSource;
  !event_0.dead || (event_0.dead = false , event_0.source = null);
  oldSource = event_0.source;
  $overrideSource(event_0, this$static.source);
  try {
    $doFire(this$static.eventBus, event_0);
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 146)) {
      e = $e0;
      throw new UmbrellaException_0(e.causes);
    }
     else 
      throw unwrap($e0);
  }
   finally {
    oldSource == null?(event_0.dead = true , event_0.source = null):(event_0.source = oldSource);
  }
}

function HandlerManager(source){
  this.eventBus = new HandlerManager$Bus;
  this.source = source;
}

defineClass(219, 1, {102:1}, HandlerManager);
var Lcom_google_gwt_event_shared_HandlerManager_2_classLit = createForClass('com.google.gwt.event.shared', 'HandlerManager', 219, Ljava_lang_Object_2_classLit);
defineClass(972, 1, {});
var Lcom_google_web_bindery_event_shared_EventBus_2_classLit = createForClass('com.google.web.bindery.event.shared', 'EventBus', 972, Ljava_lang_Object_2_classLit);
function $defer(this$static, command){
  !this$static.deferredDeltas && (this$static.deferredDeltas = new ArrayList);
  $add_0(this$static.deferredDeltas, command);
}

function $doAdd(this$static, type_0, handler){
  if (!type_0) {
    throw new NullPointerException_0('Cannot add a handler with a null type');
  }
  this$static.firingDepth > 0?$defer(this$static, new SimpleEventBus$2(this$static, type_0, handler)):$doAddNow(this$static, type_0, null, handler);
  return new SimpleEventBus$1(this$static, type_0, handler);
}

function $doAddNow(this$static, type_0, source, handler){
  var l;
  l = $ensureHandlerList(this$static, type_0, source);
  l.add_0(handler);
}

function $doFire(this$static, event_0){
  var causes, e, handler, handlers, it;
  if (!event_0) {
    throw new NullPointerException_0('Cannot fire null event');
  }
  try {
    ++this$static.firingDepth;
    handlers = $getDispatchList(this$static, event_0.getAssociatedType());
    causes = null;
    it = this$static.isReverseOrder?handlers.listIterator_0(handlers.size_1()):handlers.listIterator();
    while (this$static.isReverseOrder?it.hasPrevious():it.hasNext()) {
      handler = this$static.isReverseOrder?it.previous_0():it.next_0();
      try {
        event_0.dispatch(handler);
      }
       catch ($e0) {
        $e0 = wrap_0($e0);
        if (instanceOf($e0, 12)) {
          e = $e0;
          !causes && (causes = new HashSet);
          $add_11(causes, e);
        }
         else 
          throw unwrap($e0);
      }
    }
    if (causes) {
      throw new UmbrellaException(causes);
    }
  }
   finally {
    --this$static.firingDepth;
    this$static.firingDepth == 0 && $handleQueuedAddsAndRemoves(this$static);
  }
}

function $doRemoveNow(this$static, type_0, source, handler){
  var l, removed, sourceMap;
  l = $getHandlerList(this$static, type_0, source);
  removed = l.remove(handler);
  removed && l.isEmpty() && (sourceMap = this$static.map_0.get_1(type_0) , sourceMap.remove_2(source) , sourceMap.isEmpty() && this$static.map_0.remove_2(type_0) , undefined);
}

function $ensureHandlerList(this$static, type_0, source){
  var handlers, sourceMap;
  sourceMap = this$static.map_0.get_1(type_0);
  if (!sourceMap) {
    sourceMap = new HashMap;
    this$static.map_0.put(type_0, sourceMap);
  }
  handlers = sourceMap.get_1(source);
  if (!handlers) {
    handlers = new ArrayList;
    sourceMap.put(source, handlers);
  }
  return handlers;
}

function $getDispatchList(this$static, type_0){
  var directHandlers;
  directHandlers = $getHandlerList(this$static, type_0, null);
  return directHandlers;
}

function $getHandlerList(this$static, type_0, source){
  var handlers, sourceMap;
  sourceMap = this$static.map_0.get_1(type_0);
  if (!sourceMap) {
    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;
  }
  handlers = sourceMap.get_1(source);
  if (!handlers) {
    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;
  }
  return handlers;
}

function $handleQueuedAddsAndRemoves(this$static){
  var c, c$iterator;
  if (this$static.deferredDeltas) {
    try {
      for (c$iterator = new AbstractList$IteratorImpl(this$static.deferredDeltas); c$iterator.i < c$iterator.this$01_0.size_1();) {
        c = (checkCriticalElement(c$iterator.i < c$iterator.this$01_0.size_1()) , c$iterator.this$01_0.get_0(c$iterator.last = c$iterator.i++));
        c.execute();
      }
    }
     finally {
      this$static.deferredDeltas = null;
    }
  }
}

defineClass(431, 972, {});
_.firingDepth = 0;
_.isReverseOrder = false;
var Lcom_google_web_bindery_event_shared_SimpleEventBus_2_classLit = createForClass('com.google.web.bindery.event.shared', 'SimpleEventBus', 431, Lcom_google_web_bindery_event_shared_EventBus_2_classLit);
function $doRemove(this$static, type_0, source, handler){
  this$static.firingDepth > 0?$defer(this$static, new SimpleEventBus$3(this$static, type_0, source, handler)):$doRemoveNow(this$static, type_0, source, handler);
}

function HandlerManager$Bus(){
  this.map_0 = new HashMap;
  this.isReverseOrder = false;
}

defineClass(432, 431, {}, HandlerManager$Bus);
var Lcom_google_gwt_event_shared_HandlerManager$Bus_2_classLit = createForClass('com.google.gwt.event.shared', 'HandlerManager/Bus', 432, Lcom_google_web_bindery_event_shared_SimpleEventBus_2_classLit);
function LegacyHandlerWrapper(real){
  this.real = real;
}

defineClass(577, 1, {}, LegacyHandlerWrapper);
var Lcom_google_gwt_event_shared_LegacyHandlerWrapper_2_classLit = createForClass('com.google.gwt.event.shared', 'LegacyHandlerWrapper', 577, Ljava_lang_Object_2_classLit);
function UmbrellaException(causes){
  RuntimeException_1.call(this, makeMessage(causes), makeCause(causes));
  this.causes = causes;
}

function makeCause(causes){
  var iterator;
  iterator = causes.iterator();
  if (!iterator.hasNext()) {
    return null;
  }
  return iterator.next_0();
}

function makeMessage(causes){
  var b, count, first, t, t$iterator;
  count = causes.size_1();
  if (count == 0) {
    return null;
  }
  b = new StringBuilder_1(count == 1?'Exception caught: ':count + ' exceptions caught: ');
  first = true;
  for (t$iterator = causes.iterator(); t$iterator.hasNext();) {
    t = t$iterator.next_0();
    first?(first = false):(b.string += '; ' , b);
    $append_7(b, t.getMessage());
  }
  return b.string;
}

defineClass(146, 10, $intern_21, UmbrellaException);
var Lcom_google_web_bindery_event_shared_UmbrellaException_2_classLit = createForClass('com.google.web.bindery.event.shared', 'UmbrellaException', 146, Ljava_lang_RuntimeException_2_classLit);
function UmbrellaException_0(causes){
  UmbrellaException.call(this, causes);
}

defineClass(301, 146, $intern_21, UmbrellaException_0);
var Lcom_google_gwt_event_shared_UmbrellaException_2_classLit = createForClass('com.google.gwt.event.shared', 'UmbrellaException', 301, Lcom_google_web_bindery_event_shared_UmbrellaException_2_classLit);
function throwIfNull(value_0){
  if (null == value_0) {
    throw new NullPointerException_0('encodedURLComponent cannot be null');
  }
}

function $clinit_DateTimeFormat(){
  $clinit_DateTimeFormat = emptyMethod;
  new HashMap;
}

function $addPart(this$static, buf, count){
  if (buf.string.length > 0) {
    $add_0(this$static.patternParts, new DateTimeFormat$PatternPart(buf.string, count));
    $setLength(buf, 0);
  }
}

function $format(this$static, date, timeZone){
  var ch_0, diff, i, j, keepDate, keepTime, n, toAppendTo, trailQuote;
  !timeZone && (timeZone = createTimeZone(date.jsdate.getTimezoneOffset()));
  diff = (date.jsdate.getTimezoneOffset() - timeZone.standardOffset) * 60000;
  keepDate = new Date_0(add_8(fromDouble(date.jsdate.getTime()), fromInt(diff)));
  keepTime = keepDate;
  if (keepDate.jsdate.getTimezoneOffset() != date.jsdate.getTimezoneOffset()) {
    diff > 0?(diff -= 86400000):(diff += 86400000);
    keepTime = new Date_0(add_8(fromDouble(date.jsdate.getTime()), fromInt(diff)));
  }
  toAppendTo = new StringBuilder_0;
  n = this$static.pattern.length;
  for (i = 0; i < n;) {
    ch_0 = $charAt_0(this$static.pattern, i);
    if (ch_0 >= 97 && ch_0 <= 122 || ch_0 >= 65 && ch_0 <= 90) {
      for (j = i + 1; j < n && $charAt_0(this$static.pattern, j) == ch_0; ++j)
      ;
      $subFormat(toAppendTo, ch_0, j - i, keepDate, keepTime, timeZone);
      i = j;
    }
     else if (ch_0 == 39) {
      ++i;
      if (i < n && $charAt_0(this$static.pattern, i) == 39) {
        toAppendTo.string += "'";
        ++i;
        continue;
      }
      trailQuote = false;
      while (!trailQuote) {
        j = i;
        while (j < n && $charAt_0(this$static.pattern, j) != 39) {
          ++j;
        }
        if (j >= n) {
          throw new IllegalArgumentException_0("Missing trailing '");
        }
        j + 1 < n && $charAt_0(this$static.pattern, j + 1) == 39?++j:(trailQuote = true);
        $append_7(toAppendTo, $substring_0(this$static.pattern, i, j));
        i = j + 1;
      }
    }
     else {
      toAppendTo.string += charToString(ch_0);
      ++i;
    }
  }
  return toAppendTo.string;
}

function $formatFractionalSeconds(buf, count, date){
  var time, value_0;
  time = fromDouble(date.jsdate.getTime());
  if (lt(time, {l:0, m:0, h:0})) {
    value_0 = $intern_2 - toInt(mod_0(neg(time), {l:$intern_2, m:0, h:0}));
    value_0 == $intern_2 && (value_0 = 0);
  }
   else {
    value_0 = toInt(mod_0(time, {l:$intern_2, m:0, h:0}));
  }
  if (count == 1) {
    value_0 = ~~((value_0 + 50) / 100) < 9?~~((value_0 + 50) / 100):9;
    $append_1(buf, 48 + value_0 & $intern_22);
  }
   else if (count == 2) {
    value_0 = ~~((value_0 + 5) / 10) < 99?~~((value_0 + 5) / 10):99;
    $zeroPaddingNumber(buf, value_0, 2);
  }
   else {
    $zeroPaddingNumber(buf, value_0, 3);
    count > 3 && $zeroPaddingNumber(buf, 0, count - 3);
  }
}

function $formatMonth(buf, count, date){
  var value_0;
  value_0 = date.jsdate.getMonth();
  switch (count) {
    case 5:
      $append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'])[value_0]);
      break;
    case 4:
      $append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'])[value_0]);
      break;
    case 3:
      $append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])[value_0]);
      break;
    default:$zeroPaddingNumber(buf, value_0 + 1, count);
  }
}

function $formatYear(buf, count, date){
  var value_0;
  value_0 = date.jsdate.getFullYear() - 1900 + 1900;
  value_0 < 0 && (value_0 = -value_0);
  switch (count) {
    case 1:
      buf.string += value_0;
      break;
    case 2:
      $zeroPaddingNumber(buf, value_0 % 100, 2);
      break;
    default:$zeroPaddingNumber(buf, value_0, count);
  }
}

function $getNextCharCountInPattern(start_0){
  var ch_0, next;
  ch_0 = 'h:mm aaa'.charCodeAt(start_0);
  next = start_0 + 1;
  while (next < 8 && 'h:mm aaa'.charCodeAt(next) == ch_0) {
    ++next;
  }
  return next - start_0;
}

function $identifyAbutStart(this$static){
  var abut, i, len;
  abut = false;
  len = this$static.patternParts.array.length;
  for (i = 0; i < len; i++) {
    if ($isNumeric($get(this$static.patternParts, i))) {
      if (!abut && i + 1 < len && $isNumeric($get(this$static.patternParts, i + 1))) {
        abut = true;
        $get(this$static.patternParts, i).abutStart = true;
      }
    }
     else {
      abut = false;
    }
  }
}

function $isNumeric(part){
  var i;
  if (part.count <= 0) {
    return false;
  }
  i = $indexOf_2('MLydhHmsSDkK', fromCodePoint(part.text_0.charCodeAt(0)));
  return i > 1 || i >= 0 && part.count < 3;
}

function $parsePattern(this$static){
  var buf, ch_0, count, i, inQuote;
  buf = new StringBuilder_0;
  inQuote = false;
  for (i = 0; i < 8; i++) {
    ch_0 = 'h:mm aaa'.charCodeAt(i);
    if (ch_0 == 32) {
      $addPart(this$static, buf, 0);
      buf.string += ' ';
      $addPart(this$static, buf, 0);
      while (i + 1 < 8 && 'h:mm aaa'.charCodeAt(i + 1) == 32) {
        ++i;
      }
      continue;
    }
    if (inQuote) {
      if (ch_0 == 39) {
        if (i + 1 < 8 && 'h:mm aaa'.charCodeAt(i + 1) == 39) {
          buf.string += "'";
          ++i;
        }
         else {
          inQuote = false;
        }
      }
       else {
        buf.string += charToString(ch_0);
      }
      continue;
    }
    if ($indexOf_2('GyMLdkHmsSEcDahKzZv', fromCodePoint(ch_0)) > 0) {
      $addPart(this$static, buf, 0);
      buf.string += charToString(ch_0);
      count = $getNextCharCountInPattern(i);
      $addPart(this$static, buf, count);
      i += count - 1;
      continue;
    }
    if (ch_0 == 39) {
      if (i + 1 < 8 && 'h:mm aaa'.charCodeAt(i + 1) == 39) {
        buf.string += "'";
        ++i;
      }
       else {
        inQuote = true;
      }
    }
     else {
      buf.string += charToString(ch_0);
    }
  }
  $addPart(this$static, buf, 0);
  $identifyAbutStart(this$static);
}

function $subFormat(buf, ch_0, count, adjustedDate, adjustedTime, timezone){
  var value_0, value_1, value_2, value_3, value_4, value_5, value_6, value_7, value_8, value_9, value_10, value_11;
  switch (ch_0) {
    case 71:
      value_0 = adjustedDate.jsdate.getFullYear() - 1900 >= -1900?1:0;
      count >= 4?$append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['Before Christ', 'Anno Domini'])[value_0]):$append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['BC', 'AD'])[value_0]);
      break;
    case 121:
      $formatYear(buf, count, adjustedDate);
      break;
    case 77:
      $formatMonth(buf, count, adjustedDate);
      break;
    case 107:
      value_1 = adjustedTime.jsdate.getHours();
      value_1 == 0?$zeroPaddingNumber(buf, 24, count):$zeroPaddingNumber(buf, value_1, count);
      break;
    case 83:
      $formatFractionalSeconds(buf, count, adjustedTime);
      break;
    case 69:
      value_2 = adjustedDate.jsdate.getDay();
      count == 5?$append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['S', 'M', 'T', 'W', 'T', 'F', 'S'])[value_2]):count == 4?$append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'])[value_2]):$append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'])[value_2]);
      break;
    case 97:
      adjustedTime.jsdate.getHours() >= 12 && adjustedTime.jsdate.getHours() < 24?$append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['AM', 'PM'])[1]):$append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['AM', 'PM'])[0]);
      break;
    case 104:
      value_3 = adjustedTime.jsdate.getHours() % 12;
      value_3 == 0?$zeroPaddingNumber(buf, 12, count):$zeroPaddingNumber(buf, value_3, count);
      break;
    case 75:
      value_4 = adjustedTime.jsdate.getHours() % 12;
      $zeroPaddingNumber(buf, value_4, count);
      break;
    case 72:
      value_5 = adjustedTime.jsdate.getHours();
      $zeroPaddingNumber(buf, value_5, count);
      break;
    case 99:
      value_6 = adjustedDate.jsdate.getDay();
      count == 5?$append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['S', 'M', 'T', 'W', 'T', 'F', 'S'])[value_6]):count == 4?$append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'])[value_6]):count == 3?$append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'])[value_6]):$zeroPaddingNumber(buf, value_6, 1);
      break;
    case 76:
      value_7 = adjustedDate.jsdate.getMonth();
      count == 5?$append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'])[value_7]):count == 4?$append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'])[value_7]):count == 3?$append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])[value_7]):$zeroPaddingNumber(buf, value_7 + 1, count);
      break;
    case 81:
      value_8 = ~~(adjustedDate.jsdate.getMonth() / 3);
      count < 4?$append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['Q1', 'Q2', 'Q3', 'Q4'])[value_8]):$append_7(buf, initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'])[value_8]);
      break;
    case 100:
      value_9 = adjustedDate.jsdate.getDate();
      $zeroPaddingNumber(buf, value_9, count);
      break;
    case 109:
      value_10 = adjustedTime.jsdate.getMinutes();
      $zeroPaddingNumber(buf, value_10, count);
      break;
    case 115:
      value_11 = adjustedTime.jsdate.getSeconds();
      $zeroPaddingNumber(buf, value_11, count);
      break;
    case 122:
      count < 4?$append_7(buf, timezone.tzNames[0]):$append_7(buf, timezone.tzNames[1]);
      break;
    case 118:
      $append_7(buf, timezone.timezoneID);
      break;
    case 90:
      count < 3?$append_7(buf, $getRFCTimeZoneString(timezone)):count == 3?$append_7(buf, $getISOTimeZoneString(timezone)):$append_7(buf, composeGMTString(timezone.standardOffset));
      break;
    default:return false;
  }
  return true;
}

function $zeroPaddingNumber(buf, value_0, minWidth){
  var b, i;
  b = 10;
  for (i = 0; i < minWidth - 1; i++) {
    value_0 < b && (buf.string += '0' , buf);
    b *= 10;
  }
  buf.string += value_0;
}

defineClass(569, 1, {});
var Lcom_google_gwt_i18n_shared_DateTimeFormat_2_classLit = createForClass('com.google.gwt.i18n.shared', 'DateTimeFormat', 569, Ljava_lang_Object_2_classLit);
function $clinit_DateTimeFormat_0(){
  $clinit_DateTimeFormat_0 = emptyMethod;
  $clinit_DateTimeFormat();
  cache_0 = new HashMap;
}

function DateTimeFormat(){
  $clinit_DateTimeFormat();
  this.patternParts = new ArrayList;
  this.pattern = 'h:mm aaa';
  $parsePattern(this);
}

function getFormat(dtfi){
  $clinit_DateTimeFormat_0();
  var defaultDtfi, dtf;
  defaultDtfi = $getDateTimeFormatInfo(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance_0));
  dtf = null;
  dtfi == defaultDtfi && (dtf = cache_0.get_1('h:mm aaa'));
  if (!dtf) {
    dtf = new DateTimeFormat;
    dtfi == defaultDtfi && cache_0.put('h:mm aaa', dtf);
  }
  return dtf;
}

defineClass(570, 569, {}, DateTimeFormat);
var cache_0;
var Lcom_google_gwt_i18n_client_DateTimeFormat_2_classLit = createForClass('com.google.gwt.i18n.client', 'DateTimeFormat', 570, Lcom_google_gwt_i18n_shared_DateTimeFormat_2_classLit);
defineClass($intern_2, 1, {});
var Lcom_google_gwt_i18n_shared_DefaultDateTimeFormatInfo_2_classLit = createForClass('com.google.gwt.i18n.shared', 'DefaultDateTimeFormatInfo', $intern_2, Ljava_lang_Object_2_classLit);
defineClass(1001, $intern_2, {});
var Lcom_google_gwt_i18n_client_DefaultDateTimeFormatInfo_2_classLit = createForClass('com.google.gwt.i18n.client', 'DefaultDateTimeFormatInfo', 1001, Lcom_google_gwt_i18n_shared_DefaultDateTimeFormatInfo_2_classLit);
function $clinit_LocaleInfo(){
  $clinit_LocaleInfo = emptyMethod;
  instance_0 = new LocaleInfo;
}

function $getDateTimeFormatInfo(this$static){
  !this$static.dateTimeFormatInfo && (this$static.dateTimeFormatInfo = new DateTimeFormatInfoImpl);
  return this$static.dateTimeFormatInfo;
}

function LocaleInfo(){
}

defineClass(595, 1, {}, LocaleInfo);
var instance_0;
var Lcom_google_gwt_i18n_client_LocaleInfo_2_classLit = createForClass('com.google.gwt.i18n.client', 'LocaleInfo', 595, Ljava_lang_Object_2_classLit);
function $getISOTimeZoneString(this$static){
  var data_0, offset;
  offset = -this$static.standardOffset;
  data_0 = initValues(getClassLiteralForArray(C_classLit, 1), $intern_23, 0, 7, [43, 48, 48, 58, 48, 48]);
  if (offset < 0) {
    data_0[0] = 45;
    offset = -offset;
  }
  data_0[1] = data_0[1] + ~~(~~(offset / 60) / 10) & $intern_22;
  data_0[2] = data_0[2] + ~~(offset / 60) % 10 & $intern_22;
  data_0[4] = data_0[4] + ~~(offset % 60 / 10) & $intern_22;
  data_0[5] = data_0[5] + offset % 10 & $intern_22;
  return __valueOf(data_0, 0, data_0.length);
}

function $getRFCTimeZoneString(this$static){
  var data_0, offset;
  offset = -this$static.standardOffset;
  data_0 = initValues(getClassLiteralForArray(C_classLit, 1), $intern_23, 0, 7, [43, 48, 48, 48, 48]);
  if (offset < 0) {
    data_0[0] = 45;
    offset = -offset;
  }
  data_0[1] = data_0[1] + ~~(~~(offset / 60) / 10) & $intern_22;
  data_0[2] = data_0[2] + ~~(offset / 60) % 10 & $intern_22;
  data_0[3] = data_0[3] + ~~(offset % 60 / 10) & $intern_22;
  data_0[4] = data_0[4] + offset % 10 & $intern_22;
  return __valueOf(data_0, 0, data_0.length);
}

function TimeZone(){
}

function composeGMTString(offset){
  var data_0;
  data_0 = initValues(getClassLiteralForArray(C_classLit, 1), $intern_23, 0, 7, [71, 77, 84, 45, 48, 48, 58, 48, 48]);
  if (offset <= 0) {
    data_0[3] = 43;
    offset = -offset;
  }
  data_0[4] = data_0[4] + ~~(~~(offset / 60) / 10) & $intern_22;
  data_0[5] = data_0[5] + ~~(offset / 60) % 10 & $intern_22;
  data_0[7] = data_0[7] + ~~(offset % 60 / 10) & $intern_22;
  data_0[8] = data_0[8] + offset % 10 & $intern_22;
  return __valueOf(data_0, 0, data_0.length);
}

function composePOSIXTimeZoneID(offset){
  var str;
  if (offset == 0) {
    return 'Etc/GMT';
  }
  if (offset < 0) {
    offset = -offset;
    str = 'Etc/GMT-';
  }
   else {
    str = 'Etc/GMT+';
  }
  return str + offsetDisplay(offset);
}

function composeUTCString(offset){
  var str;
  if (offset == 0) {
    return 'UTC';
  }
  if (offset < 0) {
    offset = -offset;
    str = 'UTC+';
  }
   else {
    str = 'UTC-';
  }
  return str + offsetDisplay(offset);
}

function createTimeZone(timeZoneOffsetInMinutes){
  var tz;
  tz = new TimeZone;
  tz.standardOffset = timeZoneOffsetInMinutes;
  tz.timezoneID = composePOSIXTimeZoneID(timeZoneOffsetInMinutes);
  tz.tzNames = initDim(Ljava_lang_String_2_classLit, $intern_1, 2, 2, 4, 1);
  tz.tzNames[0] = composeUTCString(timeZoneOffsetInMinutes);
  tz.tzNames[1] = composeUTCString(timeZoneOffsetInMinutes);
  return tz;
}

function offsetDisplay(offset){
  var hour, mins;
  hour = ~~(offset / 60);
  mins = offset % 60;
  if (mins == 0) {
    return '' + hour;
  }
  return '' + hour + ':' + ('' + mins);
}

defineClass(934, 1, {}, TimeZone);
_.standardOffset = 0;
var Lcom_google_gwt_i18n_client_TimeZone_2_classLit = createForClass('com.google.gwt.i18n.client', 'TimeZone', 934, Ljava_lang_Object_2_classLit);
function DateTimeFormatInfoImpl(){
}

defineClass(650, 1001, {}, DateTimeFormatInfoImpl);
var Lcom_google_gwt_i18n_client_impl_cldr_DateTimeFormatInfoImpl_2_classLit = createForClass('com.google.gwt.i18n.client.impl.cldr', 'DateTimeFormatInfoImpl', 650, Lcom_google_gwt_i18n_client_DefaultDateTimeFormatInfo_2_classLit);
function DateTimeFormat$PatternPart(txt, cnt){
  this.text_0 = txt;
  this.count = cnt;
  this.abutStart = false;
}

defineClass(571, 1, {}, DateTimeFormat$PatternPart);
_.abutStart = false;
_.count = 0;
var Lcom_google_gwt_i18n_shared_DateTimeFormat$PatternPart_2_classLit = createForClass('com.google.gwt.i18n.shared', 'DateTimeFormat/PatternPart', 571, Ljava_lang_Object_2_classLit);
function clone(array){
  return cloneSubrange(array, array.length);
}

function cloneSubrange(array, toIndex){
  var result;
  result = array.slice(0, toIndex);
  initValues(getClass__Ljava_lang_Class___devirtual$(array), array.castableTypeMap$, array.__elementTypeId$, array.__elementTypeCategory$, result);
  return result;
}

function createFrom(array, length_0){
  var result;
  result = initializeArrayElementsWithDefaults(0, length_0);
  initValues(getClass__Ljava_lang_Class___devirtual$(array), array.castableTypeMap$, array.__elementTypeId$, array.__elementTypeCategory$, result);
  return result;
}

function getClassLiteralForArray(clazz, dimensions){
  return getClassLiteralForArray_0(clazz, dimensions);
}

function initDim(leafClassLiteral, castableTypeMap, elementTypeId, length_0, elementTypeCategory, dimensions){
  var result;
  result = initializeArrayElementsWithDefaults(elementTypeCategory, length_0);
  initValues(getClassLiteralForArray(leafClassLiteral, dimensions), castableTypeMap, elementTypeId, elementTypeCategory, result);
  return result;
}

function initValues(arrayClass, castableTypeMap, elementTypeId, elementTypeCategory, array){
  array.___clazz$ = arrayClass;
  array.castableTypeMap$ = castableTypeMap;
  array.typeMarker$ = typeMarkerFn;
  array.__elementTypeId$ = elementTypeId;
  array.__elementTypeCategory$ = elementTypeCategory;
  return array;
}

function initializeArrayElementsWithDefaults(elementTypeCategory, length_0){
  var array = new Array(length_0);
  var initValue;
  switch (elementTypeCategory) {
    case 6:
      initValue = {l:0, m:0, h:0};
      break;
    case 7:
      initValue = 0;
      break;
    case 8:
      initValue = false;
      break;
    default:return array;
  }
  for (var i = 0; i < length_0; ++i) {
    array[i] = initValue;
  }
  return array;
}

function nativeArraySplice(src_0, srcOfs, dest, destOfs, len, overwrite){
  if (src_0 === dest) {
    src_0 = src_0.slice(srcOfs, srcOfs + len);
    srcOfs = 0;
  }
  for (var batchStart = srcOfs, end = srcOfs + len; batchStart < end;) {
    var batchEnd = Math.min(batchStart + 10000, end);
    len = batchEnd - batchStart;
    Array.prototype.splice.apply(dest, [destOfs, overwrite?len:0].concat(src_0.slice(batchStart, batchEnd)));
    batchStart = batchEnd;
    destOfs += len;
  }
}

function cacheJavaScriptException(e, jse){
  if (e && typeof e == 'object') {
    try {
      e.__gwt$exception = jse;
    }
     catch (ignored) {
    }
  }
}

function unwrap(e){
  var jse;
  if (instanceOf(e, 121)) {
    jse = e;
    if (maskUndefined(jse.e) !== maskUndefined(($clinit_JavaScriptException() , NOT_SET))) {
      return maskUndefined(jse.e) === maskUndefined(NOT_SET)?null:jse.e;
    }
  }
  return e;
}

function wrap_0(e){
  var jse;
  if (instanceOf(e, 12)) {
    return e;
  }
  jse = e && e.__gwt$exception;
  if (!jse) {
    jse = new JavaScriptException(e);
    captureStackTrace(jse, e);
    cacheJavaScriptException(e, jse);
  }
  return jse;
}

function create_0(value_0){
  var a0, a1, a2;
  a0 = value_0 & $intern_10;
  a1 = value_0 >> 22 & $intern_10;
  a2 = value_0 < 0?$intern_11:0;
  return create0(a0, a1, a2);
}

function create_1(a){
  return create0(a.l, a.m, a.h);
}

function create0(l, m, h){
  return {l:l, m:m, h:h};
}

function divMod(a, b, computeRemainder){
  var aIsCopy, aIsMinValue, aIsNegative, bpower, c, negative;
  if (b.l == 0 && b.m == 0 && b.h == 0) {
    throw new ArithmeticException;
  }
  if (a.l == 0 && a.m == 0 && a.h == 0) {
    computeRemainder && (remainder_0 = create0(0, 0, 0));
    return create0(0, 0, 0);
  }
  if (b.h == $intern_24 && b.m == 0 && b.l == 0) {
    return divModByMinValue(a, computeRemainder);
  }
  negative = false;
  if (b.h >> 19 != 0) {
    b = neg(b);
    negative = true;
  }
  bpower = powerOfTwo(b);
  aIsNegative = false;
  aIsMinValue = false;
  aIsCopy = false;
  if (a.h == $intern_24 && a.m == 0 && a.l == 0) {
    aIsMinValue = true;
    aIsNegative = true;
    if (bpower == -1) {
      a = create_1(($clinit_LongLib$Const() , MAX_VALUE));
      aIsCopy = true;
      negative = !negative;
    }
     else {
      c = shr(a, bpower);
      negative && negate(c);
      computeRemainder && (remainder_0 = create0(0, 0, 0));
      return c;
    }
  }
   else if (a.h >> 19 != 0) {
    aIsNegative = true;
    a = neg(a);
    aIsCopy = true;
    negative = !negative;
  }
  if (bpower != -1) {
    return divModByShift(a, bpower, negative, aIsNegative, computeRemainder);
  }
  if (!gte_0(a, b)) {
    computeRemainder && (aIsNegative?(remainder_0 = neg(a)):(remainder_0 = create0(a.l, a.m, a.h)));
    return create0(0, 0, 0);
  }
  return divModHelper(aIsCopy?a:create0(a.l, a.m, a.h), b, negative, aIsNegative, aIsMinValue, computeRemainder);
}

function divModByMinValue(a, computeRemainder){
  if (a.h == $intern_24 && a.m == 0 && a.l == 0) {
    computeRemainder && (remainder_0 = create0(0, 0, 0));
    return create_1(($clinit_LongLib$Const() , ONE));
  }
  computeRemainder && (remainder_0 = create0(a.l, a.m, a.h));
  return create0(0, 0, 0);
}

function divModByShift(a, bpower, negative, aIsNegative, computeRemainder){
  var c;
  c = shr(a, bpower);
  negative && negate(c);
  if (computeRemainder) {
    a = maskRight(a, bpower);
    aIsNegative?(remainder_0 = neg(a)):(remainder_0 = create0(a.l, a.m, a.h));
  }
  return c;
}

function divModHelper(a, b, negative, aIsNegative, aIsMinValue, computeRemainder){
  var bshift, gte, quotient, shift_0, a1, a2, a0;
  shift_0 = numberOfLeadingZeros(b) - numberOfLeadingZeros(a);
  bshift = shl(b, shift_0);
  quotient = create0(0, 0, 0);
  while (shift_0 >= 0) {
    gte = trialSubtract(a, bshift);
    if (gte) {
      shift_0 < 22?(quotient.l |= 1 << shift_0 , undefined):shift_0 < 44?(quotient.m |= 1 << shift_0 - 22 , undefined):(quotient.h |= 1 << shift_0 - 44 , undefined);
      if (a.l == 0 && a.m == 0 && a.h == 0) {
        break;
      }
    }
    a1 = bshift.m;
    a2 = bshift.h;
    a0 = bshift.l;
    setH(bshift, a2 >>> 1);
    bshift.m = a1 >>> 1 | (a2 & 1) << 21;
    bshift.l = a0 >>> 1 | (a1 & 1) << 21;
    --shift_0;
  }
  negative && negate(quotient);
  if (computeRemainder) {
    if (aIsNegative) {
      remainder_0 = neg(a);
      aIsMinValue && (remainder_0 = sub_0(remainder_0, ($clinit_LongLib$Const() , ONE)));
    }
     else {
      remainder_0 = create0(a.l, a.m, a.h);
    }
  }
  return quotient;
}

function maskRight(a, bits){
  var b0, b1, b2;
  if (bits <= 22) {
    b0 = a.l & (1 << bits) - 1;
    b1 = b2 = 0;
  }
   else if (bits <= 44) {
    b0 = a.l;
    b1 = a.m & (1 << bits - 22) - 1;
    b2 = 0;
  }
   else {
    b0 = a.l;
    b1 = a.m;
    b2 = a.h & (1 << bits - 44) - 1;
  }
  return create0(b0, b1, b2);
}

function negate(a){
  var neg0, neg1, neg2;
  neg0 = ~a.l + 1 & $intern_10;
  neg1 = ~a.m + (neg0 == 0?1:0) & $intern_10;
  neg2 = ~a.h + (neg0 == 0 && neg1 == 0?1:0) & $intern_11;
  setL(a, neg0);
  setM(a, neg1);
  setH(a, neg2);
}

function numberOfLeadingZeros(a){
  var b1, b2;
  b2 = numberOfLeadingZeros_0(a.h);
  if (b2 == 32) {
    b1 = numberOfLeadingZeros_0(a.m);
    return b1 == 32?numberOfLeadingZeros_0(a.l) + 32:b1 + 20 - 10;
  }
   else {
    return b2 - 12;
  }
}

function powerOfTwo(a){
  var h, l, m;
  l = a.l;
  if ((l & l - 1) != 0) {
    return -1;
  }
  m = a.m;
  if ((m & m - 1) != 0) {
    return -1;
  }
  h = a.h;
  if ((h & h - 1) != 0) {
    return -1;
  }
  if (h == 0 && m == 0 && l == 0) {
    return -1;
  }
  if (h == 0 && m == 0 && l != 0) {
    return numberOfTrailingZeros(l);
  }
  if (h == 0 && m != 0 && l == 0) {
    return numberOfTrailingZeros(m) + 22;
  }
  if (h != 0 && m == 0 && l == 0) {
    return numberOfTrailingZeros(h) + 44;
  }
  return -1;
}

function setH(a, x_0){
  a.h = x_0;
}

function setL(a, x_0){
  a.l = x_0;
}

function setM(a, x_0){
  a.m = x_0;
}

function toDoubleHelper(a){
  return a.l + a.m * $intern_25 + a.h * $intern_26;
}

function trialSubtract(a, b){
  var sum0, sum1, sum2;
  sum2 = a.h - b.h;
  if (sum2 < 0) {
    return false;
  }
  sum0 = a.l - b.l;
  sum1 = a.m - b.m + (sum0 >> 22);
  sum2 += sum1 >> 22;
  if (sum2 < 0) {
    return false;
  }
  setL(a, sum0 & $intern_10);
  setM(a, sum1 & $intern_10);
  setH(a, sum2 & $intern_11);
  return true;
}

var remainder_0;
function add_8(a, b){
  var sum0, sum1, sum2;
  sum0 = a.l + b.l;
  sum1 = a.m + b.m + (sum0 >> 22);
  sum2 = a.h + b.h + (sum1 >> 22);
  return {l:sum0 & $intern_10, m:sum1 & $intern_10, h:sum2 & $intern_11};
}

function eq(a, b){
  return a.l == b.l && a.m == b.m && a.h == b.h;
}

function fromDouble(value_0){
  var a0, a1, a2, negative, result;
  if (isNaN(value_0)) {
    return $clinit_LongLib$Const() , ZERO;
  }
  if (value_0 < $intern_27) {
    return $clinit_LongLib$Const() , MIN_VALUE;
  }
  if (value_0 >= 9223372036854775807) {
    return $clinit_LongLib$Const() , MAX_VALUE;
  }
  negative = false;
  if (value_0 < 0) {
    negative = true;
    value_0 = -value_0;
  }
  a2 = 0;
  if (value_0 >= $intern_26) {
    a2 = round_int(value_0 / $intern_26);
    value_0 -= a2 * $intern_26;
  }
  a1 = 0;
  if (value_0 >= $intern_25) {
    a1 = round_int(value_0 / $intern_25);
    value_0 -= a1 * $intern_25;
  }
  a0 = round_int(value_0);
  result = create0(a0, a1, a2);
  negative && negate(result);
  return result;
}

function fromInt(value_0){
  var rebase, result;
  if (value_0 > -129 && value_0 < 128) {
    rebase = value_0 + 128;
    boxedValues == null && (boxedValues = initDim(Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit, $intern_1, 1025, 256, 0, 1));
    result = boxedValues[rebase];
    !result && (result = boxedValues[rebase] = create_0(value_0));
    return result;
  }
  return create_0(value_0);
}

function gt(a, b){
  var signa, signb;
  signa = a.h >> 19;
  signb = b.h >> 19;
  return signa == 0?signb != 0 || a.h > b.h || a.h == b.h && a.m > b.m || a.h == b.h && a.m == b.m && a.l > b.l:!(signb == 0 || a.h < b.h || a.h == b.h && a.m < b.m || a.h == b.h && a.m == b.m && a.l <= b.l);
}

function gte_0(a, b){
  var signa, signb;
  signa = a.h >> 19;
  signb = b.h >> 19;
  return signa == 0?signb != 0 || a.h > b.h || a.h == b.h && a.m > b.m || a.h == b.h && a.m == b.m && a.l >= b.l:!(signb == 0 || a.h < b.h || a.h == b.h && a.m < b.m || a.h == b.h && a.m == b.m && a.l < b.l);
}

function lt(a, b){
  return !gte_0(a, b);
}

function mod_0(a, b){
  divMod(a, b, true);
  return remainder_0;
}

function mul(a, b){
  var a0, a1, a2, a3, a4, b0, b1, b2, b3, b4, c0, c00, c01, c1, c10, c11, c12, c13, c2, c22, c23, c24, p0, p1, p2, p3, p4;
  a0 = a.l & 8191;
  a1 = a.l >> 13 | (a.m & 15) << 9;
  a2 = a.m >> 4 & 8191;
  a3 = a.m >> 17 | (a.h & 255) << 5;
  a4 = (a.h & 1048320) >> 8;
  b0 = b.l & 8191;
  b1 = b.l >> 13 | (b.m & 15) << 9;
  b2 = b.m >> 4 & 8191;
  b3 = b.m >> 17 | (b.h & 255) << 5;
  b4 = (b.h & 1048320) >> 8;
  p0 = a0 * b0;
  p1 = a1 * b0;
  p2 = a2 * b0;
  p3 = a3 * b0;
  p4 = a4 * b0;
  if (b1 != 0) {
    p1 += a0 * b1;
    p2 += a1 * b1;
    p3 += a2 * b1;
    p4 += a3 * b1;
  }
  if (b2 != 0) {
    p2 += a0 * b2;
    p3 += a1 * b2;
    p4 += a2 * b2;
  }
  if (b3 != 0) {
    p3 += a0 * b3;
    p4 += a1 * b3;
  }
  b4 != 0 && (p4 += a0 * b4);
  c00 = p0 & $intern_10;
  c01 = (p1 & 511) << 13;
  c0 = c00 + c01;
  c10 = p0 >> 22;
  c11 = p1 >> 9;
  c12 = (p2 & 262143) << 4;
  c13 = (p3 & 31) << 17;
  c1 = c10 + c11 + c12 + c13;
  c22 = p2 >> 18;
  c23 = p3 >> 5;
  c24 = (p4 & 4095) << 8;
  c2 = c22 + c23 + c24;
  c1 += c0 >> 22;
  c0 &= $intern_10;
  c2 += c1 >> 22;
  c1 &= $intern_10;
  c2 &= $intern_11;
  return create0(c0, c1, c2);
}

function neg(a){
  var neg0, neg1, neg2;
  neg0 = ~a.l + 1 & $intern_10;
  neg1 = ~a.m + (neg0 == 0?1:0) & $intern_10;
  neg2 = ~a.h + (neg0 == 0 && neg1 == 0?1:0) & $intern_11;
  return create0(neg0, neg1, neg2);
}

function shl(a, n){
  var res0, res1, res2;
  n &= 63;
  if (n < 22) {
    res0 = a.l << n;
    res1 = a.m << n | a.l >> 22 - n;
    res2 = a.h << n | a.m >> 22 - n;
  }
   else if (n < 44) {
    res0 = 0;
    res1 = a.l << n - 22;
    res2 = a.m << n - 22 | a.l >> 44 - n;
  }
   else {
    res0 = 0;
    res1 = 0;
    res2 = a.l << n - 44;
  }
  return {l:res0 & $intern_10, m:res1 & $intern_10, h:res2 & $intern_11};
}

function shr(a, n){
  var a2, negative, res0, res1, res2;
  n &= 63;
  a2 = a.h;
  negative = (a2 & $intern_24) != 0;
  negative && (a2 |= -1048576);
  if (n < 22) {
    res2 = a2 >> n;
    res1 = a.m >> n | a2 << 22 - n;
    res0 = a.l >> n | a.m << 22 - n;
  }
   else if (n < 44) {
    res2 = negative?$intern_11:0;
    res1 = a2 >> n - 22;
    res0 = a.m >> n - 22 | a2 << 44 - n;
  }
   else {
    res2 = negative?$intern_11:0;
    res1 = negative?$intern_10:0;
    res0 = a2 >> n - 44;
  }
  return {l:res0 & $intern_10, m:res1 & $intern_10, h:res2 & $intern_11};
}

function shru(a, n){
  var a2, res0, res1, res2;
  n &= 63;
  a2 = a.h & $intern_11;
  if (n < 22) {
    res2 = a2 >>> n;
    res1 = a.m >> n | a2 << 22 - n;
    res0 = a.l >> n | a.m << 22 - n;
  }
   else if (n < 44) {
    res2 = 0;
    res1 = a2 >>> n - 22;
    res0 = a.m >> n - 22 | a.h << 44 - n;
  }
   else {
    res2 = 0;
    res1 = 0;
    res0 = a2 >>> n - 44;
  }
  return {l:res0 & $intern_10, m:res1 & $intern_10, h:res2 & $intern_11};
}

function sub_0(a, b){
  var sum0, sum1, sum2;
  sum0 = a.l - b.l;
  sum1 = a.m - b.m + (sum0 >> 22);
  sum2 = a.h - b.h + (sum1 >> 22);
  return {l:sum0 & $intern_10, m:sum1 & $intern_10, h:sum2 & $intern_11};
}

function toDouble(a){
  if (eq(a, ($clinit_LongLib$Const() , MIN_VALUE))) {
    return $intern_27;
  }
  if (!gte_0(a, ZERO)) {
    return -toDoubleHelper(neg(a));
  }
  return a.l + a.m * $intern_25 + a.h * $intern_26;
}

function toInt(a){
  return a.l | a.m << 22;
}

function xor(a, b){
  return {l:a.l ^ b.l, m:a.m ^ b.m, h:a.h ^ b.h};
}

var boxedValues;
function $clinit_LongLib$Const(){
  $clinit_LongLib$Const = emptyMethod;
  MAX_VALUE = create0($intern_10, $intern_10, 524287);
  MIN_VALUE = create0(0, 0, $intern_24);
  ONE = fromInt(1);
  fromInt(2);
  ZERO = fromInt(0);
}

var MAX_VALUE, MIN_VALUE, ONE, ZERO;
function hasTypeMarker(o){
  return o.typeMarker$ === typeMarkerFn;
}

function init(){
  var config, plat, game;
  $onModuleLoad();
  config = new HtmlPlatform$Config;
  plat = new HtmlPlatform(config);
  plat.assets.pathPrefix = 'sim/';
  game = new SimGame(plat, new HtmlGameConfig);
  $addConnection(game.event_0, new SimGameHtml$1);
  $configureVisibilityChangeEventMonitoring(new BackgroundMuter);
  $listenForVisibilityChange(plat);
  $requestAnimationFrame(new HtmlPlatform$2(plat));
}

function $setElement(this$static, elem){
  this$static.element = elem;
}

function $sinkBitlessEvent(this$static, eventTypeName){
  sinkBitlessEvent(($clinit_DOM() , this$static.element), eventTypeName);
}

defineClass(87, 1, {118:1, 87:1});
_.toString$ = function toString_20(){
  if (!this.element) {
    return '(null handle)';
  }
  return ($clinit_DOM() , this.element).outerHTML;
}
;
var Lcom_google_gwt_user_client_ui_UIObject_2_classLit = createForClass('com.google.gwt.user.client.ui', 'UIObject', 87, Ljava_lang_Object_2_classLit);
function $addBitlessDomHandler(this$static, handler, type_0){
  $sinkBitlessEvent(this$static, type_0.name_0);
  return $addHandler(!this$static.handlerManager?(this$static.handlerManager = new HandlerManager(this$static)):this$static.handlerManager, type_0, handler);
}

function $fireEvent_0(this$static, event_0){
  !!this$static.handlerManager && $fireEvent(this$static.handlerManager, event_0);
}

function $onAttach(this$static){
  var bitsToAdd;
  if (this$static.attached) {
    throw new IllegalStateException_0("Should only call onAttach when the widget is detached from the browser's document");
  }
  this$static.attached = true;
  $clinit_DOM();
  setEventListener(this$static.element, this$static);
  bitsToAdd = this$static.eventsToSink;
  this$static.eventsToSink = -1;
  bitsToAdd > 0 && (this$static.eventsToSink == -1?sinkEvents(this$static.element, bitsToAdd | (this$static.element.__eventBits || 0)):(this$static.eventsToSink |= bitsToAdd));
  this$static.doAttachChildren();
}

function $onDetach(this$static){
  if (!this$static.attached) {
    throw new IllegalStateException_0("Should only call onDetach when the widget is attached to the browser's document");
  }
  try {
    this$static.doDetachChildren();
  }
   finally {
    $clinit_DOM();
    setEventListener(this$static.element, null);
    this$static.attached = false;
  }
}

function $removeFromParent(this$static){
  if (!this$static.parent_0) {
    $clinit_RootPanel();
    $contains_7(widgetsToDetach, this$static) && detachNow(this$static);
  }
   else if (this$static.parent_0) {
    $remove_3(this$static.parent_0, this$static);
  }
   else if (this$static.parent_0) {
    throw new IllegalStateException_0("This widget's parent does not implement HasWidgets");
  }
}

function $setParent(this$static, parent_0){
  var oldParent;
  oldParent = this$static.parent_0;
  if (!parent_0) {
    try {
      !!oldParent && oldParent.attached && $onDetach(this$static);
    }
     finally {
      this$static.parent_0 = null;
    }
  }
   else {
    if (oldParent) {
      throw new IllegalStateException_0('Cannot set a new parent without first clearing the old parent');
    }
    this$static.parent_0 = parent_0;
    parent_0.attached && this$static.onAttach();
  }
}

defineClass(79, 87, $intern_28);
_.doAttachChildren = function doAttachChildren(){
}
;
_.doDetachChildren = function doDetachChildren(){
}
;
_.onAttach = function onAttach(){
  $onAttach(this);
}
;
_.onBrowserEvent = function onBrowserEvent(event_0){
  var related;
  switch ($clinit_DOM() , $eventGetTypeInt(event_0.type)) {
    case 16:
    case 32:
      related = event_0.relatedTarget;
      if (!!related && $isOrHasChild(this.element, related)) {
        return;
      }

  }
  fireNativeEvent(event_0, this, this.element);
}
;
_.attached = false;
_.eventsToSink = 0;
var Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Widget', 79, Lcom_google_gwt_user_client_ui_UIObject_2_classLit);
defineClass(1010, 79, $intern_28);
_.onAttach = function onAttach_0(){
  var tabIndex;
  $onAttach(this);
  tabIndex = $getTabIndex(($clinit_DOM() , this.element));
  -1 == tabIndex && (this.element.tabIndex = 0 , undefined);
}
;
var Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit = createForClass('com.google.gwt.user.client.ui', 'FocusWidget', 1010, Lcom_google_gwt_user_client_ui_Widget_2_classLit);
function $getMediaElement(this$static){
  return $clinit_DOM() , this$static.element;
}

defineClass(721, 1010, $intern_28);
var Lcom_google_gwt_media_client_MediaBase_2_classLit = createForClass('com.google.gwt.media.client', 'MediaBase', 721, Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit);
function Audio_0(element){
  $setElement(this, ($clinit_DOM() , element));
}

function createIfSupported(){
  var element;
  !detector && (detector = new Audio$AudioElementSupportDetectedMaybe);
  element = $doc.createElement('audio');
  if (!isSupportedRunTime(element)) {
    return null;
  }
  return new Audio_0(element);
}

function isSupported(){
  var element;
  !detector && (detector = new Audio$AudioElementSupportDetectedMaybe);
  element = $doc.createElement('audio');
  if (!isSupportedRunTime(element)) {
    return false;
  }
  return true;
}

defineClass(722, 721, $intern_28, Audio_0);
var detector;
var Lcom_google_gwt_media_client_Audio_2_classLit = createForClass('com.google.gwt.media.client', 'Audio', 722, Lcom_google_gwt_media_client_MediaBase_2_classLit);
function isSupportedRunTime(element){
  return !!element.canPlayType;
}

defineClass(1011, 1, {});
var Lcom_google_gwt_media_client_Audio$AudioElementSupportDetector_2_classLit = createForClass('com.google.gwt.media.client', 'Audio/AudioElementSupportDetector', 1011, Ljava_lang_Object_2_classLit);
function Audio$AudioElementSupportDetectedMaybe(){
}

defineClass(328, 1011, {}, Audio$AudioElementSupportDetectedMaybe);
var Lcom_google_gwt_media_client_Audio$AudioElementSupportDetectedMaybe_2_classLit = createForClass('com.google.gwt.media.client', 'Audio/AudioElementSupportDetectedMaybe', 328, Lcom_google_gwt_media_client_Audio$AudioElementSupportDetector_2_classLit);
function $exec(this$static, input_0){
  return this$static.exec(input_0);
}

function $getItem(this$static, key){
  return $getItem_0(this$static.storage, key);
}

function $key(this$static, index_0){
  return $key_0(this$static.storage, index_0);
}

function $removeItem(this$static, key){
  $removeItem_0(this$static.storage, key);
}

function $setItem(this$static, key, data_0){
  $setItem_0(this$static.storage, key, data_0);
}

function Storage_0(){
  this.storage = 'localStorage';
}

defineClass(530, 1, {}, Storage_0);
var localStorage_0;
var Lcom_google_gwt_storage_client_Storage_2_classLit = createForClass('com.google.gwt.storage.client', 'Storage', 530, Ljava_lang_Object_2_classLit);
function $clinit_Storage$StorageSupportDetector(){
  $clinit_Storage$StorageSupportDetector = emptyMethod;
  localStorageSupported = checkStorageSupport('localStorage');
  checkStorageSupport('sessionStorage');
}

function checkStorageSupport(storage){
  var c = '_gwt_dummy_';
  try {
    $wnd[storage].setItem(c, c);
    $wnd[storage].removeItem(c);
    return true;
  }
   catch (e) {
    return false;
  }
}

var localStorageSupported = false;
function $getItem_0(storage, key){
  return $wnd[storage].getItem(key);
}

function $getLength(storage){
  return $wnd[storage].length;
}

function $key_0(storage, index_0){
  return index_0 >= 0 && index_0 < $wnd[storage].length?$wnd[storage].key(index_0):null;
}

function $removeItem_0(storage, key){
  $getItem_0(storage, key);
  $wnd[storage].removeItem(key);
}

function $setItem_0(storage, key, data_0){
  $getItem_0(storage, key);
  $wnd[storage].setItem(key, data_0);
}

function $containsEntry(this$static, entry){
  var key, ourValue, value_0;
  key = entry.getKey();
  value_0 = entry.getValue();
  ourValue = this$static.get_1(key);
  if (!(maskUndefined(value_0) === maskUndefined(ourValue) || value_0 != null && equals_Ljava_lang_Object__Z__devirtual$(value_0, ourValue))) {
    return false;
  }
  if (ourValue == null && !this$static.containsKey(key)) {
    return false;
  }
  return true;
}

function $implFindEntry(this$static, key, remove){
  var entry, iter, k;
  for (iter = this$static.entrySet_0().iterator(); iter.hasNext();) {
    entry = iter.next_0();
    k = entry.getKey();
    if (maskUndefined(key) === maskUndefined(k) || key != null && equals_Ljava_lang_Object__Z__devirtual$(key, k)) {
      if (remove) {
        entry = new AbstractMap$SimpleEntry(entry.getKey(), entry.getValue());
        iter.remove_1();
      }
      return entry;
    }
  }
  return null;
}

function $toString_4(this$static, o){
  return o === this$static?'(this Map)':'' + o;
}

function getEntryValueOrNull(entry){
  return !entry?null:entry.getValue();
}

defineClass(959, 1, $intern_29);
_.containsEntry = function containsEntry(entry){
  return $containsEntry(this, entry);
}
;
_.containsKey = function containsKey_1(key){
  return !!$implFindEntry(this, key, false);
}
;
_.equals$ = function equals_10(obj){
  var entry, entry$iterator, otherMap;
  if (obj === this) {
    return true;
  }
  if (!instanceOf(obj, 59)) {
    return false;
  }
  otherMap = obj;
  if (this.size_1() != otherMap.size_1()) {
    return false;
  }
  for (entry$iterator = otherMap.entrySet_0().iterator(); entry$iterator.hasNext();) {
    entry = entry$iterator.next_0();
    if (!this.containsEntry(entry)) {
      return false;
    }
  }
  return true;
}
;
_.get_1 = function get_5(key){
  return getEntryValueOrNull($implFindEntry(this, key, false));
}
;
_.hashCode$ = function hashCode_13(){
  return hashCode_29(this.entrySet_0());
}
;
_.isEmpty = function isEmpty_9(){
  return this.size_1() == 0;
}
;
_.keySet_0 = function keySet_0(){
  return new AbstractMap$1(this);
}
;
_.put = function put_0(key, value_0){
  throw new UnsupportedOperationException_0('Put not supported on this map');
}
;
_.remove_2 = function remove_9(key){
  return getEntryValueOrNull($implFindEntry(this, key, true));
}
;
_.size_1 = function size_12(){
  return this.entrySet_0().size_1();
}
;
_.toString$ = function toString_21(){
  var comma, entry, entry$iterator, sb;
  sb = new StringBuilder_1('{');
  comma = false;
  for (entry$iterator = this.entrySet_0().iterator(); entry$iterator.hasNext();) {
    entry = entry$iterator.next_0();
    comma?(sb.string += ', ' , sb):(comma = true);
    $append_7(sb, $toString_4(this, entry.getKey()));
    sb.string += '=';
    $append_7(sb, $toString_4(this, entry.getValue()));
  }
  sb.string += '}';
  return sb.string;
}
;
var Ljava_util_AbstractMap_2_classLit = createForClass('java.util', 'AbstractMap', 959, Ljava_lang_Object_2_classLit);
function $get_4(this$static, key){
  if (key == null) {
    throw new NullPointerException;
  }
  return $getItem(this$static.storage, toString__Ljava_lang_String___devirtual$(key));
}

function $put_0(this$static, key, value_0){
  var old;
  if (key == null || value_0 == null) {
    throw new NullPointerException;
  }
  old = $getItem(this$static.storage, key);
  $setItem(this$static.storage, key, value_0);
  return old;
}

function $remove_1(this$static, key){
  var k, old;
  if (key == null) {
    throw new NullPointerException;
  }
  k = toString__Ljava_lang_String___devirtual$(key);
  old = $getItem(this$static.storage, k);
  $removeItem(this$static.storage, k);
  return old;
}

function StorageMap(storage){
  this.storage = storage;
}

defineClass(531, 959, $intern_29, StorageMap);
_.containsKey = function containsKey_2(key){
  return $get_4(this, key) != null;
}
;
_.entrySet_0 = function entrySet_0(){
  return new StorageMap$StorageEntrySet(this);
}
;
_.get_1 = function get_6(key){
  return $get_4(this, key);
}
;
_.put = function put_1(key, value_0){
  return $put_0(this, key, value_0);
}
;
_.remove_2 = function remove_10(key){
  return $remove_1(this, key);
}
;
_.size_1 = function size_13(){
  return $getLength(this.storage.storage);
}
;
var Lcom_google_gwt_storage_client_StorageMap_2_classLit = createForClass('com.google.gwt.storage.client', 'StorageMap', 531, Ljava_util_AbstractMap_2_classLit);
function $eq(a, b){
  return maskUndefined(a) === maskUndefined(b) || a != null && $equals(a, b);
}

function $hashCode(o){
  return o != null?getHashCode_0(o):0;
}

function StorageMap$StorageEntry(this$0, key){
  this.this$01 = this$0;
  this.key_0 = key;
}

defineClass(532, 1, $intern_5, StorageMap$StorageEntry);
_.equals$ = function equals_11(obj){
  var e;
  if (!instanceOf(obj, 42)) {
    return false;
  }
  e = obj;
  return $eq(this.key_0, e.getKey()) && $eq($get_4(this.this$01, this.key_0), e.getValue());
}
;
_.getKey = function getKey_0(){
  return this.key_0;
}
;
_.getValue = function getValue_0(){
  return $get_4(this.this$01, this.key_0);
}
;
_.hashCode$ = function hashCode_14(){
  return $hashCode(this.key_0) ^ $hashCode($get_4(this.this$01, this.key_0));
}
;
_.setValue = function setValue_1(value_0){
  return $put_0(this.this$01, this.key_0, value_0);
}
;
var Lcom_google_gwt_storage_client_StorageMap$StorageEntry_2_classLit = createForClass('com.google.gwt.storage.client', 'StorageMap/StorageEntry', 532, Ljava_lang_Object_2_classLit);
function $next_0(this$static){
  if (this$static.index_0 >= $getLength(this$static.this$01.storage.storage) - 1) {
    throw new NoSuchElementException;
  }
  ++this$static.index_0;
  this$static.lastKey = $key(this$static.this$01.storage, this$static.index_0);
  return new StorageMap$StorageEntry(this$static.this$01, this$static.lastKey);
}

function StorageMap$StorageEntryIterator(this$0){
  this.this$01 = this$0;
}

defineClass(533, 1, {}, StorageMap$StorageEntryIterator);
_.hasNext = function hasNext_4(){
  return this.index_0 < $getLength(this.this$01.storage.storage) - 1;
}
;
_.next_0 = function next_5(){
  return $next_0(this);
}
;
_.remove_1 = function remove_11(){
  if (this.lastKey == null) {
    throw new IllegalStateException;
  }
  $removeItem(this.this$01.storage, this.lastKey);
  this.lastKey = null;
  --this.index_0;
}
;
_.index_0 = -1;
var Lcom_google_gwt_storage_client_StorageMap$StorageEntryIterator_2_classLit = createForClass('com.google.gwt.storage.client', 'StorageMap/StorageEntryIterator', 533, Ljava_lang_Object_2_classLit);
defineClass(961, 960, $intern_8);
_.equals$ = function equals_12(o){
  var other;
  if (o === this) {
    return true;
  }
  if (!instanceOf(o, 38)) {
    return false;
  }
  other = o;
  if (other.size_1() != this.size_1()) {
    return false;
  }
  return $containsAll(this, other);
}
;
_.hashCode$ = function hashCode_15(){
  return hashCode_29(this);
}
;
var Ljava_util_AbstractSet_2_classLit = createForClass('java.util', 'AbstractSet', 961, Ljava_util_AbstractCollection_2_classLit);
function $contains_0(this$static, o){
  var e, key, value_0;
  if (!instanceOf(o, 42)) {
    return false;
  }
  e = o;
  key = e.getKey();
  value_0 = e.getValue();
  return key != null && value_0 != null && equals_Ljava_lang_Object__Z__devirtual$(value_0, $get_4(this$static.this$01, key));
}

function StorageMap$StorageEntrySet(this$0){
  this.this$01 = this$0;
}

defineClass(534, 961, $intern_8, StorageMap$StorageEntrySet);
_.contains_0 = function contains_12(o){
  return $contains_0(this, o);
}
;
_.iterator = function iterator_15(){
  return new StorageMap$StorageEntryIterator(this.this$01);
}
;
_.remove = function remove_12(o){
  var entry;
  if (!$contains_0(this, o)) {
    return false;
  }
  entry = o;
  return $remove_1(this.this$01, entry.getKey()) != null;
}
;
_.size_1 = function size_14(){
  return $getLength(this.this$01.storage.storage);
}
;
var Lcom_google_gwt_storage_client_StorageMap$StorageEntrySet_2_classLit = createForClass('com.google.gwt.storage.client', 'StorageMap/StorageEntrySet', 534, Ljava_util_AbstractSet_2_classLit);
function create_2(buffer, byteOffset, length_0){
  return new Float32Array(buffer, byteOffset, length_0);
}

function create_3(buffer, byteOffset, length_0){
  return new Int16Array(buffer, byteOffset, length_0);
}

function $set_0(this$static, index_0, value_0){
  this$static[index_0] = value_0;
}

function create_4(buffer, byteOffset, length_0){
  return new Int32Array(buffer, byteOffset, length_0);
}

function create_5(buffer, byteOffset, length_0){
  return new Int8Array(buffer, byteOffset, length_0);
}

function create_6(buffer, byteOffset, length_0){
  return new Uint16Array(buffer, byteOffset, length_0);
}

function create_7(buffer, byteOffset, length_0){
  return new Uint8Array(buffer, byteOffset, length_0);
}

function $clinit_DOM(){
  $clinit_DOM = emptyMethod;
  $clinit_DOMImplStandard();
}

function dispatchEvent_0(evt, elem, listener){
  $clinit_DOM();
  var prevCurrentEvent;
  prevCurrentEvent = currentEvent;
  currentEvent = evt;
  elem == sCaptureElem && $eventGetTypeInt(evt.type) == 8192 && (sCaptureElem = null);
  listener.onBrowserEvent(evt);
  currentEvent = prevCurrentEvent;
}

function resolve(maybePotential){
  $clinit_DOM();
  return maybePotential.__gwt_resolve?maybePotential.__gwt_resolve():maybePotential;
}

function sinkBitlessEvent(elem, eventTypeName){
  var dispatchMap, dispatcher;
  $clinit_DOM();
  $maybeInitializeEventSystem();
  dispatchMap = bitlessEventDispatchers;
  dispatcher = dispatchMap[eventTypeName] || dispatchMap['_default_'];
  elem.addEventListener(eventTypeName, dispatcher, false);
}

function sinkEvents(elem, eventBits){
  $clinit_DOM();
  $maybeInitializeEventSystem();
  $sinkEventsImpl(elem, eventBits);
}

var currentEvent = null, sCaptureElem;
function $onModuleLoad(){
  var allowedModes, currentMode, i;
  currentMode = $doc.compatMode;
  allowedModes = initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['CSS1Compat']);
  for (i = 0; i < allowedModes.length; i++) {
    if ($equals(allowedModes[i], currentMode)) {
      return;
    }
  }
  allowedModes.length == 1 && $equals('CSS1Compat', allowedModes[0]) && $equals('BackCompat', currentMode)?"GWT no longer supports Quirks Mode (document.compatMode=' BackCompat').<br>Make sure your application's host HTML page has a Standards Mode (document.compatMode=' CSS1Compat') doctype,<br>e.g. by using &lt;!doctype html&gt; at the start of your application's HTML page.<br><br>To continue using this unsupported rendering mode and risk layout problems, suppress this message by adding<br>the following line to your*.gwt.xml module file:<br>&nbsp;&nbsp;&lt;extend-configuration-property name=\"document.compatMode\" value=\"" + currentMode + '"/&gt;':"Your *.gwt.xml module configuration prohibits the use of the current document rendering mode (document.compatMode=' " + currentMode + "').<br>Modify your application's host HTML page doctype, or update your custom " + "'document.compatMode' configuration property settings.";
}

function addCloseHandler(handler){
  maybeInitializeCloseHandlers();
  return addHandler(TYPE_0?TYPE_0:(TYPE_0 = new GwtEvent$Type), handler);
}

function addHandler(type_0, handler){
  return $addHandler((!handlers_0 && (handlers_0 = new Window$WindowHandlers) , handlers_0), type_0, handler);
}

function alert_0(msg){
  $wnd.alert(msg);
}

function maybeInitializeCloseHandlers(){
  if (!closeHandlersInitialized) {
    $initWindowCloseHandler();
    closeHandlersInitialized = true;
  }
}

function onClosing(){
  var event_0;
  if (closeHandlersInitialized) {
    event_0 = new Window$ClosingEvent;
    !!handlers_0 && $fireEvent(handlers_0, event_0);
    return null;
  }
  return null;
}

var closeHandlersInitialized = false, handlers_0;
function $clinit_Window$ClosingEvent(){
  $clinit_Window$ClosingEvent = emptyMethod;
  TYPE_1 = new GwtEvent$Type;
}

function Window$ClosingEvent(){
  $clinit_Window$ClosingEvent();
}

defineClass(429, 971, {}, Window$ClosingEvent);
_.dispatch = function dispatch_1(handler){
  null.nullMethod();
}
;
_.getAssociatedType = function getAssociatedType_1(){
  return TYPE_1;
}
;
var TYPE_1;
var Lcom_google_gwt_user_client_Window$ClosingEvent_2_classLit = createForClass('com.google.gwt.user.client', 'Window/ClosingEvent', 429, Lcom_google_gwt_event_shared_GwtEvent_2_classLit);
function buildListParamMap(queryString){
  var entry, entry$iterator, key, kv, kvPair, kvPair$array, kvPair$index, kvPair$max, out, qs, val, values, regexp;
  out = new HashMap;
  if (queryString != null && queryString.length > 1) {
    qs = __substr(queryString, 1, queryString.length - 1);
    for (kvPair$array = $split(qs, '&', 0) , kvPair$index = 0 , kvPair$max = kvPair$array.length; kvPair$index < kvPair$max; ++kvPair$index) {
      kvPair = kvPair$array[kvPair$index];
      kv = $split(kvPair, '=', 2);
      key = kv[0];
      if (!key.length) {
        continue;
      }
      val = kv.length > 1?kv[1]:'';
      try {
        val = (throwIfNull(val) , regexp = /\+/g , decodeURIComponent(val.replace(regexp, '%20')));
      }
       catch ($e0) {
        $e0 = wrap_0($e0);
        if (!instanceOf($e0, 121))
          throw unwrap($e0);
      }
      values = out.get_1(key);
      if (!values) {
        values = new ArrayList;
        out.put(key, values);
      }
      values.add_0(val);
    }
  }
  for (entry$iterator = out.entrySet_0().iterator(); entry$iterator.hasNext();) {
    entry = entry$iterator.next_0();
    entry.setValue(unmodifiableList(entry.getValue()));
  }
  out = ($clinit_Collections() , new Collections$UnmodifiableMap(out));
  return out;
}

function ensureListParameterMap(){
  var currentQueryString;
  currentQueryString = $wnd.location.search;
  if (!listParamMap || !$equals(cachedQueryString, currentQueryString)) {
    listParamMap = buildListParamMap(currentQueryString);
    cachedQueryString = currentQueryString;
  }
}

function getParameter(name_0){
  var paramsForName;
  ensureListParameterMap();
  paramsForName = listParamMap.get_1(name_0);
  return !paramsForName?null:paramsForName.get_0(paramsForName.size_1() - 1);
}

var cachedQueryString = '', listParamMap;
function getUserAgent(){
  return $wnd.navigator.userAgent;
}

function Window$WindowHandlers(){
  HandlerManager.call(this, null);
}

defineClass(288, 219, {102:1}, Window$WindowHandlers);
var Lcom_google_gwt_user_client_Window$WindowHandlers_2_classLit = createForClass('com.google.gwt.user.client', 'Window/WindowHandlers', 288, Lcom_google_gwt_event_shared_HandlerManager_2_classLit);
function $eventGetTypeInt(eventType){
  switch (eventType) {
    case 'blur':
      return 4096;
    case 'change':
      return 1024;
    case 'click':
      return 1;
    case 'dblclick':
      return 2;
    case 'focus':
      return 2048;
    case 'keydown':
      return 128;
    case 'keypress':
      return 256;
    case 'keyup':
      return 512;
    case 'load':
      return 32768;
    case 'losecapture':
      return 8192;
    case 'mousedown':
      return 4;
    case 'mousemove':
      return 64;
    case 'mouseout':
      return 32;
    case 'mouseover':
      return 16;
    case 'mouseup':
      return 8;
    case 'scroll':
      return 16384;
    case 'error':
      return $intern_30;
    case 'DOMMouseScroll':
    case 'mousewheel':
      return 131072;
    case 'contextmenu':
      return 262144;
    case 'paste':
      return $intern_24;
    case 'touchstart':
      return 1048576;
    case 'touchmove':
      return 2097152;
    case 'touchend':
      return $intern_25;
    case 'touchcancel':
      return 8388608;
    case 'gesturestart':
      return $intern_31;
    case 'gesturechange':
      return $intern_32;
    case 'gestureend':
      return $intern_33;
    default:return -1;
  }
}

function $maybeInitializeEventSystem(){
  if (!eventSystemIsInitialized) {
    $initEventSystem();
    eventSystemIsInitialized = true;
  }
}

function getEventListener(elem){
  var maybeListener = elem.__listener;
  return !instanceOfJso(maybeListener) && instanceOf(maybeListener, 119)?maybeListener:null;
}

function setEventListener(elem, listener){
  elem.__listener = listener;
}

var eventSystemIsInitialized = false;
function $clinit_DOMImplStandard(){
  $clinit_DOMImplStandard = emptyMethod;
  bitlessEventDispatchers = {_default_:dispatchEvent_2, dragenter:dispatchDragEvent, dragover:dispatchDragEvent};
  captureEventDispatchers = {click:dispatchCapturedMouseEvent, dblclick:dispatchCapturedMouseEvent, mousedown:dispatchCapturedMouseEvent, mouseup:dispatchCapturedMouseEvent, mousemove:dispatchCapturedMouseEvent, mouseover:dispatchCapturedMouseEvent, mouseout:dispatchCapturedMouseEvent, mousewheel:dispatchCapturedMouseEvent, keydown:dispatchCapturedEvent, keyup:dispatchCapturedEvent, keypress:dispatchCapturedEvent, touchstart:dispatchCapturedMouseEvent, touchend:dispatchCapturedMouseEvent, touchmove:dispatchCapturedMouseEvent, touchcancel:dispatchCapturedMouseEvent, gesturestart:dispatchCapturedMouseEvent, gestureend:dispatchCapturedMouseEvent, gesturechange:dispatchCapturedMouseEvent};
}

function $initEventSystem(){
  dispatchEvent_1 = $entry(dispatchEvent_2);
  dispatchUnhandledEvent = $entry(dispatchUnhandledEvent_0);
  var foreach = foreach_0;
  var bitlessEvents = bitlessEventDispatchers;
  foreach(bitlessEvents, function(e, fn){
    bitlessEvents[e] = $entry(fn);
  }
  );
  var captureEvents_0 = captureEventDispatchers;
  foreach(captureEvents_0, function(e, fn){
    captureEvents_0[e] = $entry(fn);
  }
  );
  foreach(captureEvents_0, function(e, fn){
    $wnd.addEventListener(e, fn, true);
  }
  );
}

function $sinkEventsImpl(elem, bits){
  var chMask = (elem.__eventBits || 0) ^ bits;
  elem.__eventBits = bits;
  if (!chMask)
    return;
  chMask & 1 && (elem.onclick = bits & 1?dispatchEvent_1:null);
  chMask & 2 && (elem.ondblclick = bits & 2?dispatchEvent_1:null);
  chMask & 4 && (elem.onmousedown = bits & 4?dispatchEvent_1:null);
  chMask & 8 && (elem.onmouseup = bits & 8?dispatchEvent_1:null);
  chMask & 16 && (elem.onmouseover = bits & 16?dispatchEvent_1:null);
  chMask & 32 && (elem.onmouseout = bits & 32?dispatchEvent_1:null);
  chMask & 64 && (elem.onmousemove = bits & 64?dispatchEvent_1:null);
  chMask & 128 && (elem.onkeydown = bits & 128?dispatchEvent_1:null);
  chMask & 256 && (elem.onkeypress = bits & 256?dispatchEvent_1:null);
  chMask & 512 && (elem.onkeyup = bits & 512?dispatchEvent_1:null);
  chMask & 1024 && (elem.onchange = bits & 1024?dispatchEvent_1:null);
  chMask & 2048 && (elem.onfocus = bits & 2048?dispatchEvent_1:null);
  chMask & 4096 && (elem.onblur = bits & 4096?dispatchEvent_1:null);
  chMask & 8192 && (elem.onlosecapture = bits & 8192?dispatchEvent_1:null);
  chMask & 16384 && (elem.onscroll = bits & 16384?dispatchEvent_1:null);
  chMask & 32768 && (elem.onload = bits & 32768?dispatchUnhandledEvent:null);
  chMask & $intern_30 && (elem.onerror = bits & $intern_30?dispatchEvent_1:null);
  chMask & 131072 && (elem.onmousewheel = bits & 131072?dispatchEvent_1:null);
  chMask & 262144 && (elem.oncontextmenu = bits & 262144?dispatchEvent_1:null);
  chMask & $intern_24 && (elem.onpaste = bits & $intern_24?dispatchEvent_1:null);
  chMask & 1048576 && (elem.ontouchstart = bits & 1048576?dispatchEvent_1:null);
  chMask & 2097152 && (elem.ontouchmove = bits & 2097152?dispatchEvent_1:null);
  chMask & $intern_25 && (elem.ontouchend = bits & $intern_25?dispatchEvent_1:null);
  chMask & 8388608 && (elem.ontouchcancel = bits & 8388608?dispatchEvent_1:null);
  chMask & $intern_31 && (elem.ongesturestart = bits & $intern_31?dispatchEvent_1:null);
  chMask & $intern_32 && (elem.ongesturechange = bits & $intern_32?dispatchEvent_1:null);
  chMask & $intern_33 && (elem.ongestureend = bits & $intern_33?dispatchEvent_1:null);
}

function dispatchCapturedEvent(evt){
  $clinit_DOM();
}

function dispatchCapturedMouseEvent(evt){
  $clinit_DOM();
  return;
}

function dispatchDragEvent(evt){
  $eventPreventDefault(evt);
  dispatchEvent_2(evt);
}

function dispatchEvent_2(evt){
  var element;
  element = getFirstAncestorWithListener(evt);
  if (!element) {
    return;
  }
  dispatchEvent_0(evt, element.nodeType != 1?null:element, getEventListener(element));
}

function dispatchUnhandledEvent_0(evt){
  var element;
  element = $eventGetCurrentTarget(evt);
  element['__gwtLastUnhandledEvent'] = evt.type;
  dispatchEvent_2(evt);
}

function getFirstAncestorWithListener(evt){
  var curElem;
  curElem = $eventGetCurrentTarget(evt);
  while (!!curElem && !getEventListener(curElem)) {
    curElem = curElem.parentNode;
  }
  return curElem;
}

var bitlessEventDispatchers, captureEventDispatchers, dispatchEvent_1, dispatchUnhandledEvent;
function foreach_0(map_0, fn){
  for (var e in map_0) {
    map_0.hasOwnProperty(e) && fn(e, map_0[e]);
  }
}

function $initWindowCloseHandler(){
  var oldOnBeforeUnload = $wnd.onbeforeunload;
  var oldOnUnload = $wnd.onunload;
  $wnd.onbeforeunload = function(evt){
    var ret, oldRet;
    try {
      ret = $entry(onClosing)();
    }
     finally {
      oldRet = oldOnBeforeUnload && oldOnBeforeUnload(evt);
    }
    if (ret != null) {
      return ret;
    }
    if (oldRet != null) {
      return oldRet;
    }
  }
  ;
  $wnd.onunload = $entry(function(evt){
    try {
      closeHandlersInitialized && fire((!handlers_0 && (handlers_0 = new Window$WindowHandlers) , handlers_0));
    }
     finally {
      oldOnUnload && oldOnUnload(evt);
      $wnd.onresize = null;
      $wnd.onscroll = null;
      $wnd.onbeforeunload = null;
      $wnd.onunload = null;
    }
  }
  );
}

defineClass(993, 79, $intern_28);
_.doAttachChildren = function doAttachChildren_0(){
  tryCommand(this, ($clinit_AttachDetachException() , attachCommand));
}
;
_.doDetachChildren = function doDetachChildren_0(){
  tryCommand(this, ($clinit_AttachDetachException() , detachCommand));
}
;
var Lcom_google_gwt_user_client_ui_Panel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'Panel', 993, Lcom_google_gwt_user_client_ui_Widget_2_classLit);
function $add_3(this$static, child, container){
  $removeFromParent(child);
  $add_5(this$static.children, child);
  $clinit_DOM();
  $appendChild(container, resolve(child.element));
  $setParent(child, this$static);
}

function $remove_2(this$static, w){
  var elem, parent_0;
  if (w.parent_0 != this$static) {
    return false;
  }
  try {
    $setParent(w, null);
  }
   finally {
    elem = ($clinit_DOM() , w.element);
    $removeChild((parent_0 = elem.parentNode , (!parent_0 || parent_0.nodeType != 1) && (parent_0 = null) , parent_0), elem);
    $remove_5(this$static.children, w);
  }
  return true;
}

defineClass(578, 993, $intern_28);
_.iterator = function iterator_16(){
  return new WidgetCollection$WidgetIterator(this.children);
}
;
_.remove_3 = function remove_13(w){
  return $remove_2(this, w);
}
;
var Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'ComplexPanel', 578, Lcom_google_gwt_user_client_ui_Panel_2_classLit);
function $add_4(this$static, w){
  $add_3(this$static, w, ($clinit_DOM() , this$static.element));
}

function $remove_3(this$static, w){
  var removed;
  removed = $remove_2(this$static, w);
  removed && changeToStaticPositioning(($clinit_DOM() , w.element));
  return removed;
}

function changeToStaticPositioning(elem){
  $setPropertyImpl(elem.style, 'left', '');
  $setPropertyImpl(elem.style, 'top', '');
  $setPropertyImpl(elem.style, 'position', '');
}

defineClass(579, 578, $intern_28);
_.remove_3 = function remove_14(w){
  return $remove_3(this, w);
}
;
var Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'AbsolutePanel', 579, Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit);
function $clinit_AttachDetachException(){
  $clinit_AttachDetachException = emptyMethod;
  attachCommand = new AttachDetachException$1;
  detachCommand = new AttachDetachException$2;
}

function AttachDetachException(causes){
  UmbrellaException_0.call(this, causes);
}

function tryCommand(hasWidgets, c){
  $clinit_AttachDetachException();
  var caught, e, w, w$iterator;
  caught = null;
  for (w$iterator = hasWidgets.iterator(); w$iterator.hasNext();) {
    w = w$iterator.next_0();
    try {
      c.execute_1(w);
    }
     catch ($e0) {
      $e0 = wrap_0($e0);
      if (instanceOf($e0, 12)) {
        e = $e0;
        !caught && (caught = new HashSet);
        $add_11(caught, e);
      }
       else 
        throw unwrap($e0);
    }
  }
  if (caught) {
    throw new AttachDetachException(caught);
  }
}

defineClass(584, 301, $intern_21, AttachDetachException);
var attachCommand, detachCommand;
var Lcom_google_gwt_user_client_ui_AttachDetachException_2_classLit = createForClass('com.google.gwt.user.client.ui', 'AttachDetachException', 584, Lcom_google_gwt_event_shared_UmbrellaException_2_classLit);
function AttachDetachException$1(){
}

defineClass(585, 1, {}, AttachDetachException$1);
_.execute_1 = function execute_5(w){
  w.onAttach();
}
;
var Lcom_google_gwt_user_client_ui_AttachDetachException$1_2_classLit = createForClass('com.google.gwt.user.client.ui', 'AttachDetachException/1', 585, Ljava_lang_Object_2_classLit);
function AttachDetachException$2(){
}

defineClass(586, 1, {}, AttachDetachException$2);
_.execute_1 = function execute_6(w){
  $onDetach(w);
}
;
var Lcom_google_gwt_user_client_ui_AttachDetachException$2_2_classLit = createForClass('com.google.gwt.user.client.ui', 'AttachDetachException/2', 586, Ljava_lang_Object_2_classLit);
function $clinit_RootPanel(){
  $clinit_RootPanel = emptyMethod;
  maybeDetachCommand = new RootPanel$1;
  rootPanels = new HashMap;
  widgetsToDetach = new HashSet;
}

function RootPanel(elem){
  this.children = new WidgetCollection(this);
  $setElement(this, ($clinit_DOM() , elem));
  $onAttach(this);
}

function detachNow(widget){
  $clinit_RootPanel();
  try {
    $onDetach(widget);
  }
   finally {
    $remove_12(widgetsToDetach, widget);
  }
}

function detachWidgets(){
  $clinit_RootPanel();
  try {
    tryCommand(widgetsToDetach, maybeDetachCommand);
  }
   finally {
    widgetsToDetach.map_0.clear_0();
    rootPanels.clear_0();
  }
}

function get_7(){
  $clinit_RootPanel();
  var rp;
  rp = rootPanels.get_1(null);
  if (rp) {
    return rp;
  }
  if (rootPanels.size_1() == 0) {
    addCloseHandler(new RootPanel$2);
    $clinit_LocaleInfo();
  }
  rp = new RootPanel$DefaultRootPanel;
  rootPanels.put(null, rp);
  $add_11(widgetsToDetach, rp);
  return rp;
}

function getBodyElement(){
  $clinit_RootPanel();
  return $doc.body;
}

defineClass(580, 579, $intern_28);
var maybeDetachCommand, rootPanels, widgetsToDetach;
var Lcom_google_gwt_user_client_ui_RootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'RootPanel', 580, Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit);
function RootPanel$1(){
}

defineClass(582, 1, {}, RootPanel$1);
_.execute_1 = function execute_7(w){
  w.attached && $onDetach(w);
}
;
var Lcom_google_gwt_user_client_ui_RootPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui', 'RootPanel/1', 582, Ljava_lang_Object_2_classLit);
function RootPanel$2(){
}

defineClass(583, 1, {}, RootPanel$2);
var Lcom_google_gwt_user_client_ui_RootPanel$2_2_classLit = createForClass('com.google.gwt.user.client.ui', 'RootPanel/2', 583, Ljava_lang_Object_2_classLit);
function RootPanel$DefaultRootPanel(){
  RootPanel.call(this, getBodyElement());
}

defineClass(581, 580, $intern_28, RootPanel$DefaultRootPanel);
var Lcom_google_gwt_user_client_ui_RootPanel$DefaultRootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui', 'RootPanel/DefaultRootPanel', 581, Lcom_google_gwt_user_client_ui_RootPanel_2_classLit);
function $add_5(this$static, w){
  $insert(this$static, w, this$static.size_0);
}

function $indexOf_1(this$static, w){
  var i;
  for (i = 0; i < this$static.size_0; ++i) {
    if (this$static.array[i] == w) {
      return i;
    }
  }
  return -1;
}

function $insert(this$static, w, beforeIndex){
  var i, i0, newArray;
  if (beforeIndex < 0 || beforeIndex > this$static.size_0) {
    throw new IndexOutOfBoundsException;
  }
  if (this$static.size_0 == this$static.array.length) {
    newArray = initDim(Lcom_google_gwt_user_client_ui_Widget_2_classLit, $intern_1, 79, this$static.array.length * 2, 0, 1);
    for (i0 = 0; i0 < this$static.array.length; ++i0) {
      newArray[i0] = this$static.array[i0];
    }
    this$static.array = newArray;
  }
  ++this$static.size_0;
  for (i = this$static.size_0 - 1; i > beforeIndex; --i) {
    this$static.array[i] = this$static.array[i - 1];
  }
  this$static.array[beforeIndex] = w;
}

function $remove_4(this$static, index_0){
  var i;
  if (index_0 < 0 || index_0 >= this$static.size_0) {
    throw new IndexOutOfBoundsException;
  }
  --this$static.size_0;
  for (i = index_0; i < this$static.size_0; ++i) {
    this$static.array[i] = this$static.array[i + 1];
  }
  this$static.array[this$static.size_0] = null;
}

function $remove_5(this$static, w){
  var index_0;
  index_0 = $indexOf_1(this$static, w);
  if (index_0 == -1) {
    throw new NoSuchElementException;
  }
  $remove_4(this$static, index_0);
}

function WidgetCollection(parent_0){
  this.parent_0 = parent_0;
  this.array = initDim(Lcom_google_gwt_user_client_ui_Widget_2_classLit, $intern_1, 79, 4, 0, 1);
}

defineClass(779, 1, {}, WidgetCollection);
_.iterator = function iterator_17(){
  return new WidgetCollection$WidgetIterator(this);
}
;
_.size_0 = 0;
var Lcom_google_gwt_user_client_ui_WidgetCollection_2_classLit = createForClass('com.google.gwt.user.client.ui', 'WidgetCollection', 779, Ljava_lang_Object_2_classLit);
function $next_1(this$static){
  if (this$static.index_0 >= this$static.this$01.size_0) {
    throw new NoSuchElementException;
  }
  this$static.currentWidget = this$static.this$01.array[this$static.index_0];
  ++this$static.index_0;
  return this$static.currentWidget;
}

function WidgetCollection$WidgetIterator(this$0){
  this.this$01 = this$0;
}

defineClass(337, 1, {}, WidgetCollection$WidgetIterator);
_.hasNext = function hasNext_5(){
  return this.index_0 < this.this$01.size_0;
}
;
_.next_0 = function next_6(){
  return $next_1(this);
}
;
_.remove_1 = function remove_15(){
  if (!this.currentWidget) {
    throw new IllegalStateException;
  }
  this.this$01.parent_0.remove_3(this.currentWidget);
  --this.index_0;
  this.currentWidget = null;
}
;
_.index_0 = 0;
var Lcom_google_gwt_user_client_ui_WidgetCollection$WidgetIterator_2_classLit = createForClass('com.google.gwt.user.client.ui', 'WidgetCollection/WidgetIterator', 337, Ljava_lang_Object_2_classLit);
function $setAntialias(this$static, antialias){
  this$static.antialias = antialias;
}

function $activeTexture(this$static, texture){
  this$static.activeTexture(texture);
}

function $attachShader(this$static, program, shader){
  this$static.attachShader(program, shader);
}

function $bindBuffer(this$static, target, buffer){
  this$static.bindBuffer(target, buffer);
}

function $bindFramebuffer(this$static, target, framebuffer){
  this$static.bindFramebuffer(target, framebuffer);
}

function $bindTexture(this$static, target, texture){
  this$static.bindTexture(target, texture);
}

function $bufferData(this$static, target, data_0, usage){
  this$static.bufferData(target, data_0, usage);
}

function $clearColor(this$static, red, green, blue, alpha_0){
  this$static.clearColor(red, green, blue, alpha_0);
}

function $compileShader(this$static, shader){
  this$static.compileShader(shader);
}

function $createShader(this$static, type_0){
  return this$static.createShader(type_0);
}

function $deleteBuffer(this$static, buffer){
  this$static.deleteBuffer(buffer);
}

function $deleteFramebuffer(this$static, framebuffer){
  this$static.deleteFramebuffer(framebuffer);
}

function $deleteProgram(this$static, program){
  this$static.deleteProgram(program);
}

function $deleteShader(this$static, shader){
  this$static.deleteShader(shader);
}

function $deleteTexture(this$static, texture){
  this$static.deleteTexture(texture);
}

function $disable(this$static, cap){
  this$static.disable(cap);
}

function $disableVertexAttribArray(this$static, index_0){
  this$static.disableVertexAttribArray(index_0);
}

function $drawElements(this$static, mode, count, type_0, offset){
  this$static.drawElements(mode, count, type_0, offset);
}

function $enable(this$static, cap){
  this$static.enable(cap);
}

function $enableVertexAttribArray(this$static, index_0){
  this$static.enableVertexAttribArray(index_0);
}

function $getAttribLocation(this$static, program, name_0){
  return this$static.getAttribLocation(program, name_0);
}

function $getProgramInfoLog(this$static, program){
  return this$static.getProgramInfoLog(program);
}

function $getProgramParameterb(this$static, program, pname){
  return this$static.getProgramParameter(program, pname);
}

function $getShaderInfoLog(this$static, shader){
  return this$static.getShaderInfoLog(shader);
}

function $getShaderParameterb(this$static, shader, pname){
  return this$static.getShaderParameter(shader, pname);
}

function $getUniformLocation(this$static, program, name_0){
  return this$static.getUniformLocation(program, name_0);
}

function $linkProgram(this$static, program){
  this$static.linkProgram(program);
}

function $scissor(this$static, x_0, y_0, width_0, height){
  this$static.scissor(x_0, y_0, width_0, height);
}

function $shaderSource(this$static, shader, source){
  this$static.shaderSource(shader, source);
}

function $texImage2D(this$static, target, level, internalformat, format, type_0, image){
  this$static.texImage2D(target, level, internalformat, format, type_0, image);
}

function $texParameteri(this$static, target, pname, param){
  this$static.texParameteri(target, pname, param);
}

function $uniform1f(this$static, location_0, x_0){
  this$static.uniform1f(location_0, x_0);
}

function $uniform1i(this$static, location_0, x_0){
  this$static.uniform1i(location_0, x_0);
}

function $uniform2f(this$static, location_0, x_0, y_0){
  this$static.uniform2f(location_0, x_0, y_0);
}

function $uniform4fv(this$static, location_0, v){
  this$static.uniform4fv(location_0, v);
}

function $useProgram(this$static, program){
  this$static.useProgram(program);
}

function $vertexAttribPointer(this$static, indx, size_0, type_0, normalized, stride, offset){
  this$static.vertexAttribPointer(indx, size_0, type_0, normalized, stride, offset);
}

function $viewport(this$static, x_0, y_0, width_0, height){
  this$static.viewport(x_0, y_0, width_0, height);
}

function getContext(canvas, attributes){
  var names = ['webgl', 'experimental-webgl', 'moz-webgl', 'webkit-webgl', 'webkit-3d'];
  for (var i = 0; i < names.length; i++) {
    try {
      var ctx = canvas.getContext(names[i], attributes);
      if (ctx != null) {
        if ($wnd.WebGLDebugUtils) {
          $wnd.console && $wnd.console.log && console.log('WebGL debugging enabled');
          return $wnd.WebGLDebugUtils.makeDebugContext(ctx);
        }
        return ctx;
      }
    }
     catch (e) {
    }
  }
  return null;
}

function $setOnReadyStateChange(this$static, handler){
  var _this = this$static;
  this$static.onreadystatechange = $entry(function(){
    handler.onReadyStateChange(_this);
  }
  );
}

function $setResponseType(this$static, responseType){
  this$static.responseType = responseType;
}

function $clinit_XMLHttpRequest$ResponseType(){
  $clinit_XMLHttpRequest$ResponseType = emptyMethod;
  Default = new XMLHttpRequest$ResponseType('Default', 0, '');
  ArrayBuffer_0 = new XMLHttpRequest$ResponseType('ArrayBuffer', 1, 'arraybuffer');
}

function XMLHttpRequest$ResponseType(enum$name, enum$ordinal, responseTypeString){
  Enum.call(this, enum$name, enum$ordinal);
  this.responseTypeString = responseTypeString;
}

function values_13(){
  $clinit_XMLHttpRequest$ResponseType();
  return initValues(getClassLiteralForArray(Lcom_google_gwt_xhr_client_XMLHttpRequest$ResponseType_2_classLit, 1), $intern_1, 200, 0, [Default, ArrayBuffer_0]);
}

defineClass(200, 7, {200:1, 3:1, 9:1, 7:1}, XMLHttpRequest$ResponseType);
var ArrayBuffer_0, Default;
var Lcom_google_gwt_xhr_client_XMLHttpRequest$ResponseType_2_classLit = createForEnum('com.google.gwt.xhr.client', 'XMLHttpRequest/ResponseType', 200, Ljava_lang_Enum_2_classLit, values_13);
function $removeHandler(this$static){
  $doRemove(this$static.this$01, this$static.val$type2, this$static.val$source3, this$static.val$handler4);
}

function SimpleEventBus$1(this$0, val$type, val$handler){
  this.this$01 = this$0;
  this.val$type2 = val$type;
  this.val$source3 = null;
  this.val$handler4 = val$handler;
}

defineClass(433, 1, {}, SimpleEventBus$1);
var Lcom_google_web_bindery_event_shared_SimpleEventBus$1_2_classLit = createForClass('com.google.web.bindery.event.shared', 'SimpleEventBus/1', 433, Ljava_lang_Object_2_classLit);
function SimpleEventBus$2(this$0, val$type, val$handler){
  this.this$01 = this$0;
  this.val$type2 = val$type;
  this.val$source3 = null;
  this.val$handler4 = val$handler;
}

defineClass(434, 1, {}, SimpleEventBus$2);
_.execute = function execute_8(){
  $doAddNow(this.this$01, this.val$type2, this.val$source3, this.val$handler4);
}
;
var Lcom_google_web_bindery_event_shared_SimpleEventBus$2_2_classLit = createForClass('com.google.web.bindery.event.shared', 'SimpleEventBus/2', 434, Ljava_lang_Object_2_classLit);
function SimpleEventBus$3(this$0, val$type, val$source, val$handler){
  this.this$01 = this$0;
  this.val$type2 = val$type;
  this.val$source3 = val$source;
  this.val$handler4 = val$handler;
}

defineClass(435, 1, {}, SimpleEventBus$3);
_.execute = function execute_9(){
  $doRemoveNow(this.this$01, this.val$type2, this.val$source3, this.val$handler4);
}
;
var Lcom_google_web_bindery_event_shared_SimpleEventBus$3_2_classLit = createForClass('com.google.web.bindery.event.shared', 'SimpleEventBus/3', 435, Ljava_lang_Object_2_classLit);
function AvailablePredicate(world){
  this.world = world;
}

defineClass(274, 1, {}, AvailablePredicate);
_.apply_0 = function apply_2(workerEntity){
  var taskId, taskEntity;
  return taskId = $get_14(this.world.task, workerEntity.id_0) , taskEntity = $entity(this.world, taskId) , $has(taskEntity, this.world.taskFlags) && $isSet(($clinit_TaskFlags() , REASSIGNABLE), $get_14(this.world.taskFlags, taskId));
}
;
var Ledu_bsu_cybersec_core_AvailablePredicate_2_classLit = createForClass('edu.bsu.cybersec.core', 'AvailablePredicate', 274, Ljava_lang_Object_2_classLit);
function Company(boss, recruits){
  var e, e$iterator;
  this.goal = new Goal;
  checkArgument_0(!recruits.map_0.containsKey(boss), 'The boss cannot also be a worker');
  this.boss = checkNotNull(boss);
  this.employees = copyOf(recruits);
  if (game_0) {
    $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'CEO'), boss.profile.firstName));
    for (e$iterator = this.employees.iterator_0(); e$iterator.hasNext();) {
      e = e$iterator.next_0();
      $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'worker'), e.profile.firstName));
    }
  }
}

defineClass(704, 1, {}, Company);
var Ledu_bsu_cybersec_core_Company_2_classLit = createForClass('edu.bsu.cybersec.core', 'Company', 704, Ljava_lang_Object_2_classLit);
function $withEmployees(this$static){
  var boss;
  checkArgument_0(true, 'Must recruit non-negative numbers');
  boss = $next_3($iterator_0(new AbstractMap$1($recruit(this$static.pool, 1).map_0)));
  return new Company(boss, $recruit(this$static.pool, 3));
}

function Company$Builder(pool){
  this.pool = checkNotNull(pool);
}

defineClass(705, 1, {}, Company$Builder);
var Ledu_bsu_cybersec_core_Company$Builder_2_classLit = createForClass('edu.bsu.cybersec.core', 'Company/Builder', 705, Ljava_lang_Object_2_classLit);
function $onEmit(this$static, event_0){
  var keyEvent;
  if (instanceOf(event_0, 194)) {
    keyEvent = event_0;
    keyEvent.down && $containsKey(this$static.actionMap, keyEvent.key_0) && $get_1(this$static.actionMap, keyEvent.key_0).run();
  }
}

function $runEvent(this$static, event_0){
  var entity;
  entity = $add_21($create_0(this$static.gameWorld), this$static.gameWorld.event_0, this$static.gameWorld.timeTrigger, initValues(getClassLiteralForArray(Ltripleplay_entity_Component_2_classLit, 1), $intern_1, 37, 0, []));
  $set_9(this$static.gameWorld.event_0, entity.id_0, event_0);
  $set_10(this$static.gameWorld.timeTrigger, entity.id_0, this$static.gameWorld.gameTime._value.now_0);
}

function DebugMode(gameWorld){
  this.builder = new ImmutableMap$Builder;
  $put($put($put($put($put($put($put($put($put($put($put(this.builder, ($clinit_Key() , E_0), new DebugMode$1(this)), S, new DebugMode$2(this)), C, new DebugMode$3(this)), I, new DebugMode$4(this)), M, new DebugMode$5(this)), END, new DebugMode$6(this)), K2, new DebugMode$7(this)), K1, new DebugMode$8(this)), EQUALS, new DebugMode$9(this)), MINUS, new DebugMode$10(this)), U, new DebugMode$11);
  this.actionMap = fromEntryList(this.builder.entries);
  this.gameWorld = checkNotNull(gameWorld);
}

defineClass(742, 1, {}, DebugMode);
_.onEmit = function onEmit(event_0){
  $onEmit(this, event_0);
}
;
var Ledu_bsu_cybersec_core_DebugMode_2_classLit = createForClass('edu.bsu.cybersec.core', 'DebugMode', 742, Ljava_lang_Object_2_classLit);
function DebugMode$1(this$0){
  this.this$01 = this$0;
}

defineClass(743, 1, {}, DebugMode$1);
_.run = function run_1(){
  $generate(this.this$01.gameWorld.exploitSystem.factory);
}
;
var Ledu_bsu_cybersec_core_DebugMode$1_2_classLit = createForClass('edu.bsu.cybersec.core', 'DebugMode/1', 743, Ljava_lang_Object_2_classLit);
function DebugMode$10(this$0){
  this.this$01 = this$0;
}

defineClass(752, 1, {}, DebugMode$10);
_.run = function run_2(){
  this.this$01.gameWorld.users.updateAndNotify(new Float(this.this$01.gameWorld.users._value.value_0 - 2000), false);
}
;
var Ledu_bsu_cybersec_core_DebugMode$10_2_classLit = createForClass('edu.bsu.cybersec.core', 'DebugMode/10', 752, Ljava_lang_Object_2_classLit);
function DebugMode$11(){
}

defineClass(753, 1, {}, DebugMode$11);
_.run = function run_3(){
  $push_0(game_0.screenStack, new PostSurveyScreen(game_0), ($clinit_ScreenStack() , NOOP_1));
}
;
var Ledu_bsu_cybersec_core_DebugMode$11_2_classLit = createForClass('edu.bsu.cybersec.core', 'DebugMode/11', 753, Ljava_lang_Object_2_classLit);
function DebugMode$2(this$0){
  this.this$01 = this$0;
}

defineClass(744, 1, {}, DebugMode$2);
_.run = function run_4(){
  $runEvent(this.this$01, new ScriptKiddieAttackEvent(this.this$01.gameWorld));
}
;
var Ledu_bsu_cybersec_core_DebugMode$2_2_classLit = createForClass('edu.bsu.cybersec.core', 'DebugMode/2', 744, Ljava_lang_Object_2_classLit);
function DebugMode$3(this$0){
  this.this$01 = this$0;
}

defineClass(745, 1, {}, DebugMode$3);
_.run = function run_5(){
  $runEvent(this.this$01, new SecurityConferenceEvent(this.this$01.gameWorld));
}
;
var Ledu_bsu_cybersec_core_DebugMode$3_2_classLit = createForClass('edu.bsu.cybersec.core', 'DebugMode/3', 745, Ljava_lang_Object_2_classLit);
function DebugMode$4(this$0){
  this.this$01 = this$0;
}

defineClass(746, 1, {}, DebugMode$4);
_.run = function run_6(){
  $runEvent(this.this$01, new InputSanitizationEvent(this.this$01.gameWorld));
}
;
var Ledu_bsu_cybersec_core_DebugMode$4_2_classLit = createForClass('edu.bsu.cybersec.core', 'DebugMode/4', 746, Ljava_lang_Object_2_classLit);
function DebugMode$5(this$0){
  this.this$01 = this$0;
}

defineClass(747, 1, {}, DebugMode$5);
_.run = function run_7(){
  $runEvent(this.this$01, new ChildAdviceEvent(this.this$01.gameWorld));
}
;
var Ledu_bsu_cybersec_core_DebugMode$5_2_classLit = createForClass('edu.bsu.cybersec.core', 'DebugMode/5', 747, Ljava_lang_Object_2_classLit);
function DebugMode$6(this$0){
  this.this$01 = this$0;
}

defineClass(748, 1, {}, DebugMode$6);
_.run = function run_8(){
  $notifyEmit(this.this$01.gameWorld.onGameEnd, null);
}
;
var Ledu_bsu_cybersec_core_DebugMode$6_2_classLit = createForClass('edu.bsu.cybersec.core', 'DebugMode/6', 748, Ljava_lang_Object_2_classLit);
function DebugMode$7(this$0){
  this.this$01 = this$0;
}

defineClass(749, 1, {}, DebugMode$7);
_.run = function run_9(){
  var currentScale;
  currentScale = this.this$01.gameWorld.gameTimeSystem.scale_0._value.value_0;
  this.this$01.gameWorld.gameTimeSystem.scale_0.updateAndNotify(new Float(currentScale * 2), false);
}
;
var Ledu_bsu_cybersec_core_DebugMode$7_2_classLit = createForClass('edu.bsu.cybersec.core', 'DebugMode/7', 749, Ljava_lang_Object_2_classLit);
function DebugMode$8(this$0){
  this.this$01 = this$0;
}

defineClass(750, 1, {}, DebugMode$8);
_.run = function run_10(){
  var currentScale;
  currentScale = this.this$01.gameWorld.gameTimeSystem.scale_0._value.value_0;
  this.this$01.gameWorld.gameTimeSystem.scale_0.updateAndNotify(new Float(currentScale / 2), false);
}
;
var Ledu_bsu_cybersec_core_DebugMode$8_2_classLit = createForClass('edu.bsu.cybersec.core', 'DebugMode/8', 750, Ljava_lang_Object_2_classLit);
function DebugMode$9(this$0){
  this.this$01 = this$0;
}

defineClass(751, 1, {}, DebugMode$9);
_.run = function run_11(){
  this.this$01.gameWorld.users.updateAndNotify(new Float(this.this$01.gameWorld.users._value.value_0 + 2000), false);
}
;
var Ledu_bsu_cybersec_core_DebugMode$9_2_classLit = createForClass('edu.bsu.cybersec.core', 'DebugMode/9', 751, Ljava_lang_Object_2_classLit);
function $makeTruncatedString(this$static, f){
  var decimalPart, decimalPartShiftedLeft, integerPart, truncatedDecimalPart;
  integerPart = round_int(f);
  if (this$static.decimalPlaces == 0) {
    return '' + integerPart;
  }
   else {
    decimalPart = f - integerPart;
    decimalPartShiftedLeft = decimalPart * pow_0(10, this$static.decimalPlaces);
    truncatedDecimalPart = round_int(decimalPartShiftedLeft);
    return integerPart + '.' + truncatedDecimalPart;
  }
}

function DecimalTruncator(decimalPlaces){
  checkArgument(decimalPlaces >= 0);
  this.decimalPlaces = decimalPlaces;
}

defineClass(158, 1, {}, DecimalTruncator);
_.decimalPlaces = 0;
var Ledu_bsu_cybersec_core_DecimalTruncator_2_classLit = createForClass('edu.bsu.cybersec.core', 'DecimalTruncator', 158, Ljava_lang_Object_2_classLit);
function Employee(profile, image){
  this.profile = checkNotNull(profile);
  this.image = checkNotNull(image);
}

defineClass(251, 1, {251:1}, Employee);
_.equals$ = function equals_13(obj){
  var other;
  if (instanceOf(obj, 251)) {
    other = obj;
    return equal(this.profile, other.profile) && equal(this.image, other.image);
  }
   else {
    return false;
  }
}
;
_.hashCode$ = function hashCode_16(){
  return hashCode_28(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [this.profile, this.image]));
}
;
_.toString$ = function toString_22(){
  return $toString_2($addHolder($addHolder(new MoreObjects$ToStringHelper(($ensureNamesAreInitialized(Ledu_bsu_cybersec_core_Employee_2_classLit) , Ledu_bsu_cybersec_core_Employee_2_classLit.simpleName)), 'profile', this.profile), 'image', this.image));
}
;
var Ledu_bsu_cybersec_core_Employee_2_classLit = createForClass('edu.bsu.cybersec.core', 'Employee', 251, Ljava_lang_Object_2_classLit);
function $clinit_EmployeePool(){
  $clinit_EmployeePool = emptyMethod;
  RANDOM = new Random;
}

function $recruit(this$static, numberOfEmployees){
  var i, profile, result;
  checkArgument(numberOfEmployees >= 0);
  result = new HashSet;
  for (i = 0; i < numberOfEmployees; i++) {
    profile = $remove_8(this$static.employeePool, $nextInt_0(RANDOM, this$static.employeePool.size_0));
    $add_11(result, new Employee(profile, $get_1(this$static.map_0, profile)));
  }
  return result;
}

function EmployeePool(cache){
  var builder;
  $clinit_EmployeePool();
  checkNotNull(cache);
  this.map_0 = (builder = new ImmutableMap$Builder , $put(builder, $bio($from(new EmployeeProfile$Builder$CredentialBuilder($lastName(new EmployeeProfile$Builder('Esteban'), 'Cortez'), 'Bachelors in Computer Science'), 'Ball State University'), 'Esteban worked in a factory until he was 33, then he went to college and decided to get involved in software development.'), $getImage(cache, ($clinit_GameAssets$ImageKey() , ESTEBAN))) , $put(builder, $bio($from(new EmployeeProfile$Builder$CredentialBuilder($from(new EmployeeProfile$Builder$CredentialBuilder($lastName(new EmployeeProfile$Builder('Nancy'), 'Stevens'), 'Bachelors in English'), 'Georgetown University'), 'Masters in Computer Security'), 'Purdue University'), 'Nancy has a popular podcast about being a woman in technology.'), $getImage(cache, NANCY)) , $put(builder, $bio($from(new EmployeeProfile$Builder$CredentialBuilder($lastName(new EmployeeProfile$Builder('Jerry'), 'Chen'), 'Bachelors in Computer Science'), 'University of Hong Kong'), 'Jerry interned at a local company in high school and has been working as a software developer ever since.'), $getImage(cache, JERRY)) , $put(builder, $bio($from(new EmployeeProfile$Builder$CredentialBuilder($from(new EmployeeProfile$Builder$CredentialBuilder($lastName(new EmployeeProfile$Builder('Vani'), 'Mishra'), 'Bachelors in Computer Engineering'), 'Indian Institute of Science'), 'Masters in Software Engineering'), 'Ball State University'), 'Vani was born in India and came to the United States for graduate school. She loves music, dancing, and PHP.'), $getImage(cache, VANI)) , $put(builder, $bio($from(new EmployeeProfile$Builder$CredentialBuilder($lastName(new EmployeeProfile$Builder('Abdullah'), 'Nasr'), 'Bachelors in Electrical Engineering'), 'Iowa State University'), 'Abdullah used to work for a larger social media company, but he prefers the excitement of a small startup.'), $getImage(cache, ABDULLAH)) , $put(builder, $bio($from(new EmployeeProfile$Builder$CredentialBuilder($lastName(new EmployeeProfile$Builder('Janine'), 'Palmer'), 'Bachelors in Computer Science'), 'Virginia Tech'), 'Janine is especially talented at meeting with customers and understanding what they want from a product.'), $getImage(cache, JANINE)) , $put(builder, $bio($from(new EmployeeProfile$Builder$CredentialBuilder($lastName(new EmployeeProfile$Builder('Melissa'), 'Bernard'), 'Bachelors in Mathematics'), 'Stanford University'), 'Melissa has always loved games and puzzles, but she especially loves bicycling and walking her German Shepherd.'), $getImage(cache, MELISSA)) , $put(builder, $bio($from(new EmployeeProfile$Builder$CredentialBuilder($from(new EmployeeProfile$Builder$CredentialBuilder($lastName(new EmployeeProfile$Builder('Ivar'), 'Johansen'), 'Bachelors in Chemistry'), 'Stockholm University'), 'Masters in Electrical Engineering'), 'Uppsala University'), 'Ivar teaches kids how to build simple robots as a volunteer in a local school.'), $getImage(cache, IVAR)) , $put(builder, $bio($from(new EmployeeProfile$Builder$CredentialBuilder($lastName(new EmployeeProfile$Builder('Bruce'), 'Powers'), 'Bachelors in Computer Science'), 'Ball State University'), 'Bruce was recently married and enjoys going to the gym and watching documentaries about history.'), $getImage(cache, BRUCE)) , fromEntryList(builder.entries));
  this.employeePool = newLinkedList($keySet(this.map_0));
}

defineClass(711, 1, {}, EmployeePool);
var RANDOM;
var Ledu_bsu_cybersec_core_EmployeePool_2_classLit = createForClass('edu.bsu.cybersec.core', 'EmployeePool', 711, Ljava_lang_Object_2_classLit);
function EmployeeProfile(importer){
  this.firstName = importer.firstName;
  this.lastName = importer.lastName;
  this.credentials = copyOf(importer.credentials);
  this.bio = importer.bio;
}

defineClass(255, 1, {255:1}, EmployeeProfile);
_.equals$ = function equals_14(obj){
  var other;
  if (instanceOf(obj, 255)) {
    other = obj;
    return equals_32(this.firstName, other.firstName) && equals_32(this.lastName, other.lastName) && equals_32(this.bio, other.bio) && equals_32(this.credentials, other.credentials);
  }
   else {
    return false;
  }
}
;
_.hashCode$ = function hashCode_17(){
  return hashCode_28(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [this.firstName, this.lastName, this.bio, this.credentials]));
}
;
_.toString$ = function toString_23(){
  return $toString_2($addHolder($addHolder($addHolder($addHolder(new MoreObjects$ToStringHelper(($ensureNamesAreInitialized(Ledu_bsu_cybersec_core_EmployeeProfile_2_classLit) , Ledu_bsu_cybersec_core_EmployeeProfile_2_classLit.simpleName)), 'firstName', this.firstName), 'lastName', this.lastName), 'credentials', this.credentials), 'bio', this.bio));
}
;
var Ledu_bsu_cybersec_core_EmployeeProfile_2_classLit = createForClass('edu.bsu.cybersec.core', 'EmployeeProfile', 255, Ljava_lang_Object_2_classLit);
function $bio(this$static, bio){
  this$static.bio = bio;
  checkNotNull(this$static.firstName);
  checkNotNull(this$static.lastName);
  checkNotNull(this$static.bio);
  return new EmployeeProfile(this$static);
}

function $lastName(this$static, lastName){
  this$static.lastName = lastName;
  return this$static;
}

function EmployeeProfile$Builder(firstName){
  this.credentials = new ArrayList;
  this.firstName = firstName;
}

defineClass(98, 1, {}, EmployeeProfile$Builder);
var Ledu_bsu_cybersec_core_EmployeeProfile$Builder_2_classLit = createForClass('edu.bsu.cybersec.core', 'EmployeeProfile/Builder', 98, Ljava_lang_Object_2_classLit);
function $from(this$static, institution){
  var credential;
  credential = $from_0(new EmployeeProfile$Credential$Builder(this$static.name_0), institution);
  $add_0(this$static.this$11.credentials, credential);
  return this$static.this$11;
}

function EmployeeProfile$Builder$CredentialBuilder(this$1, name_0){
  this.this$11 = this$1;
  this.name_0 = checkNotNull(name_0);
}

defineClass(74, 1, {}, EmployeeProfile$Builder$CredentialBuilder);
var Ledu_bsu_cybersec_core_EmployeeProfile$Builder$CredentialBuilder_2_classLit = createForClass('edu.bsu.cybersec.core', 'EmployeeProfile/Builder/CredentialBuilder', 74, Ljava_lang_Object_2_classLit);
function EmployeeProfile$Credential(importer){
  this.provider = importer.provider;
  this.name_0 = importer.name_0;
}

defineClass(762, 1, {}, EmployeeProfile$Credential);
var Ledu_bsu_cybersec_core_EmployeeProfile$Credential_2_classLit = createForClass('edu.bsu.cybersec.core', 'EmployeeProfile/Credential', 762, Ljava_lang_Object_2_classLit);
function $from_0(this$static, provider){
  this$static.provider = checkNotNull(provider);
  return new EmployeeProfile$Credential(this$static);
}

function EmployeeProfile$Credential$Builder(name_0){
  this.name_0 = checkNotNull(name_0);
}

defineClass(763, 1, {}, EmployeeProfile$Credential$Builder);
var Ledu_bsu_cybersec_core_EmployeeProfile$Credential$Builder_2_classLit = createForClass('edu.bsu.cybersec.core', 'EmployeeProfile/Credential/Builder', 763, Ljava_lang_Object_2_classLit);
function $generate(this$static){
  var e;
  e = $add_21($create_0(this$static.world), this$static.world.exploitNumber, this$static.world.name_0, initValues(getClassLiteralForArray(Ltripleplay_entity_Component_2_classLit, 1), $intern_1, 37, 0, [this$static.world.userAttrition, this$static.world.maintenanceProgress, this$static.world.lostUsers]));
  $set_10(this$static.world.exploitNumber, e.id_0, this$static.nextNumber++);
  $set_9(this$static.world.name_0, e.id_0, $get_0(this$static.exploitNameList, $nextInt(this$static.random_0)));
  $set_8(this$static.world.userAttrition, e.id_0, 0.002199999988079071);
  $set_8(this$static.world.maintenanceProgress, e.id_0, 0);
  return e;
}

function ExploitFactory(world){
  this.exploitNameList = of(initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['Buffer Overflow']));
  this.random_0 = new RandomInRange(0, this.exploitNameList.delegate.size_1() - 1);
  this.world = checkNotNull(world);
}

defineClass(868, 1, {}, ExploitFactory);
_.nextNumber = 1;
var Ledu_bsu_cybersec_core_ExploitFactory_2_classLit = createForClass('edu.bsu.cybersec.core', 'ExploitFactory', 868, Ljava_lang_Object_2_classLit);
function $clinit_FeatureFactory(){
  $clinit_FeatureFactory = emptyMethod;
  DEFAULT_FEATURE_NAMES = initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['Selfie of the Week', 'Tumblr Pun', 'Twitter Nest', 'Hollywood Ville', 'Fun Ville', 'Puppy Ville', 'Cat Ville', 'Village Ville', 'Dislike Button', 'User reviews']);
  vulnerabilityRandomizer = new RandomInRange(2, 7);
}

function $makeCompletedFeature(this$static){
  var entity;
  entity = $makeFeature(this$static, 0);
  $set_10(this$static.world.usersPerHourState, entity.id_0, ($clinit_UsersPerHourState() , ACTIVE).value_0);
  return entity;
}

function $makeFeature(this$static, featureNumber){
  var entity;
  entity = $add_21($create_0(this$static.world), this$static.world.featureNumber, this$static.world.name_0, initValues(getClassLiteralForArray(Ltripleplay_entity_Component_2_classLit, 1), $intern_1, 37, 0, [this$static.world.usersPerHour, this$static.world.usersPerHourState, this$static.world.vulnerability]));
  $set_10(this$static.world.featureNumber, entity.id_0, featureNumber);
  $set_9(this$static.world.name_0, entity.id_0, (this$static.nextNameQueue.array.length == 0 && $withNames(this$static, this$static.namesToDrawFrom) , this$static.nextNameQueue.remove_0(0)));
  $set_8(this$static.world.vulnerability, entity.id_0, $nextInt(vulnerabilityRandomizer) * $intern_34);
  $set_8(this$static.world.usersPerHour, entity.id_0, floor_0(Math.random() * 150) + 50);
  return entity;
}

function $makeFeatureInDevelopment(this$static, featureNumber){
  var entity;
  entity = $makeFeature(this$static, featureNumber);
  $add_21(entity, this$static.world.developmentProgress, this$static.world.goal, initValues(getClassLiteralForArray(Ltripleplay_entity_Component_2_classLit, 1), $intern_1, 37, 0, []));
  $set_10(this$static.world.usersPerHourState, entity.id_0, ($clinit_UsersPerHourState() , INACTIVE).value_0);
  return entity;
}

function $withNames(this$static, names){
  this$static.namesToDrawFrom = ($clinit_ImmutableList() , checkNotNull(names) , names?copyOf(names):copyFromCollection(newArrayList_0(null.iterator())));
  this$static.nextNameQueue = newArrayList(this$static.namesToDrawFrom);
  shuffle(this$static.nextNameQueue);
  return this$static;
}

function FeatureFactory(world){
  $clinit_FeatureFactory();
  this.world = checkNotNull(world);
  $withNames(this, newArrayList_1(DEFAULT_FEATURE_NAMES));
}

defineClass(343, 1, {}, FeatureFactory);
var DEFAULT_FEATURE_NAMES, vulnerabilityRandomizer;
var Ledu_bsu_cybersec_core_FeatureFactory_2_classLit = createForClass('edu.bsu.cybersec.core', 'FeatureFactory', 343, Ljava_lang_Object_2_classLit);
function $percentOfHeight(this$static, percent){
  return this$static.bounds.height_0 * percent;
}

function GameBounds(box){
  this.bounds = new Rectangle_1(box);
}

defineClass(444, 1, {}, GameBounds);
_.toString$ = function toString_24(){
  return $toString_2($addHolder(new MoreObjects$ToStringHelper(($ensureNamesAreInitialized(Ledu_bsu_cybersec_core_GameBounds_2_classLit) , Ledu_bsu_cybersec_core_GameBounds_2_classLit.simpleName)), 'bounds', this.bounds));
}
;
var Ledu_bsu_cybersec_core_GameBounds_2_classLit = createForClass('edu.bsu.cybersec.core', 'GameBounds', 444, Ljava_lang_Object_2_classLit);
defineClass(963, 1, {});
var Ledu_bsu_cybersec_core_GameConfig$Default_2_classLit = createForClass('edu.bsu.cybersec.core', 'GameConfig/Default', 963, Ljava_lang_Object_2_classLit);
function $contains_1(this$static, i){
  return this$static.previous <= i && i <= this$static.now_0;
}

function $delta(this$static){
  return this$static.now_0 - this$static.previous;
}

function GameTime(now_0, previous){
  checkArgument_0(previous <= now_0, 'Previous may not be after now.');
  this.now_0 = now_0;
  this.previous = previous;
}

function GameTime_0(previous, elapsed){
  this.previous = previous.now_0;
  this.now_0 = previous.now_0 + elapsed;
}

defineClass(260, 1, {}, GameTime, GameTime_0);
_.now_0 = 0;
_.previous = 0;
var Ledu_bsu_cybersec_core_GameTime_2_classLit = createForClass('edu.bsu.cybersec.core', 'GameTime', 260, Ljava_lang_Object_2_classLit);
function $connect(this$static, update, paint){
  return $clinit_Closeable$Util() , new Closeable$Util$2(initValues(getClassLiteralForArray(Lreact_Closeable_2_classLit, 1), $intern_1, 14, 0, [$addConnection(update, new World$1(this$static)), $addConnection(paint, new World$2(this$static))]));
}

function $create(this$static, id_0){
  var entities;
  if (this$static._entities.length <= id_0) {
    entities = initDim(Ltripleplay_entity_Entity_2_classLit, $intern_1, 199, this$static._entities.length * 2, 0, 1);
    arraycopy(this$static._entities, 0, entities, 0, this$static._entities.length);
    this$static._entities = entities;
  }
  return this$static._entities[id_0] = new Entity_0(this$static, id_0);
}

function $create_0(this$static){
  var e;
  if (this$static._ids._size == 0) {
    e = $create(this$static, this$static._nextEntityId++);
  }
   else {
    e = this$static._entities[$removeLast(this$static._ids)];
    e._flags = 0;
  }
  $setEnabled_1(e, true);
  return e;
}

function $entity(this$static, id_0){
  return this$static._entities[id_0];
}

function $paint(this$static){
  var ii, ll;
  for (ii = 0 , ll = this$static._systems.array.length; ii < ll; ii++)
    $paint_0($get(this$static._systems, ii));
}

function $register(this$static, system){
  var idx, ii;
  idx = 0;
  for (ii = this$static._systems.array.length - 1; ii >= 0; ii--) {
    if ($get(this$static._systems, ii).priority >= system.priority) {
      idx = ii + 1;
      break;
    }
  }
  $add(this$static._systems, idx, system);
  $add_29(this$static._toInit, system);
  return this$static._systems.array.length - 1;
}

function $update(this$static, clock){
  var cc, ent, ent$array, ent$index, ent$max, entity, ii, ii0, ii1, ii2, ii3, ll, ll0, ll1, ss, sys;
  for (ii0 = this$static._toInit._size - 1; ii0 >= 0; ii0--) {
    sys = $removeLast_0(this$static._toInit);
    for (ent$array = this$static._entities , ent$index = 0 , ent$max = ent$array.length; ent$index < ent$max; ++ent$index) {
      ent = ent$array[ent$index];
      if (!ent || (ent._flags & 3) != 1)
        continue;
      (ent._flags & 4) != 0 && sys.isInterested(ent) && ($add_22(sys._active, ent.id_0) , $set_12(ent.systems, sys._id));
    }
  }
  for (ii1 = this$static.toAdd._size - 1; ii1 >= 0; ii1--) {
    entity = $removeLast_0(this$static.toAdd);
    entity._flags |= 4;
    for (ss = 0 , ll0 = this$static._systems.array.length; ss < ll0; ss++) {
      $entityAdded($get(this$static._systems, ss), entity);
    }
    $emit(this$static.entityAdded, entity);
  }
  for (ii2 = this$static.toChange._size - 1; ii2 >= 0; ii2--) {
    entity = $removeLast_0(this$static.toChange);
    entity._flags &= -9;
    for (ss = 0 , ll0 = this$static._systems.array.length; ss < ll0; ss++) {
      $entityChanged($get(this$static._systems, ss), entity);
    }
    $emit(this$static.entityChanged, entity);
  }
  for (ii3 = this$static.toRemove._size - 1; ii3 >= 0; ii3--) {
    entity = $removeLast_0(this$static.toRemove);
    for (ss = 0 , ll0 = this$static._systems.array.length; ss < ll0; ss++) {
      $entityRemoved($get(this$static._systems, ss), entity);
    }
    $emit(this$static.entityRemoved, entity);
    if ((entity._flags & 2) != 0) {
      for (cc = 0 , ll1 = this$static._comps.array.length; cc < ll1; cc++) {
        $isSet_2(entity.comps, cc) && $remove_23($get(this$static._comps, cc), entity);
      }
      $add_22(this$static._ids, entity.id_0);
    }
  }
  for (ii = 0 , ll = this$static._systems.array.length; ii < ll; ii++)
    $update_1($get(this$static._systems, ii), clock);
}

defineClass(737, 1, {});
_.iterator = function iterator_18(){
  return new World$3(this);
}
;
_._nextEntityId = 1;
var Ltripleplay_entity_World_2_classLit = createForClass('tripleplay.entity', 'World', 737, Ljava_lang_Object_2_classLit);
function $$init_0(this$static){
  this$static.components = ($clinit_Maps() , new HashMap);
  this$static.onNarrativeEvent = ($clinit_AbstractSignal() , new Signal);
  this$static.onGameEnd = new UnitSignal;
  this$static.gameTime = ($clinit_AbstractValue() , new Value(new GameTime(0, 0)));
  this$static.exposure = new Value(new Float(0));
  this$static.users = new Value(new Float(0));
  this$static.workers = (checkNonnegative(3, 'initialArraySize') , new ArrayList_0(3));
  this$static.gameEnd = new Value(valueOf(-1));
  this$static.company = new Value(null);
  this$static.employeeNumber = $register_0(this$static, 'employeeNumber', new Component$IScalar(this$static));
  this$static.developmentSkill = $register_0(this$static, 'developmentSkill', new Component$FScalar(this$static));
  this$static.maintenanceSkill = $register_0(this$static, 'maintenanceSkill', new Component$FScalar(this$static));
  this$static.name_0 = $register_0(this$static, 'name', new Component$Generic(this$static));
  this$static.developmentProgress = $register_0(this$static, 'developmentProgress', new Component$FScalar(this$static));
  this$static.goal = $register_0(this$static, 'goal', new Component$IScalar(this$static));
  this$static.usersPerHour = $register_0(this$static, 'usersPerHour', new Component$FScalar(this$static));
  this$static.onUpdate = $register_0(this$static, 'onUpdate', new Component$Generic(this$static));
  this$static.timeTrigger = $register_0(this$static, 'timeTrigger', new Component$IScalar(this$static));
  this$static.event_0 = $register_0(this$static, 'event', new Component$Generic(this$static));
  this$static.vulnerability = $register_0(this$static, 'vulnerability', new Component$FScalar(this$static));
  this$static.usersPerHourState = $register_0(this$static, 'usersPerHourState', new Component$IScalar(this$static));
  this$static.featureNumber = $register_0(this$static, 'featureNumber', new Component$IScalar(this$static));
  this$static.exploitNumber = $register_0(this$static, 'exploitNumber', new Component$IScalar(this$static));
  this$static.userAttrition = $register_0(this$static, 'userAttrition', new Component$FScalar(this$static));
  this$static.lostUsers = $register_0(this$static, 'lostUsers', new Component$FScalar(this$static));
  this$static.profile = $register_0(this$static, 'profile', new Component$Generic(this$static));
  this$static.maintenanceProgress = $register_0(this$static, 'maintenanceProgress', new Component$FScalar(this$static));
  this$static.sprite = $register_0(this$static, 'sprite', new Component$Generic(this$static));
  this$static.position_0 = $register_0(this$static, 'position', new Component$XY(this$static));
  this$static.secondsRemaining = $register_0(this$static, 'secondsRemaining', new Component$IScalar(this$static));
  this$static.onComplete = $register_0(this$static, 'onComplete', new Component$Generic(this$static));
  this$static.owner = $register_0(this$static, 'owner', new Component$IScalar(this$static));
  this$static.task = $register_0(this$static, 'task', new Component$IScalar(this$static));
  this$static.taskFlags = $register_0(this$static, 'taskFlags', new Component$IScalar(this$static));
}

function $advanceGameTime(this$static, ms){
  var newTime;
  newTime = new GameTime_0(this$static.gameTime._value, ms);
  this$static.gameTime.updateAndNotify(newTime, false);
}

function $register_0(this$static, name_0, component){
  this$static.components.put(name_0, component);
  return component;
}

defineClass(738, 737, {});
_.developmentTaskId = 0;
_.maintenanceTaskId = 0;
_.notAtWorkTaskId = 0;
var Ledu_bsu_cybersec_core_GameWorld_2_classLit = createForClass('edu.bsu.cybersec.core', 'GameWorld', 738, Ltripleplay_entity_World_2_classLit);
function GameWorld$Systematized(){
  var id_0, id_1, id_2;
  this.entityAdded = ($clinit_AbstractSignal() , new Signal);
  this.entityChanged = new Signal;
  this.entityRemoved = new Signal;
  this.toAdd = new Bag;
  this.toChange = new Bag;
  this.toRemove = new Bag;
  this._toInit = new Bag;
  this._systems = new ArrayList;
  this._comps = new ArrayList;
  this._ids = new IntBag;
  this._entities = initDim(Ltripleplay_entity_Entity_2_classLit, $intern_1, 199, 64, 0, 1);
  $$init_0(this);
  this.developmentTaskId = (id_0 = $add_21($create_0(this), this.name_0, this.taskFlags, initValues(getClassLiteralForArray(Ltripleplay_entity_Component_2_classLit, 1), $intern_1, 37, 0, [])).id_0 , $set_9(this.name_0, id_0, 'Development') , $set_10(this.taskFlags, id_0, flags_0(initValues(getClassLiteralForArray(Ledu_bsu_cybersec_core_TaskFlags_2_classLit, 1), $intern_1, 70, 0, [($clinit_TaskFlags() , REASSIGNABLE), BOUND_TO_WORKDAY, DEVELOPMENT]))) , id_0);
  this.maintenanceTaskId = (id_1 = $add_21($create_0(this), this.name_0, this.taskFlags, initValues(getClassLiteralForArray(Ltripleplay_entity_Component_2_classLit, 1), $intern_1, 37, 0, [])).id_0 , $set_9(this.name_0, id_1, 'Maintenance') , $set_10(this.taskFlags, id_1, flags_0(initValues(getClassLiteralForArray(Ledu_bsu_cybersec_core_TaskFlags_2_classLit, 1), $intern_1, 70, 0, [REASSIGNABLE, BOUND_TO_WORKDAY, MAINTENANCE]))) , id_1);
  this.notAtWorkTaskId = (id_2 = $add_21($create_0(this), this.name_0, this.taskFlags, initValues(getClassLiteralForArray(Ltripleplay_entity_Component_2_classLit, 1), $intern_1, 37, 0, [])).id_0 , $set_9(this.name_0, id_2, 'Not at work') , $set_10(this.taskFlags, id_2, flags_0(initValues(getClassLiteralForArray(Ledu_bsu_cybersec_core_TaskFlags_2_classLit, 1), $intern_1, 70, 0, [NOT_AT_WORK]))) , id_2);
  new UpdatingSystem(this);
  new ExposureReductionSystem(this);
  new EventTriggerSystem(this);
  new LearningSystem(this);
  new ExploitMaintenanceSystem(this);
  new UserAttritionSystem(this);
  new LayerPositionSystem(this);
  new TaskProgressSystem(this);
  this.gameTimeSystem = new GameTimeSystem(this);
  this.userGenerationSystem = new UserGenerationSystem(this);
  this.featureGenerationSystem = new FeatureGenerationSystem(this);
  this.featureDevelopmentSystem = new FeatureDevelopmentSystem(this);
  this.exploitSystem = new ExploitSystem(this);
  this.workHoursSystem = new WorkHoursSystem(this, this.gameTimeSystem);
}

defineClass(739, 738, {}, GameWorld$Systematized);
var Ledu_bsu_cybersec_core_GameWorld$Systematized_2_classLit = createForClass('edu.bsu.cybersec.core', 'GameWorld/Systematized', 739, Ledu_bsu_cybersec_core_GameWorld_2_classLit);
function $isAcceptableExposure(this$static, exposure){
  return exposure <= this$static.maximumExposure;
}

function $isEnoughUsers(this$static, numberOfUsers){
  return numberOfUsers >= this$static.minimumUsers;
}

function $isMet(this$static, numberOfUsers, exposureLevel){
  return numberOfUsers >= this$static.minimumUsers && exposureLevel <= this$static.maximumExposure;
}

function Goal(){
  this.minimumUsers = 20000;
  this.maximumExposure = $intern_35;
}

defineClass(777, 1, {}, Goal);
_.maximumExposure = 0;
_.minimumUsers = 0;
var Ledu_bsu_cybersec_core_Goal_2_classLit = createForClass('edu.bsu.cybersec.core', 'Goal', 777, Ljava_lang_Object_2_classLit);
function $scale_0(this$static, key, desiredWidth){
  var image, scale;
  image = $getImage(this$static.game.assets, key);
  scale = desiredWidth / $invScaled(image.scale_0, image.pixelWidth);
  return new Icons$2(new Icons$1(image), scale);
}

function IconScaler(game){
  this.game = checkNotNull(game);
}

defineClass(766, 1, {}, IconScaler);
var Ledu_bsu_cybersec_core_IconScaler_2_classLit = createForClass('edu.bsu.cybersec.core', 'IconScaler', 766, Ljava_lang_Object_2_classLit);
function $postAfterDelay(this$static, event_0, afterSeconds){
  var e;
  checkNotNull(event_0);
  e = $add_21($create_0(this$static.world), this$static.world.event_0, this$static.world.timeTrigger, initValues(getClassLiteralForArray(Ltripleplay_entity_Component_2_classLit, 1), $intern_1, 37, 0, []));
  $set_10(this$static.world.timeTrigger, e.id_0, this$static.world.gameTime._value.now_0 + afterSeconds);
  $set_9(this$static.world.event_0, e.id_0, event_0);
}

function NarrativeEvent(world){
  this.world = checkNotNull(world);
}

defineClass(58, 1, {});
_.run = function run_12(){
  $emit(this.world.onNarrativeEvent, this);
}
;
var Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit = createForClass('edu.bsu.cybersec.core', 'NarrativeEvent', 58, Ljava_lang_Object_2_classLit);
defineClass(55, 1, {55:1});
_.onSelected = function onSelected(){
  !!game_0 && $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), this.eventAction()), this.eventLabel()));
}
;
var Ledu_bsu_cybersec_core_NarrativeEvent$Option_2_classLit = createForClass('edu.bsu.cybersec.core', 'NarrativeEvent/Option', 55, Ljava_lang_Object_2_classLit);
defineClass(65, 55, $intern_36);
_.hasSubsequentPage = function hasSubsequentPage(){
  return false;
}
;
_.subsequentPage = function subsequentPage(){
  throw new UnsupportedOperationException_0('No subsequent event');
}
;
var Ledu_bsu_cybersec_core_NarrativeEvent$Option$Terminal_2_classLit = createForClass('edu.bsu.cybersec.core', 'NarrativeEvent/Option/Terminal', 65, Ledu_bsu_cybersec_core_NarrativeEvent$Option_2_classLit);
function NarrativeEvent$Option$DoNothingOption(text_0){
  this.text_0 = text_0;
}

defineClass(49, 65, {55:1, 49:1, 65:1}, NarrativeEvent$Option$DoNothingOption);
_.eventAction = function eventAction(){
  return 'Do nothing';
}
;
_.eventLabel = function eventLabel(){
  return 'null';
}
;
_.onSelected = function onSelected_0(){
}
;
_.text_1 = function text_1(){
  return this.text_0;
}
;
var Ledu_bsu_cybersec_core_NarrativeEvent$Option$DoNothingOption_2_classLit = createForClass('edu.bsu.cybersec.core', 'NarrativeEvent/Option/DoNothingOption', 49, Ledu_bsu_cybersec_core_NarrativeEvent$Option$Terminal_2_classLit);
function $post(this$static, event_0){
  $postAfterDelay(this$static.this$01, event_0, this$static.hours * 3600);
}

function NarrativeEvent$SubsequentEventBuilder(this$0, hours){
  this.this$01 = this$0;
  this.hours = hours;
}

defineClass(75, 1, {}, NarrativeEvent$SubsequentEventBuilder);
_.hours = 0;
var Ledu_bsu_cybersec_core_NarrativeEvent$SubsequentEventBuilder_2_classLit = createForClass('edu.bsu.cybersec.core', 'NarrativeEvent/SubsequentEventBuilder', 75, Ljava_lang_Object_2_classLit);
function $clinit_PlayableWorldFactory(){
  $clinit_PlayableWorldFactory = emptyMethod;
  CHARACTER_SPRITE_SCALE = game_0.bounds.bounds.width_0 / 510;
}

function $makeDeveloper(this$static, number, employee){
  var developer;
  developer = $add_21($create_0(this$static.world), this$static.world.employeeNumber, this$static.world.developmentSkill, initValues(getClassLiteralForArray(Ltripleplay_entity_Component_2_classLit, 1), $intern_1, 37, 0, [this$static.world.task, this$static.world.maintenanceSkill, this$static.world.profile, this$static.world.sprite, this$static.world.position_0]));
  $set_10(this$static.world.employeeNumber, developer.id_0, number);
  $set_10(this$static.world.task, developer.id_0, this$static.world.maintenanceTaskId);
  $set_8(this$static.world.developmentSkill, developer.id_0, 5);
  $set_8(this$static.world.maintenanceSkill, developer.id_0, 5);
  $set_9(this$static.world.profile, developer.id_0, employee.profile);
  $set_9(this$static.world.sprite, developer.id_0, $makeImageLayer(employee.image));
  return developer;
}

function $makeDevelopers(this$static){
  var e, i;
  for (i = 0; i < this$static.company.employees.size_1(); i++) {
    e = $makeDeveloper(this$static, i, this$static.company.employees.get_0(i));
    $add_0(this$static.world.workers, e);
  }
}

function $makeImageLayer(image){
  var layer;
  layer = new ImageLayer_0(image);
  $setOrigin(layer, $invScaled(image.scale_0, image.pixelWidth) / 2);
  $setScale(layer, CHARACTER_SPRITE_SCALE);
  return layer;
}

function PlayableWorldFactory(config, company){
  $clinit_PlayableWorldFactory();
  this.world = new GameWorld$Systematized;
  checkNotNull(config);
  this.company = checkNotNull(company);
}

defineClass(764, 1, {}, PlayableWorldFactory);
var CHARACTER_SPRITE_SCALE = 0;
var Ledu_bsu_cybersec_core_PlayableWorldFactory_2_classLit = createForClass('edu.bsu.cybersec.core', 'PlayableWorldFactory', 764, Ljava_lang_Object_2_classLit);
function PlayableWorldFactory$1(this$0){
  this.this$01 = this$0;
}

defineClass(765, 1, {}, PlayableWorldFactory$1);
_.run = function run_13(){
  $notifyEmit(this.this$01.world.onGameEnd, null);
}
;
var Ledu_bsu_cybersec_core_PlayableWorldFactory$1_2_classLit = createForClass('edu.bsu.cybersec.core', 'PlayableWorldFactory/1', 765, Ljava_lang_Object_2_classLit);
function $nextInt(this$static){
  return $nextInt_0(this$static.random_0, this$static.upperBound + 1 - this$static.lowerBound) + this$static.lowerBound;
}

function RandomInRange(lowerBound, upperBound){
  this.random_0 = new Random;
  checkArgument(lowerBound <= upperBound);
  this.lowerBound = lowerBound;
  this.upperBound = upperBound;
}

defineClass(261, 1, {}, RandomInRange);
_.lowerBound = 0;
_.upperBound = 0;
var Ledu_bsu_cybersec_core_RandomInRange_2_classLit = createForClass('edu.bsu.cybersec.core', 'RandomInRange', 261, Ljava_lang_Object_2_classLit);
function $clinit_Shuffler(){
  $clinit_Shuffler = emptyMethod;
  random = new Random;
}

function shuffle(list){
  $clinit_Shuffler();
  var index_0;
  for (index_0 = 0; index_0 < list.array.length; index_0 += 1) {
    $clinit_Collections();
    swapImpl(list, index_0, index_0 + $nextInt_0(random, list.array.length - index_0));
  }
}

var random;
function $onFrame(this$static){
  var nextUpdate, paintTick, updateDt, updateRate, updateTick, updates;
  nextUpdate = this$static.nextUpdate;
  updateTick = $tick(this$static.plat);
  if (updateTick >= nextUpdate) {
    updateRate = this$static.updateRate;
    updates = 0;
    while (updateTick >= nextUpdate) {
      nextUpdate += updateRate;
      ++updates;
    }
    this$static.nextUpdate = nextUpdate;
    updateDt = updates * updateRate;
    this$static.updateClock.tick += updateDt;
    this$static.updateClock.dt = updateDt;
    $update_0(this$static, this$static.updateClock);
  }
  paintTick = $tick(this$static.plat);
  this$static.paintClock.dt = paintTick - this$static.paintClock.tick;
  this$static.paintClock.tick = paintTick;
  1 - (nextUpdate - paintTick) / this$static.updateRate;
  $notifyEmit(this$static.paint, this$static.paintClock);
}

function $update_0(this$static, clock){
  $notifyEmit(this$static.update, clock);
}

defineClass(381, 1, {});
_.nextUpdate = 0;
_.updateRate = 0;
var Lplayn_core_Game_2_classLit = createForClass('playn.core', 'Game', 381, Ljava_lang_Object_2_classLit);
function $createDefaultBatch(gl){
  var maxVecs;
  try {
    if (maxVecs = usableMaxUniformVectors(gl) , maxVecs >= 48)
      return new UniformQuadBatch(gl);
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (!instanceOf($e0, 18))
      throw unwrap($e0);
  }
  return new TriangleBatch(gl);
}

function $paintScene(this$static){
  $saveTx(this$static.viewSurf);
  $begin_0(this$static.viewSurf);
  $clear_0(this$static.viewSurf, this$static.cred, this$static.cgreen, this$static.cblue, this$static.calpha);
  try {
    $paint_1(this$static.rootLayer, this$static.viewSurf);
  }
   finally {
    $end_0(this$static.viewSurf);
    $restoreTx(this$static.viewSurf);
  }
}

defineClass(382, 381, {});
_.calpha = 0;
_.cblue = 0;
_.cgreen = 0;
_.cred = 0;
var Lplayn_scene_SceneGame_2_classLit = createForClass('playn.scene', 'SceneGame', 382, Lplayn_core_Game_2_classLit);
function SimGame(plat, config){
  var box, gl;
  this.update = ($clinit_AbstractSignal() , new Signal);
  this.paint = new Signal;
  this.updateClock = new Clock;
  this.paintClock = new Clock;
  this.plat = plat;
  this.updateRate = 33;
  $addConnection(plat.frame_0, new Game$1(this));
  gl = plat.graphics.gl;
  $disable(gl.gl, 2884);
  $enable(gl.gl, 3042);
  gl.gl.blendFunc(1, 771);
  this.defaultBatch = $createDefaultBatch(gl);
  this.viewSurf = new Surface(plat.graphics, plat.graphics.defaultRenderTarget, this.defaultBatch);
  this.rootLayer = new RootLayer;
  $atPrio($addConnection(this.paint, new SceneGame$1(this)), -1);
  this.consent = ($clinit_AbstractValue() , new Value(($clinit_Boolean() , $clinit_Boolean() , FALSE)));
  this.event_0 = new Signal;
  this.assets = new GameAssets(plat.assets);
  game_0 = this;
  this.config = checkNotNull(config);
  box = $createBoundingBoxWithin(new AspectRatioTool, plat.graphics.viewSize);
  this.bounds = new GameBounds(box);
  this.screenStack = new ScreenStack(this, this.rootLayer);
  initialize_0(this.plat.assets);
  initialize(this.plat.graphics);
  initialize_1(this.plat.assets);
  $registerSfx(($clinit_Jukebox() , $clinit_Jukebox() , SINGLETON), (checkState_0(!!instance_3, 'Must be initialized first') , instance_3).all);
  $push_0(this.screenStack, new LoadingScreen(this.screenStack), ($clinit_ScreenStack() , NOOP_1));
  this.pointer = new Pointer(plat, this.rootLayer);
}

defineClass(383, 382, {}, SimGame);
var game_0;
var Ledu_bsu_cybersec_core_SimGame_2_classLit = createForClass('edu.bsu.cybersec.core', 'SimGame', 383, Lplayn_scene_SceneGame_2_classLit);
function $add_6(this$static, i){
  this$static.size_0 == this$static.capacity && $shrinkAndSmooth(this$static);
  this$static.list[this$static.size_0++] = i;
}

function $get_5(this$static, index_0){
  return this$static.list[index_0];
}

function $shrinkAndSmooth(this$static){
  var i, limit, replacement;
  replacement = initDim(I_classLit, $intern_37, 0, ~~(this$static.capacity / 2), 7, 1);
  for (i = 0 , limit = ~~(this$static.size_0 / 2); i < limit; i++) {
    replacement[i] = ~~((this$static.list[i * 2] + this$static.list[i * 2 + 1]) / 2);
  }
  arraycopy(replacement, 0, this$static.list, 0, replacement.length);
  this$static.size_0 = replacement.length;
}

function SizeConstrainedSmoothingList(){
  checkArgument(true);
  this.capacity = 200;
  this.list = initDim(I_classLit, $intern_37, 0, 200, 7, 1);
}

defineClass(937, 1, {}, SizeConstrainedSmoothingList);
_.capacity = 0;
_.size_0 = 0;
var Ledu_bsu_cybersec_core_SizeConstrainedSmoothingList_2_classLit = createForClass('edu.bsu.cybersec.core', 'SizeConstrainedSmoothingList', 937, Ljava_lang_Object_2_classLit);
function $clinit_SystemPriority(){
  $clinit_SystemPriority = emptyMethod;
  CLOCK_LEVEL = new SystemPriority('CLOCK_LEVEL', 0, 10);
  MODEL_LEVEL = new SystemPriority('MODEL_LEVEL', 1, 5);
  UI_LEVEL = new SystemPriority('UI_LEVEL', 2, 1);
  DEBUG_LEVEL = new SystemPriority('DEBUG_LEVEL', 3, 0);
}

function SystemPriority(enum$name, enum$ordinal, value_0){
  Enum.call(this, enum$name, enum$ordinal);
  this.value_0 = value_0;
}

function values_14(){
  $clinit_SystemPriority();
  return initValues(getClassLiteralForArray(Ledu_bsu_cybersec_core_SystemPriority_2_classLit, 1), $intern_1, 155, 0, [CLOCK_LEVEL, MODEL_LEVEL, UI_LEVEL, DEBUG_LEVEL]);
}

defineClass(155, 7, {155:1, 3:1, 9:1, 7:1}, SystemPriority);
_.value_0 = 0;
var CLOCK_LEVEL, DEBUG_LEVEL, MODEL_LEVEL, UI_LEVEL;
var Ledu_bsu_cybersec_core_SystemPriority_2_classLit = createForEnum('edu.bsu.cybersec.core', 'SystemPriority', 155, Ljava_lang_Enum_2_classLit, values_14);
function $clinit_TaskFlags(){
  $clinit_TaskFlags = emptyMethod;
  MAINTENANCE = new TaskFlags('MAINTENANCE', 0, 1);
  DEVELOPMENT = new TaskFlags('DEVELOPMENT', 1, 2);
  REASSIGNABLE = new TaskFlags('REASSIGNABLE', 2, 4);
  BOUND_TO_WORKDAY = new TaskFlags('BOUND_TO_WORKDAY', 3, 8);
  NOT_AT_WORK = new TaskFlags('NOT_AT_WORK', 4, 16);
}

function $isSet(this$static, value_0){
  return (value_0 & this$static.bit) != 0;
}

function TaskFlags(enum$name, enum$ordinal, bit){
  Enum.call(this, enum$name, enum$ordinal);
  this.bit = bit;
}

function flags_0(flags){
  $clinit_TaskFlags();
  var flag, flag$index, flag$max, result;
  result = 0;
  for (flag$index = 0 , flag$max = flags.length; flag$index < flag$max; ++flag$index) {
    flag = flags[flag$index];
    result |= flag.bit;
  }
  return result;
}

function values_15(){
  $clinit_TaskFlags();
  return initValues(getClassLiteralForArray(Ledu_bsu_cybersec_core_TaskFlags_2_classLit, 1), $intern_1, 70, 0, [MAINTENANCE, DEVELOPMENT, REASSIGNABLE, BOUND_TO_WORKDAY, NOT_AT_WORK]);
}

defineClass(70, 7, {70:1, 3:1, 9:1, 7:1}, TaskFlags);
_.bit = 0;
var BOUND_TO_WORKDAY, DEVELOPMENT, MAINTENANCE, NOT_AT_WORK, REASSIGNABLE;
var Ledu_bsu_cybersec_core_TaskFlags_2_classLit = createForEnum('edu.bsu.cybersec.core', 'TaskFlags', 70, Ljava_lang_Enum_2_classLit, values_15);
function $in(this$static, value_0){
  var flag, flag$array, flag$index, flag$max;
  for (flag$array = this$static.flags , flag$index = 0 , flag$max = flag$array.length; flag$index < flag$max; ++flag$index) {
    flag = flag$array[flag$index];
    if ((value_0 & flag.bit) != 0)
      return true;
  }
  return false;
}

function TaskFlags$FlagQuery(flags){
  this.flags = flags;
}

defineClass(892, 1, {}, TaskFlags$FlagQuery);
var Ledu_bsu_cybersec_core_TaskFlags$FlagQuery_2_classLit = createForClass('edu.bsu.cybersec.core', 'TaskFlags/FlagQuery', 892, Ljava_lang_Object_2_classLit);
function TrackedEvent(builder){
  this.category = builder.category;
  this.action = builder.action;
  this.label_0 = builder.label_0;
}

defineClass(652, 1, {}, TrackedEvent);
_.equals$ = function equals_15(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Ledu_bsu_cybersec_core_TrackedEvent_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = o;
  return equal(this.category, that.category) && equal(this.action, that.action) && equal(this.label_0, that.label_0);
}
;
_.hashCode$ = function hashCode_18(){
  return hashCode_28(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [this.category, this.action, this.label_0]));
}
;
_.toString$ = function toString_25(){
  return $toString_2($addHolder($addHolder($addHolder(new MoreObjects$ToStringHelper(($ensureNamesAreInitialized(Ledu_bsu_cybersec_core_TrackedEvent_2_classLit) , Ledu_bsu_cybersec_core_TrackedEvent_2_classLit.simpleName)), 'category', this.category), 'action', this.action), 'label', this.label_0));
}
;
var Ledu_bsu_cybersec_core_TrackedEvent_2_classLit = createForClass('edu.bsu.cybersec.core', 'TrackedEvent', 652, Ljava_lang_Object_2_classLit);
function $action(this$static, action){
  this$static.action = checkNotNull(action);
  return this$static;
}

function $label(this$static, label_0){
  this$static.label_0 = checkNotNull(label_0);
  return new TrackedEvent(this$static);
}

function TrackedEvent$Builder(category){
  this.category = checkNotNull(category);
}

defineClass(36, 1, {}, TrackedEvent$Builder);
var Ledu_bsu_cybersec_core_TrackedEvent$Builder_2_classLit = createForClass('edu.bsu.cybersec.core', 'TrackedEvent/Builder', 36, Ljava_lang_Object_2_classLit);
function $clinit_UsersPerHourState(){
  $clinit_UsersPerHourState = emptyMethod;
  ACTIVE = new UsersPerHourState('ACTIVE', 0, 1);
  INACTIVE = new UsersPerHourState('INACTIVE', 1, 0);
}

function UsersPerHourState(enum$name, enum$ordinal, value_0){
  Enum.call(this, enum$name, enum$ordinal);
  this.value_0 = value_0;
}

function values_16(){
  $clinit_UsersPerHourState();
  return initValues(getClassLiteralForArray(Ledu_bsu_cybersec_core_UsersPerHourState_2_classLit, 1), $intern_1, 208, 0, [ACTIVE, INACTIVE]);
}

defineClass(208, 7, {208:1, 3:1, 9:1, 7:1}, UsersPerHourState);
_.value_0 = 0;
var ACTIVE, INACTIVE;
var Ledu_bsu_cybersec_core_UsersPerHourState_2_classLit = createForEnum('edu.bsu.cybersec.core', 'UsersPerHourState', 208, Ljava_lang_Enum_2_classLit, values_16);
function $apply_0(seconds){
  var elapsedHours;
  checkNotNull(seconds);
  elapsedHours = ~~(seconds.value_0 / 3600);
  return elapsedHours % 24 < 9;
}

defineClass(812, 1, {});
_.createUI = function createUI(){
  return $add_8(new SizableGroup(($clinit_AxisLayout() , new AxisLayout$Vertical), game_0.bounds.bounds.width_0, game_0.bounds.bounds.height_0), initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$addStyles_0(new Label_0(this.text_0), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [($clinit_Style() , TEXT_WRAP).on, new Style$Binding(FONT_0, ($clinit_Slide() , FONT))])), $imageGroup(new BossAtDeskLabelFactory(this.boss))]));
}
;
var Ledu_bsu_cybersec_core_intro_BossSlide_2_classLit = createForClass('edu.bsu.cybersec.core.intro', 'BossSlide', 812, Ljava_lang_Object_2_classLit);
function $closeOnHide(this$static, ac){
  $add_15(this$static._closeOnHide, ac);
}

defineClass(446, 1, {});
_.showTransitionCompleted = function showTransitionCompleted(){
}
;
_.wasAdded = function wasAdded_0(){
}
;
_.wasHidden = function wasHidden(){
  $close_5(this._closeOnHide);
}
;
_.wasShown = function wasShown(){
  $closeOnHide(this, $addConnection(this.game_0().update, new Signal$1(this.update)));
  $closeOnHide(this, $addConnection(this.game_0().paint, new Signal$1(this.paint)));
}
;
var Ltripleplay_game_ScreenStack$Screen_2_classLit = createForClass('tripleplay.game', 'ScreenStack/Screen', 446, Ljava_lang_Object_2_classLit);
function ScreenStack$UIScreen(plat){
  this.layer = new GroupLayer;
  this.update = ($clinit_AbstractSignal() , new Signal);
  this.paint = new Signal;
  this._closeOnHide = new Closeable$Set;
  this.iface = new Interface(plat, this.paint);
}

defineClass(93, 446, {});
_.wasHidden = function wasHidden_0(){
  $close_5(this._closeOnHide);
  $clear_2(this.iface.anim);
}
;
var Ltripleplay_game_ScreenStack$UIScreen_2_classLit = createForClass('tripleplay.game', 'ScreenStack/UIScreen', 93, Ltripleplay_game_ScreenStack$Screen_2_classLit);
function $advance(this$static){
  this$static.slide.hasNext()?$replace_1(this$static.screenStack, new IntroScreen(this$static.screenStack, this$static.slide.next_1(), this$static.company), new SlideTransition(this$static.screenStack)):$replace_1(this$static.screenStack, new GameScreen(this$static.screenStack, this$static.company), new SlideTransition(this$static.screenStack));
}

function IntroScreen(screenStack, slide, company){
  ScreenStack$UIScreen.call(this, game_0.plat);
  this.screenStack = checkNotNull(screenStack);
  this.slide = checkNotNull(slide);
  this.company = checkNotNull(company);
}

defineClass(340, 93, {}, IntroScreen);
_.game_0 = function game_1(){
  return game_0;
}
;
_.showTransitionCompleted = function showTransitionCompleted_0(){
  this.connection = $addConnection(game_0.pointer.events, new IntroScreen$1(this));
}
;
_.wasShown = function wasShown_0(){
  var root, display;
  $closeOnHide(this, $addConnection(game_0.update, new Signal$1(this.update)));
  $closeOnHide(this, $addConnection(game_0.paint, new Signal$1(this.paint)));
  root = $setSize_7($createRoot(this.iface, ($clinit_AxisLayout() , new AxisLayout$Vertical), $create_1(newSheetBuilder(game_0.plat.graphics)), this.layer), game_0.plat.graphics.viewSize);
  display = this.slide.createUI().setConstraint(new Constraints$3(game_0.bounds.bounds.width_0, game_0.bounds.bounds.height_0));
  $add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [display]));
  $addStyles_0(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , BACKGROUND), new Background$1(-1))]));
}
;
var Ledu_bsu_cybersec_core_intro_IntroScreen_2_classLit = createForClass('edu.bsu.cybersec.core.intro', 'IntroScreen', 340, Ltripleplay_game_ScreenStack$UIScreen_2_classLit);
defineClass(953, 1, {});
_.onChange = function onChange(value_0, oldValue){
  this.onEmit(value_0);
}
;
var Lreact_Slot_2_classLit = createForClass('react', 'Slot', 953, Ljava_lang_Object_2_classLit);
function $onEmit_0(this$static, event_0){
  if (event_0.kind == ($clinit_Pointer$Event$Kind() , END_0)) {
    $close_7(this$static.this$01.connection);
    $advance(this$static.this$01);
  }
}

function IntroScreen$1(this$0){
  this.this$01 = this$0;
}

defineClass(814, 953, {}, IntroScreen$1);
_.onEmit = function onEmit_0(event_0){
  $onEmit_0(this, event_0);
}
;
var Ledu_bsu_cybersec_core_intro_IntroScreen$1_2_classLit = createForClass('edu.bsu.cybersec.core.intro', 'IntroScreen/1', 814, Lreact_Slot_2_classLit);
function Introduction(company){
  this.company = company;
}

defineClass(808, 1, {}, Introduction);
var Ledu_bsu_cybersec_core_intro_Introduction_2_classLit = createForClass('edu.bsu.cybersec.core.intro', 'Introduction', 808, Ljava_lang_Object_2_classLit);
function TextAndImageSlide(text_0, background){
  this.text_0 = checkNotNull(text_0);
  this.background = checkNotNull(background);
}

defineClass(257, 1, {});
_.createUI = function createUI_0(){
  return $add_8(new SizableGroup(($clinit_AxisLayout() , new AxisLayout$Vertical), game_0.bounds.bounds.width_0, game_0.bounds.bounds.height_0), initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$addStyles_0(new Label_1(this.text_0, new Icons$1(this.background)), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [($clinit_Style() , TEXT_WRAP).on, new Style$Binding(FONT_0, ($clinit_Slide() , FONT)), ICON_POS.below, new Style$Binding(ICON_GAP, valueOf(round_int(GAP)))]))]));
}
;
var Ledu_bsu_cybersec_core_intro_TextAndImageSlide_2_classLit = createForClass('edu.bsu.cybersec.core.intro', 'TextAndImageSlide', 257, Ljava_lang_Object_2_classLit);
function Introduction$1(this$0, $anonymous1){
  this.this$01 = this$0;
  TextAndImageSlide.call(this, 'Social Jam is an up and coming social media service, and they have hired you as their chief security advisor.', $anonymous1);
}

defineClass(809, 257, {}, Introduction$1);
_.hasNext = function hasNext_6(){
  return true;
}
;
_.next_1 = function next_7(){
  return new Introduction$1$1(this, $getTile(game_0.assets, ($clinit_GameAssets$TileKey() , NARRATIVE_BACKGROUND_2)));
}
;
var Ledu_bsu_cybersec_core_intro_Introduction$1_2_classLit = createForClass('edu.bsu.cybersec.core.intro', 'Introduction/1', 809, Ledu_bsu_cybersec_core_intro_TextAndImageSlide_2_classLit);
function Introduction$1$1(this$1, $anonymous1){
  this.this$11 = this$1;
  TextAndImageSlide.call(this, 'You were hired to manage a team of developers and protect the company from hackers! ', $anonymous1);
}

defineClass(810, 257, {}, Introduction$1$1);
_.hasNext = function hasNext_7(){
  return true;
}
;
_.next_1 = function next_8(){
  return new Introduction$1$1$1(this, $getTile(game_0.assets, ($clinit_GameAssets$TileKey() , NARRATIVE_BACKGROUND_3)));
}
;
var Ledu_bsu_cybersec_core_intro_Introduction$1$1_2_classLit = createForClass('edu.bsu.cybersec.core.intro', 'Introduction/1/1', 810, Ledu_bsu_cybersec_core_intro_TextAndImageSlide_2_classLit);
function Introduction$1$1$1(this$2, $anonymous1){
  this.this$21 = this$2;
  TextAndImageSlide.call(this, 'You have three employees. Assign them to develop features or maintain your current system.', $anonymous1);
}

defineClass(811, 257, {}, Introduction$1$1$1);
_.hasNext = function hasNext_8(){
  return true;
}
;
_.next_1 = function next_9(){
  return new Introduction$1$1$1$1('You have a job review in two weeks, and I expect us to have ' + this.this$21.this$11.this$01.company.goal.minimumUsers + " users by then. Make sure that we stay safe and our exposure doesn't go above " + $makeTruncatedString(new DecimalTruncator(0), this.this$21.this$11.this$01.company.goal.maximumExposure * 100) + '%. Do you have what it takes?', this.this$21.this$11.this$01.company.boss.image);
}
;
var Ledu_bsu_cybersec_core_intro_Introduction$1$1$1_2_classLit = createForClass('edu.bsu.cybersec.core.intro', 'Introduction/1/1/1', 811, Ledu_bsu_cybersec_core_intro_TextAndImageSlide_2_classLit);
function Introduction$1$1$1$1($anonymous0, $anonymous1){
  this.text_0 = checkNotNull($anonymous0);
  this.boss = checkNotNull($anonymous1);
}

defineClass(813, 812, {}, Introduction$1$1$1$1);
_.hasNext = function hasNext_9(){
  return false;
}
;
_.next_1 = function next_10(){
  throw new UnsupportedOperationException;
}
;
var Ledu_bsu_cybersec_core_intro_Introduction$1$1$1$1_2_classLit = createForClass('edu.bsu.cybersec.core.intro', 'Introduction/1/1/1/1', 813, Ledu_bsu_cybersec_core_intro_BossSlide_2_classLit);
function $clinit_Slide(){
  $clinit_Slide = emptyMethod;
  FONT = $derive((checkState_0(!!instance_1, 'Not yet initialized') , instance_1).REGULAR, 25);
  GAP = game_0.bounds.bounds.height_0 * $intern_38;
}

var FONT, GAP = 0;
function $run(this$static){
  var initialNumberOfUsers;
  initialNumberOfUsers = this$static.world.users._value.value_0;
  this$static.loss = round_int(initialNumberOfUsers * this$static.percentLoss);
  this$static.world.users.updateAndNotify(new Float(initialNumberOfUsers - this$static.loss), false);
  $emit(this$static.world.onNarrativeEvent, this$static);
}

function AbstractUserLossEvent(world, percentLoss){
  NarrativeEvent.call(this, world);
  this.percentLoss = percentLoss;
}

defineClass(117, 58, {});
_.run = function run_14(){
  $run(this);
}
;
_.loss = 0;
_.percentLoss = 0;
var Ledu_bsu_cybersec_core_narrative_AbstractUserLossEvent_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'AbstractUserLossEvent', 117, Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit);
function $clinit_ChildAdviceEvent(){
  $clinit_ChildAdviceEvent = emptyMethod;
  OPTIONS_TEXT = ($clinit_ImmutableList() , new RegularImmutableList(nullCheckedList(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, ['Computer Science', 'Engineering', 'English', 'Graphic Design', 'Mathematics', 'Marketing', 'Performing Arts', 'Physics', 'Psychology']))));
}

function ChildAdviceEvent(world){
  $clinit_ChildAdviceEvent();
  var builder, text_0, text$iterator;
  NarrativeEvent.call(this, world);
  builder = ($clinit_ImmutableList() , new ImmutableList$Builder);
  for (text$iterator = unmodifiableIterator(OPTIONS_TEXT.delegate.iterator()); text$iterator.hasNext();) {
    text_0 = text$iterator.next_0();
    $add_2(builder, new ChildAdviceEvent$MajorOption(this, text_0));
  }
  this.options = copyOf(builder.contents);
}

defineClass(348, 58, {}, ChildAdviceEvent);
_.options_0 = function options_0(){
  return this.options;
}
;
_.text_1 = function text_2(){
  return 'James from Accounting brought his daughter to work today. She has a question for you! What should she study in college to get a job in app development?';
}
;
var OPTIONS_TEXT;
var Ledu_bsu_cybersec_core_narrative_ChildAdviceEvent_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'ChildAdviceEvent', 348, Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit);
function ChildAdviceEvent$MajorOption(this$0, major){
  this.this$01 = this$0;
  this.major = checkNotNull(major);
}

defineClass(840, 65, $intern_36, ChildAdviceEvent$MajorOption);
_.eventAction = function eventAction_0(){
  return 'ChildAdvice';
}
;
_.eventLabel = function eventLabel_0(){
  return this.major;
}
;
_.onSelected = function onSelected_1(){
  !!game_0 && $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'ChildAdvice'), this.major));
  $post(new NarrativeEvent$SubsequentEventBuilder(this.this$01, 4), new ChildAdviceEvent$MajorOption$1(this, this.this$01.world));
}
;
_.text_1 = function text_3(){
  return this.major;
}
;
var Ledu_bsu_cybersec_core_narrative_ChildAdviceEvent$MajorOption_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'ChildAdviceEvent/MajorOption', 840, Ledu_bsu_cybersec_core_NarrativeEvent$Option$Terminal_2_classLit);
function ChildAdviceEvent$MajorOption$1(this$1, $anonymous0){
  this.this$11 = this$1;
  NarrativeEvent.call(this, $anonymous0);
}

defineClass(841, 58, {}, ChildAdviceEvent$MajorOption$1);
_.options_0 = function options_1(){
  return $clinit_ImmutableList() , new SingletonImmutableList(new NarrativeEvent$Option$DoNothingOption('Ok'));
}
;
_.run = function run_15(){
  $emit(this.world.onNarrativeEvent, this);
}
;
_.text_1 = function text_4(){
  return 'James from Accounting gives you a call to thank you for speaking with his daughter. He hopes she listens to you and studies ' + this.this$11.major + '!';
}
;
var Ledu_bsu_cybersec_core_narrative_ChildAdviceEvent$MajorOption$1_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'ChildAdviceEvent/MajorOption/1', 841, Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit);
function DDOSEvent(world){
  NarrativeEvent.call(this, world);
}

defineClass(859, 58, {}, DDOSEvent);
_.options_0 = function options_2(){
  return $clinit_ImmutableList() , new RegularImmutableList(nullCheckedList(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [new DDOSEvent$PressReleaseOption(this), new DDOSEvent$IgnoreOption(this)])));
}
;
_.run = function run_16(){
  $emit(this.world.onNarrativeEvent, this);
  this.world.userGenerationSystem.userGenerationEnabled.updateAndNotify(($clinit_Boolean() , $clinit_Boolean() , FALSE), false);
  this.HOURS_UNTIL_NOTIFY = round_int(this.world.exposure._value.value_0 * 100);
}
;
_.text_1 = function text_5(){
  return 'An angry customer is using a Distributed Denial of Service attack to overload your server capacity. Your servers are now down, and the server team is working hard to get them back up. What should you do?';
}
;
_.HOURS_UNTIL_NOTIFY = 0;
var Ledu_bsu_cybersec_core_narrative_DDOSEvent_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'DDOSEvent', 859, Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit);
function DDOSEvent$IgnoreOption(this$0){
  this.this$01 = this$0;
}

defineClass(861, 65, $intern_36, DDOSEvent$IgnoreOption);
_.eventAction = function eventAction_1(){
  return 'DDOS';
}
;
_.eventLabel = function eventLabel_1(){
  return 'Just Wait';
}
;
_.onSelected = function onSelected_2(){
  !!game_0 && $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'DDOS'), 'Just Wait'));
  $post(new NarrativeEvent$SubsequentEventBuilder(this.this$01, this.this$01.HOURS_UNTIL_NOTIFY), new DDOSEvent$IgnoreOption$1(this, this.this$01.world));
}
;
_.text_1 = function text_6(){
  return 'Just Wait';
}
;
var Ledu_bsu_cybersec_core_narrative_DDOSEvent$IgnoreOption_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'DDOSEvent/IgnoreOption', 861, Ledu_bsu_cybersec_core_NarrativeEvent$Option$Terminal_2_classLit);
function DDOSEvent$IgnoreOption$1(this$1, $anonymous0){
  this.this$11 = this$1;
  AbstractUserLossEvent.call(this, $anonymous0, $intern_39);
}

defineClass(863, 117, {}, DDOSEvent$IgnoreOption$1);
_.options_0 = function options_3(){
  return $clinit_ImmutableList() , new SingletonImmutableList(new NarrativeEvent$Option$DoNothingOption('Ok'));
}
;
_.run = function run_17(){
  this.world.userGenerationSystem.userGenerationEnabled.updateAndNotify(($clinit_Boolean() , $clinit_Boolean() , TRUE), false);
  $run(this);
}
;
_.text_1 = function text_7(){
  return 'After ' + this.this$11.this$01.HOURS_UNTIL_NOTIFY + ' hours, your servers are back up! Unfortunately, ' + this.loss + ' users have left because they got frustrated about your servers being down for no reason.';
}
;
var Ledu_bsu_cybersec_core_narrative_DDOSEvent$IgnoreOption$1_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'DDOSEvent/IgnoreOption/1', 863, Ledu_bsu_cybersec_core_narrative_AbstractUserLossEvent_2_classLit);
function DDOSEvent$PressReleaseOption(this$0){
  this.this$01 = this$0;
}

defineClass(860, 65, $intern_36, DDOSEvent$PressReleaseOption);
_.eventAction = function eventAction_2(){
  return 'DDOS';
}
;
_.eventLabel = function eventLabel_2(){
  return 'Press Release';
}
;
_.onSelected = function onSelected_3(){
  !!game_0 && $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'DDOS'), 'Press Release'));
  $post(new NarrativeEvent$SubsequentEventBuilder(this.this$01, this.this$01.HOURS_UNTIL_NOTIFY), new DDOSEvent$PressReleaseOption$1(this, this.this$01.world));
}
;
_.text_1 = function text_8(){
  return 'Press Release';
}
;
var Ledu_bsu_cybersec_core_narrative_DDOSEvent$PressReleaseOption_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'DDOSEvent/PressReleaseOption', 860, Ledu_bsu_cybersec_core_NarrativeEvent$Option$Terminal_2_classLit);
function DDOSEvent$PressReleaseOption$1(this$1, $anonymous0){
  this.this$11 = this$1;
  NarrativeEvent.call(this, $anonymous0);
}

defineClass(862, 58, {}, DDOSEvent$PressReleaseOption$1);
_.options_0 = function options_4(){
  return $clinit_ImmutableList() , new SingletonImmutableList(new NarrativeEvent$Option$DoNothingOption('Ok'));
}
;
_.run = function run_18(){
  this.world.userGenerationSystem.userGenerationEnabled.updateAndNotify(($clinit_Boolean() , $clinit_Boolean() , TRUE), false);
  $emit(this.world.onNarrativeEvent, this);
}
;
_.text_1 = function text_9(){
  return 'You gave a press conference about the incident and how the company is working to get servers back up. You lost no users, and, after ' + this.this$11.this$01.HOURS_UNTIL_NOTIFY + ' hours, your servers are back online!';
}
;
var Ledu_bsu_cybersec_core_narrative_DDOSEvent$PressReleaseOption$1_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'DDOSEvent/PressReleaseOption/1', 862, Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit);
function DataStolenEvent(world){
  NarrativeEvent.call(this, world);
}

defineClass(854, 58, {}, DataStolenEvent);
_.options_0 = function options_5(){
  return $clinit_ImmutableList() , new RegularImmutableList(nullCheckedList(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [new DataStolenEvent$NotifyOption(this), new DataStolenEvent$IgnoreOption(this)])));
}
;
_.text_1 = function text_10(){
  return 'Hackers stole some user data! What do you do?';
}
;
var Ledu_bsu_cybersec_core_narrative_DataStolenEvent_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'DataStolenEvent', 854, Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit);
function DataStolenEvent$IgnoreOption(this$0){
  this.this$01 = this$0;
}

defineClass(856, 65, $intern_36, DataStolenEvent$IgnoreOption);
_.eventAction = function eventAction_3(){
  return 'DataStolen';
}
;
_.eventLabel = function eventLabel_3(){
  return 'ignore';
}
;
_.onSelected = function onSelected_4(){
  !!game_0 && $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'DataStolen'), 'ignore'));
  $post(new NarrativeEvent$SubsequentEventBuilder(this.this$01, 8), new DataStolenEvent$IgnoreOption$1(this.this$01.world));
}
;
_.text_1 = function text_11(){
  return 'Ignore It';
}
;
var Ledu_bsu_cybersec_core_narrative_DataStolenEvent$IgnoreOption_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'DataStolenEvent/IgnoreOption', 856, Ledu_bsu_cybersec_core_NarrativeEvent$Option$Terminal_2_classLit);
function DataStolenEvent$IgnoreOption$1($anonymous0){
  AbstractUserLossEvent.call(this, $anonymous0, $intern_40);
}

defineClass(858, 117, {}, DataStolenEvent$IgnoreOption$1);
_.options_0 = function options_6(){
  return $clinit_ImmutableList() , new SingletonImmutableList(new NarrativeEvent$Option$DoNothingOption('Ok'));
}
;
_.text_1 = function text_12(){
  return 'An independent security expert discovered that you ignored a data breach! ' + this.loss + ' users have left after discovering that you did not notify them.';
}
;
var Ledu_bsu_cybersec_core_narrative_DataStolenEvent$IgnoreOption$1_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'DataStolenEvent/IgnoreOption/1', 858, Ledu_bsu_cybersec_core_narrative_AbstractUserLossEvent_2_classLit);
function DataStolenEvent$NotifyOption(this$0){
  this.this$01 = this$0;
}

defineClass(855, 65, $intern_36, DataStolenEvent$NotifyOption);
_.eventAction = function eventAction_4(){
  return 'DataStolen';
}
;
_.eventLabel = function eventLabel_4(){
  return 'notify';
}
;
_.onSelected = function onSelected_5(){
  !!game_0 && $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'DataStolen'), 'notify'));
  $post(new NarrativeEvent$SubsequentEventBuilder(this.this$01, 5), new DataStolenEvent$NotifyOption$1(this.this$01.world));
}
;
_.text_1 = function text_13(){
  return 'Notify our users';
}
;
var Ledu_bsu_cybersec_core_narrative_DataStolenEvent$NotifyOption_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'DataStolenEvent/NotifyOption', 855, Ledu_bsu_cybersec_core_NarrativeEvent$Option$Terminal_2_classLit);
function DataStolenEvent$NotifyOption$1($anonymous0){
  AbstractUserLossEvent.call(this, $anonymous0, $intern_41);
}

defineClass(857, 117, {}, DataStolenEvent$NotifyOption$1);
_.options_0 = function options_7(){
  return $clinit_ImmutableList() , new SingletonImmutableList(new NarrativeEvent$Option$DoNothingOption('Ok'));
}
;
_.text_1 = function text_14(){
  return this.loss + ' users have left our service after hearing about how hackers stole some of their personal information.';
}
;
var Ledu_bsu_cybersec_core_narrative_DataStolenEvent$NotifyOption$1_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'DataStolenEvent/NotifyOption/1', 857, Ledu_bsu_cybersec_core_narrative_AbstractUserLossEvent_2_classLit);
function $createIn(this$static, world){
  var event_0, event$iterator, time, list;
  this$static.world = checkNotNull(world);
  $runEvent_0(new DefaultNarrativeScript$TimedEventBuilder(this$static, this$static.world.gameTime._value.now_0), new WelcomeEvent(world));
  for (event$iterator = new AbstractList$IteratorImpl((list = new ArrayList , $add_0(list, new ScriptKiddieAttackEvent(world)) , $add_0(list, new SecurityConferenceEvent(world)) , $add_0(list, new DataStolenEvent(world)) , $add_0(list, new InputSanitizationEvent(world)) , $add_0(list, new DDOSEvent(world)) , $add_0(list, new ChildAdviceEvent(world)) , $add_0(list, new InsecurePasswordEvent(world)) , shuffle(list) , list)); event$iterator.i < event$iterator.this$01_0.size_1();) {
    event_0 = (checkCriticalElement(event$iterator.i < event$iterator.this$01_0.size_1()) , event$iterator.this$01_0.get_0(event$iterator.last = event$iterator.i++));
    time = $generateEventTime(this$static);
    $runEvent_0($addSeconds(new DefaultNarrativeScript$TimedEventBuilder(this$static, this$static.world.gameTime._value.now_0), time), event_0);
  }
}

function $generateEventTime(this$static){
  var endTime, time;
  endTime = this$static.world.gameEnd._value.value_0;
  checkState_0(endTime > 0, 'End time has not been properly initialized');
  time = $nextInt_0(this$static.random_0, endTime);
  while (!$apply_0(valueOf(time))) {
    time = $nextInt_0(this$static.random_0, endTime);
  }
  return time;
}

function DefaultNarrativeScript(){
  this.random_0 = new Random;
}

defineClass(786, 1, {}, DefaultNarrativeScript);
var Ledu_bsu_cybersec_core_narrative_DefaultNarrativeScript_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'DefaultNarrativeScript', 786, Ljava_lang_Object_2_classLit);
function $addSeconds(this$static, seconds){
  this$static.trigger += seconds;
  return this$static;
}

function $runEvent_0(this$static, event_0){
  var e;
  e = $add_21($create_0(this$static.this$01.world), this$static.this$01.world.event_0, this$static.this$01.world.timeTrigger, initValues(getClassLiteralForArray(Ltripleplay_entity_Component_2_classLit, 1), $intern_1, 37, 0, []));
  $set_9(this$static.this$01.world.event_0, e.id_0, event_0);
  $set_10(this$static.this$01.world.timeTrigger, e.id_0, this$static.trigger);
}

function DefaultNarrativeScript$TimedEventBuilder(this$0, trigger){
  this.this$01 = this$0;
  this.trigger = trigger;
}

defineClass(338, 1, {}, DefaultNarrativeScript$TimedEventBuilder);
_.trigger = 0;
var Ledu_bsu_cybersec_core_narrative_DefaultNarrativeScript$TimedEventBuilder_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'DefaultNarrativeScript/TimedEventBuilder', 338, Ljava_lang_Object_2_classLit);
function InputSanitizationEvent(world){
  NarrativeEvent.call(this, world);
}

defineClass(347, 58, {}, InputSanitizationEvent);
_.options_0 = function options_8(){
  var e, e$iterator, options;
  options = (checkNonnegative(4, 'initialArraySize') , new ArrayList_0(4));
  for (e$iterator = (checkState_0(this.world.workers.array.length != 0, 'There are no workers.') , $iterator(filter_0(this.world.workers, new AvailablePredicate(this.world)))); $hasNext(e$iterator);) {
    e = $next(e$iterator);
    $add_0(options, new InputSanitizationEvent$EmployeeAssignmentOption(this, e.id_0));
  }
  $add_0(options, new InputSanitizationEvent$IgnoreOption(this));
  return options;
}
;
_.text_1 = function text_15(){
  return 'One of your engineers is concerned about injection attacks: if user data is not handled correctly, hackers may be able to run their programs on your machines. Who will you assign to investigate?';
}
;
var Ledu_bsu_cybersec_core_narrative_InputSanitizationEvent_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'InputSanitizationEvent', 347, Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit);
function InputSanitizationEvent$EmployeeAssignmentOption(this$0, id_0){
  this.this$01 = this$0;
  this.id_0 = id_0;
  this.text_0 = $get_13(this$0.world.profile, id_0).firstName;
}

defineClass(835, 65, $intern_36, InputSanitizationEvent$EmployeeAssignmentOption);
_.eventAction = function eventAction_5(){
  return 'Sanitization';
}
;
_.eventLabel = function eventLabel_5(){
  return this.text_0;
}
;
_.onSelected = function onSelected_6(){
  var taskEntity;
  !!game_0 && $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'Sanitization'), this.text_0));
  taskEntity = $add_21($create_0(this.this$01.world), this.this$01.world.name_0, this.this$01.world.owner, initValues(getClassLiteralForArray(Ltripleplay_entity_Component_2_classLit, 1), $intern_1, 37, 0, [this.this$01.world.secondsRemaining, this.this$01.world.onComplete, this.this$01.world.taskFlags]));
  $set_9(this.this$01.world.name_0, taskEntity.id_0, 'Investigating');
  $set_10(this.this$01.world.owner, taskEntity.id_0, this.id_0);
  $set_10(this.this$01.world.taskFlags, taskEntity.id_0, flags_0(initValues(getClassLiteralForArray(Ledu_bsu_cybersec_core_TaskFlags_2_classLit, 1), $intern_1, 70, 0, [($clinit_TaskFlags() , BOUND_TO_WORKDAY)])));
  $set_10(this.this$01.world.secondsRemaining, taskEntity.id_0, 57600);
  $set_9(this.this$01.world.onComplete, taskEntity.id_0, new InputSanitizationEvent$EmployeeAssignmentOption$1(this, taskEntity));
  $set_10(this.this$01.world.task, this.id_0, taskEntity.id_0);
}
;
_.text_1 = function text_16(){
  return this.text_0;
}
;
_.id_0 = 0;
_.text_0 = null;
var Ledu_bsu_cybersec_core_narrative_InputSanitizationEvent$EmployeeAssignmentOption_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'InputSanitizationEvent/EmployeeAssignmentOption', 835, Ledu_bsu_cybersec_core_NarrativeEvent$Option$Terminal_2_classLit);
function InputSanitizationEvent$EmployeeAssignmentOption$1(this$1, val$taskEntity){
  this.this$11 = this$1;
  this.val$taskEntity2 = val$taskEntity;
}

defineClass(837, 1, {}, InputSanitizationEvent$EmployeeAssignmentOption$1);
_.run = function run_19(){
  $postAfterDelay(this.this$11.this$01, new InputSanitizationEvent$EmployeeAssignmentOption$1$1(this, this.this$11.this$01.world, this.val$taskEntity2), 0);
}
;
var Ledu_bsu_cybersec_core_narrative_InputSanitizationEvent$EmployeeAssignmentOption$1_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'InputSanitizationEvent/EmployeeAssignmentOption/1', 837, Ljava_lang_Object_2_classLit);
function InputSanitizationEvent$EmployeeAssignmentOption$1$1(this$2, $anonymous0, val$taskEntity){
  this.this$21 = this$2;
  this.val$taskEntity4 = val$taskEntity;
  AbstractUserLossEvent.call(this, $anonymous0, 0.07000000029802322);
}

defineClass(838, 117, {}, InputSanitizationEvent$EmployeeAssignmentOption$1$1);
_.options_0 = function options_9(){
  return $clinit_ImmutableList() , new SingletonImmutableList(new NarrativeEvent$Option$DoNothingOption('Ok'));
}
;
_.run = function run_20(){
  $set_10(this.world.task, this.this$21.this$11.id_0, this.world.maintenanceTaskId);
  $run(this);
  $dispose(this.val$taskEntity4);
}
;
_.text_1 = function text_17(){
  return 'You lost ' + this.loss + ' users before you could fix the injection problem, but now it has been fixed.';
}
;
var Ledu_bsu_cybersec_core_narrative_InputSanitizationEvent$EmployeeAssignmentOption$1$1_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'InputSanitizationEvent/EmployeeAssignmentOption/1/1', 838, Ledu_bsu_cybersec_core_narrative_AbstractUserLossEvent_2_classLit);
function InputSanitizationEvent$IgnoreOption(this$0){
  this.this$01 = this$0;
}

defineClass(836, 65, $intern_36, InputSanitizationEvent$IgnoreOption);
_.eventAction = function eventAction_6(){
  return 'Sanitization';
}
;
_.eventLabel = function eventLabel_6(){
  return 'Nobody';
}
;
_.onSelected = function onSelected_7(){
  !!game_0 && $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'Sanitization'), 'Nobody'));
  $post(new NarrativeEvent$SubsequentEventBuilder(this.this$01, 16), new InputSanitizationEvent$IgnoreOption$1(this.this$01.world));
}
;
_.text_1 = function text_18(){
  return 'Nobody';
}
;
var Ledu_bsu_cybersec_core_narrative_InputSanitizationEvent$IgnoreOption_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'InputSanitizationEvent/IgnoreOption', 836, Ledu_bsu_cybersec_core_NarrativeEvent$Option$Terminal_2_classLit);
function InputSanitizationEvent$IgnoreOption$1($anonymous0){
  AbstractUserLossEvent.call(this, $anonymous0, $intern_42);
}

defineClass(839, 117, {}, InputSanitizationEvent$IgnoreOption$1);
_.options_0 = function options_10(){
  return $clinit_ImmutableList() , new SingletonImmutableList(new NarrativeEvent$Option$DoNothingOption('Ok'));
}
;
_.text_1 = function text_19(){
  return 'One of your employees finds and fixes a defect regarding input handling. You lost ' + this.loss + ' users while you ignored the problem.';
}
;
var Ledu_bsu_cybersec_core_narrative_InputSanitizationEvent$IgnoreOption$1_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'InputSanitizationEvent/IgnoreOption/1', 839, Ledu_bsu_cybersec_core_narrative_AbstractUserLossEvent_2_classLit);
function InsecurePasswordEvent(world){
  NarrativeEvent.call(this, world);
}

defineClass(351, 58, {}, InsecurePasswordEvent);
_.options_0 = function options_11(){
  return $clinit_ImmutableList() , new RegularImmutableList(nullCheckedList(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [new InsecurePasswordEvent$TrainingOption(this), new InsecurePasswordEvent$IgnoreOption(this)])));
}
;
_.text_1 = function text_20(){
  return 'Some private information was stolen because one of the employees in advertising was using a weak password. What would you like to do?';
}
;
_.PERCENT_LOSS = $intern_41;
var Ledu_bsu_cybersec_core_narrative_InsecurePasswordEvent_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'InsecurePasswordEvent', 351, Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit);
function InsecurePasswordEvent$IgnoreOption(this$0){
  this.this$01 = this$0;
}

defineClass(865, 65, $intern_36, InsecurePasswordEvent$IgnoreOption);
_.eventAction = function eventAction_7(){
  return 'Password';
}
;
_.eventLabel = function eventLabel_7(){
  return 'change';
}
;
_.onSelected = function onSelected_8(){
  !!game_0 && $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'Password'), 'change'));
  $post(new NarrativeEvent$SubsequentEventBuilder(this.this$01, 2), new InsecurePasswordEvent$IgnoreOption$1(this.this$01.world, this.this$01.PERCENT_LOSS));
  $post(new NarrativeEvent$SubsequentEventBuilder(this.this$01, $nextInt(new RandomInRange(8, 48))), new InsecurePasswordEvent(this.this$01.world));
}
;
_.text_1 = function text_21(){
  return 'Just change his password';
}
;
var Ledu_bsu_cybersec_core_narrative_InsecurePasswordEvent$IgnoreOption_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'InsecurePasswordEvent/IgnoreOption', 865, Ledu_bsu_cybersec_core_NarrativeEvent$Option$Terminal_2_classLit);
function InsecurePasswordEvent$IgnoreOption$1($anonymous0, $anonymous1){
  AbstractUserLossEvent.call(this, $anonymous0, $anonymous1);
}

defineClass(867, 117, {}, InsecurePasswordEvent$IgnoreOption$1);
_.options_0 = function options_12(){
  return $clinit_ImmutableList() , new SingletonImmutableList(new NarrativeEvent$Option$DoNothingOption('Ok'));
}
;
_.text_1 = function text_22(){
  return this.loss + ' users have left our service after after hearing about someone using a weak password.' + "\n\nHopefully, this doesn't happen again...";
}
;
var Ledu_bsu_cybersec_core_narrative_InsecurePasswordEvent$IgnoreOption$1_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'InsecurePasswordEvent/IgnoreOption/1', 867, Ledu_bsu_cybersec_core_narrative_AbstractUserLossEvent_2_classLit);
function InsecurePasswordEvent$TrainingOption(this$0){
  this.this$01 = this$0;
}

defineClass(864, 65, $intern_36, InsecurePasswordEvent$TrainingOption);
_.eventAction = function eventAction_8(){
  return 'Password';
}
;
_.eventLabel = function eventLabel_8(){
  return 'train';
}
;
_.onSelected = function onSelected_9(){
  !!game_0 && $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'Password'), 'train'));
  $post(new NarrativeEvent$SubsequentEventBuilder(this.this$01, this.HOURS_UNTIL_NOTIFY_ON_TRAIN), new InsecurePasswordEvent$TrainingOption$1(this.this$01.world, this.this$01.PERCENT_LOSS));
}
;
_.text_1 = function text_23(){
  return 'Train staff on secure passwords';
}
;
_.HOURS_UNTIL_NOTIFY_ON_TRAIN = 8;
var Ledu_bsu_cybersec_core_narrative_InsecurePasswordEvent$TrainingOption_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'InsecurePasswordEvent/TrainingOption', 864, Ledu_bsu_cybersec_core_NarrativeEvent$Option$Terminal_2_classLit);
function InsecurePasswordEvent$TrainingOption$1($anonymous0, $anonymous1){
  AbstractUserLossEvent.call(this, $anonymous0, $anonymous1);
}

defineClass(866, 117, {}, InsecurePasswordEvent$TrainingOption$1);
_.options_0 = function options_13(){
  return $clinit_ImmutableList() , new SingletonImmutableList(new NarrativeEvent$Option$DoNothingOption('Ok'));
}
;
_.text_1 = function text_24(){
  return this.loss + ' users have left our service after hearing about someone using a weak password. ' + "\n\nThankfully, we took the time to train our staff, and this won't be a problem again!";
}
;
var Ledu_bsu_cybersec_core_narrative_InsecurePasswordEvent$TrainingOption$1_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'InsecurePasswordEvent/TrainingOption/1', 866, Ledu_bsu_cybersec_core_narrative_AbstractUserLossEvent_2_classLit);
function NextTutorialEvent(world){
  NarrativeEvent.call(this, world);
}

defineClass(821, 58, {}, NextTutorialEvent);
_.options_0 = function options_14(){
  return $clinit_ImmutableList() , new SingletonImmutableList(new NarrativeEvent$Option$DoNothingOption('Ok'));
}
;
_.text_1 = function text_25(){
  return "Developing features will attract new users. However, each feature also increases our exposure, meaning that it might be easier to be hacked. Keeping some workers maintaining our systems will limit our exposure.\n\nI think that's everything you need to know. Good luck!";
}
;
var Ledu_bsu_cybersec_core_narrative_NextTutorialEvent_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'NextTutorialEvent', 821, Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit);
function ScriptKiddieAttackEvent(world){
  NarrativeEvent.call(this, world);
}

defineClass(345, 58, {}, ScriptKiddieAttackEvent);
_.options_0 = function options_15(){
  var e, e$iterator, options;
  options = (checkNonnegative(5, 'initialArraySize') , new ArrayList_0(5));
  for (e$iterator = (checkState_0(this.world.workers.array.length != 0, 'There are no workers.') , $iterator(filter_0(this.world.workers, new AvailablePredicate(this.world)))); $hasNext(e$iterator);) {
    e = $next(e$iterator);
    $add_0(options, new ScriptKiddieAttackEvent$RetaliateOption(this, e.id_0));
  }
  $add_0(options, new NarrativeEvent$Option$DoNothingOption('Do Nothing'));
  $add_0(options, new ScriptKiddieAttackEvent$ReportToThePoliceOption(this));
  return options;
}
;
_.text_1 = function text_26(){
  return 'You were attacked by a script kiddie\u2014an amateur who copied some code from the Internet to attack our site. The attack was not successful, but we have to keep our guard up.\n\nShould someone try to find the attackers and strike back?';
}
;
var Ledu_bsu_cybersec_core_narrative_ScriptKiddieAttackEvent_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'ScriptKiddieAttackEvent', 345, Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit);
function ScriptKiddieAttackEvent$ReportToThePoliceOption(this$0){
  this.this$01 = this$0;
}

defineClass(828, 65, $intern_36, ScriptKiddieAttackEvent$ReportToThePoliceOption);
_.eventAction = function eventAction_9(){
  return 'Scriptkiddies';
}
;
_.eventLabel = function eventLabel_9(){
  return 'report';
}
;
_.onSelected = function onSelected_10(){
  !!game_0 && $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'Scriptkiddies'), 'report'));
  $post(new NarrativeEvent$SubsequentEventBuilder(this.this$01, 4), new ScriptKiddieAttackEvent$ReportToThePoliceOption$1(this.this$01.world));
}
;
_.text_1 = function text_27(){
  return 'Report to Police';
}
;
var Ledu_bsu_cybersec_core_narrative_ScriptKiddieAttackEvent$ReportToThePoliceOption_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'ScriptKiddieAttackEvent/ReportToThePoliceOption', 828, Ledu_bsu_cybersec_core_NarrativeEvent$Option$Terminal_2_classLit);
function ScriptKiddieAttackEvent$ReportToThePoliceOption$1($anonymous0){
  NarrativeEvent.call(this, $anonymous0);
}

defineClass(832, 58, {}, ScriptKiddieAttackEvent$ReportToThePoliceOption$1);
_.options_0 = function options_16(){
  return newArrayList_1(initValues(getClassLiteralForArray(Ledu_bsu_cybersec_core_NarrativeEvent$Option$DoNothingOption_2_classLit, 1), $intern_1, 49, 0, [new NarrativeEvent$Option$DoNothingOption('Ok')]));
}
;
_.run = function run_21(){
  var initialNumberOfUsers;
  initialNumberOfUsers = this.world.users._value.value_0;
  this.userGain = round_int(initialNumberOfUsers * 0.07999999821186066);
  this.world.users.updateAndNotify(new Float(this.userGain + initialNumberOfUsers), false);
  $emit(this.world.onNarrativeEvent, this);
}
;
_.text_1 = function text_28(){
  return 'The police found the hacker responsible, and the story gave you some good press! You gained ' + this.userGain + ' users from the free publicity.';
}
;
_.userGain = 0;
var Ledu_bsu_cybersec_core_narrative_ScriptKiddieAttackEvent$ReportToThePoliceOption$1_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'ScriptKiddieAttackEvent/ReportToThePoliceOption/1', 832, Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit);
function $registerRepercussion(this$static){
  $post(new NarrativeEvent$SubsequentEventBuilder(this$static.this$01, 24), new ScriptKiddieAttackEvent$RetaliateOption$2(this$static.this$01.world));
}

function ScriptKiddieAttackEvent$RetaliateOption(this$0, id_0){
  this.this$01 = this$0;
  this.selectedWorkerId = id_0;
  this.selectedWorkerName = $get_13(this$0.world.profile, this.selectedWorkerId).firstName;
}

defineClass(827, 65, $intern_36, ScriptKiddieAttackEvent$RetaliateOption);
_.eventAction = function eventAction_10(){
  return 'Scriptkiddies';
}
;
_.eventLabel = function eventLabel_10(){
  return this.selectedWorkerName;
}
;
_.onSelected = function onSelected_11(){
  var taskBeforeRetaliation, taskEntity;
  !!game_0 && $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'Scriptkiddies'), this.selectedWorkerName));
  taskBeforeRetaliation = $get_14(this.this$01.world.task, this.selectedWorkerId);
  checkState_0($isSet(($clinit_TaskFlags() , REASSIGNABLE), $get_14(this.this$01.world.taskFlags, taskBeforeRetaliation)), 'Previous task must be reassignable');
  taskEntity = $add_21($create_0(this.this$01.world), this.this$01.world.name_0, this.this$01.world.owner, initValues(getClassLiteralForArray(Ltripleplay_entity_Component_2_classLit, 1), $intern_1, 37, 0, [this.this$01.world.taskFlags, this.this$01.world.secondsRemaining, this.this$01.world.onComplete]));
  $set_9(this.this$01.world.name_0, taskEntity.id_0, 'Retaliating');
  $set_10(this.this$01.world.owner, taskEntity.id_0, this.selectedWorkerId);
  $set_10(this.this$01.world.taskFlags, taskEntity.id_0, flags_0(initValues(getClassLiteralForArray(Ledu_bsu_cybersec_core_TaskFlags_2_classLit, 1), $intern_1, 70, 0, [BOUND_TO_WORKDAY])));
  $set_10(this.this$01.world.secondsRemaining, taskEntity.id_0, 21600);
  $set_9(this.this$01.world.onComplete, taskEntity.id_0, new ScriptKiddieAttackEvent$RetaliateOption$1(this, taskBeforeRetaliation, taskEntity));
  $set_10(this.this$01.world.task, this.selectedWorkerId, taskEntity.id_0);
}
;
_.text_1 = function text_29(){
  return this.selectedWorkerName;
}
;
_.selectedWorkerId = 0;
var Ledu_bsu_cybersec_core_narrative_ScriptKiddieAttackEvent$RetaliateOption_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'ScriptKiddieAttackEvent/RetaliateOption', 827, Ledu_bsu_cybersec_core_NarrativeEvent$Option$Terminal_2_classLit);
function ScriptKiddieAttackEvent$RetaliateOption$1(this$1, val$taskBeforeRetaliation, val$taskEntity){
  this.this$11 = this$1;
  this.val$taskBeforeRetaliation2 = val$taskBeforeRetaliation;
  this.val$taskEntity3 = val$taskEntity;
}

defineClass(829, 1, {}, ScriptKiddieAttackEvent$RetaliateOption$1);
_.run = function run_22(){
  $postAfterDelay(this.this$11.this$01, new ScriptKiddieAttackEvent$RetaliateOption$1$1(this, this.this$11.this$01.world, this.val$taskBeforeRetaliation2, this.val$taskEntity3), 0);
}
;
_.val$taskBeforeRetaliation2 = 0;
var Ledu_bsu_cybersec_core_narrative_ScriptKiddieAttackEvent$RetaliateOption$1_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'ScriptKiddieAttackEvent/RetaliateOption/1', 829, Ljava_lang_Object_2_classLit);
function ScriptKiddieAttackEvent$RetaliateOption$1$1(this$2, $anonymous0, val$taskBeforeRetaliation, val$taskEntity){
  this.this$21 = this$2;
  this.val$taskBeforeRetaliation3 = val$taskBeforeRetaliation;
  this.val$taskEntity4 = val$taskEntity;
  NarrativeEvent.call(this, $anonymous0);
}

defineClass(830, 58, {}, ScriptKiddieAttackEvent$RetaliateOption$1$1);
_.options_0 = function options_17(){
  return $clinit_ImmutableList() , new SingletonImmutableList(new NarrativeEvent$Option$DoNothingOption('Ok'));
}
;
_.run = function run_23(){
  $set_10(this.world.task, this.this$21.this$11.selectedWorkerId, this.val$taskBeforeRetaliation3);
  $emit(this.world.onNarrativeEvent, this);
  $dispose(this.val$taskEntity4);
  $registerRepercussion(this.this$21.this$11);
}
;
_.text_1 = function text_30(){
  return $get_13(this.world.profile, this.this$21.this$11.selectedWorkerId).firstName + ' was unable to find the script kiddies and returns to work.';
}
;
_.val$taskBeforeRetaliation3 = 0;
var Ledu_bsu_cybersec_core_narrative_ScriptKiddieAttackEvent$RetaliateOption$1$1_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'ScriptKiddieAttackEvent/RetaliateOption/1/1', 830, Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit);
function ScriptKiddieAttackEvent$RetaliateOption$2($anonymous0){
  AbstractUserLossEvent.call(this, $anonymous0, 0.75);
}

defineClass(831, 117, {}, ScriptKiddieAttackEvent$RetaliateOption$2);
_.options_0 = function options_18(){
  return $clinit_ImmutableList() , new SingletonImmutableList(new NarrativeEvent$Option$DoNothingOption('Ok'));
}
;
_.text_1 = function text_31(){
  return 'Not only was having your employee retaliate unsuccessful, it was illegal! The FBI will be looking in to this...\n\n You lost ' + this.loss + ' users because of your short temper.';
}
;
var Ledu_bsu_cybersec_core_narrative_ScriptKiddieAttackEvent$RetaliateOption$2_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'ScriptKiddieAttackEvent/RetaliateOption/2', 831, Ledu_bsu_cybersec_core_narrative_AbstractUserLossEvent_2_classLit);
function SecurityConferenceEvent(world){
  NarrativeEvent.call(this, world);
}

defineClass(346, 58, {}, SecurityConferenceEvent);
_.options_0 = function options_19(){
  var availableWorkers, e, e$iterator, result;
  result = new ArrayList;
  availableWorkers = (checkState_0(this.world.workers.array.length != 0, 'There are no workers.') , filter_0(this.world.workers, new AvailablePredicate(this.world)));
  for (e$iterator = filter_1(availableWorkers.unfiltered.iterator(), availableWorkers.predicate); $hasNext(e$iterator);) {
    e = $next(e$iterator);
    $add_0(result, new SecurityConferenceEvent$SendWorkerToConferenceOption(this, e.id_0));
  }
  $add_0(result, new NarrativeEvent$Option$DoNothingOption('Nobody'));
  return result;
}
;
_.text_1 = function text_32(){
  return 'One of your workers can go to a two-day conference about security engineering. Whom do you send?';
}
;
var Ledu_bsu_cybersec_core_narrative_SecurityConferenceEvent_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'SecurityConferenceEvent', 346, Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit);
function SecurityConferenceEvent$SendWorkerToConferenceOption(this$0, id_0){
  this.this$01 = this$0;
  this.id_0 = id_0;
  this.name_0 = $get_13(this$0.world.profile, id_0).firstName;
}

defineClass(833, 65, $intern_36, SecurityConferenceEvent$SendWorkerToConferenceOption);
_.eventAction = function eventAction_11(){
  return 'Conference';
}
;
_.eventLabel = function eventLabel_11(){
  return this.name_0;
}
;
_.onSelected = function onSelected_12(){
  var task;
  !!game_0 && $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'Conference'), this.name_0));
  task = $add_21($create_0(this.this$01.world), this.this$01.world.name_0, this.this$01.world.owner, initValues(getClassLiteralForArray(Ltripleplay_entity_Component_2_classLit, 1), $intern_1, 37, 0, [this.this$01.world.secondsRemaining]));
  $set_9(this.this$01.world.name_0, task.id_0, 'At conference');
  $set_10(this.this$01.world.owner, task.id_0, this.id_0);
  $set_10(this.this$01.world.secondsRemaining, task.id_0, 172800);
  $set_10(this.this$01.world.task, this.id_0, task.id_0);
  $post(new NarrativeEvent$SubsequentEventBuilder(this.this$01, 48), new SecurityConferenceEvent$SendWorkerToConferenceOption$1(this, this.this$01.world, task));
}
;
_.text_1 = function text_33(){
  return this.name_0;
}
;
_.id_0 = 0;
var Ledu_bsu_cybersec_core_narrative_SecurityConferenceEvent$SendWorkerToConferenceOption_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'SecurityConferenceEvent/SendWorkerToConferenceOption', 833, Ledu_bsu_cybersec_core_NarrativeEvent$Option$Terminal_2_classLit);
function SecurityConferenceEvent$SendWorkerToConferenceOption$1(this$1, $anonymous0, val$task){
  this.this$11 = this$1;
  this.val$task3 = val$task;
  NarrativeEvent.call(this, $anonymous0);
}

defineClass(834, 58, {}, SecurityConferenceEvent$SendWorkerToConferenceOption$1);
_.options_0 = function options_20(){
  return $clinit_ImmutableList() , new SingletonImmutableList(new NarrativeEvent$Option$DoNothingOption('Ok'));
}
;
_.run = function run_24(){
  $add_18(this.world.maintenanceSkill, this.this$11.id_0, 25);
  $set_10(this.world.task, this.this$11.id_0, this.world.maintenanceTaskId);
  $dispose(this.val$task3);
  $emit(this.world.onNarrativeEvent, this);
}
;
_.text_1 = function text_34(){
  return $get_13(this.world.profile, this.this$11.id_0).firstName + ' has returned from the conference with greatly increased maintenance skill!';
}
;
var Ledu_bsu_cybersec_core_narrative_SecurityConferenceEvent$SendWorkerToConferenceOption$1_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'SecurityConferenceEvent/SendWorkerToConferenceOption/1', 834, Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit);
function $employeeNames(this$static){
  var e, i, limit, list, name_0, profile;
  list = (checkNonnegative(3, 'initialArraySize') , new ArrayList_0(3));
  for (i = 0 , limit = this$static.world.workers.array.length; i < limit; i++) {
    e = $get(this$static.world.workers, i);
    profile = $get_13(this$static.world.profile, e.id_0);
    name_0 = profile.firstName;
    list.array[list.array.length] = name_0;
  }
  return list;
}

function TutorialEvent(world){
  NarrativeEvent.call(this, world);
}

defineClass(820, 58, {}, TutorialEvent);
_.options_0 = function options_21(){
  return $clinit_ImmutableList() , new SingletonImmutableList(new TutorialEvent$1(this));
}
;
_.text_1 = function text_35(){
  return $stringify($employeeNames(this)) + ' are currently maintaining our software. You can tap them to find out more about them.' + '\n\nYou may reassign any number of them to new feature development at any time. Go ahead and try that now, and let me know when you are ready!';
}
;
var Ledu_bsu_cybersec_core_narrative_TutorialEvent_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'TutorialEvent', 820, Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit);
function TutorialEvent$1(this$0){
  this.this$01 = this$0;
}

defineClass(823, 55, {55:1}, TutorialEvent$1);
_.eventAction = function eventAction_12(){
  return 'Tutorial';
}
;
_.eventLabel = function eventLabel_12(){
  return 'Got it';
}
;
_.hasSubsequentPage = function hasSubsequentPage_0(){
  return true;
}
;
_.onSelected = function onSelected_13(){
}
;
_.subsequentPage = function subsequentPage_0(){
  return new NextTutorialEvent(this.this$01.world);
}
;
_.text_1 = function text_36(){
  return 'Got it';
}
;
var Ledu_bsu_cybersec_core_narrative_TutorialEvent$1_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'TutorialEvent/1', 823, Ledu_bsu_cybersec_core_NarrativeEvent$Option_2_classLit);
function WelcomeEvent(world){
  NarrativeEvent.call(this, world);
}

defineClass(819, 58, {}, WelcomeEvent);
_.options_0 = function options_22(){
  return $clinit_ImmutableList() , new RegularImmutableList(nullCheckedList(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [new WelcomeEvent$1(this), new NarrativeEvent$Option$DoNothingOption("No, thanks! I'm ready!")])));
}
;
_.text_1 = function text_37(){
  return 'Hello! I am Frieda, your administrative assistant.\n\nWould you like me to tell you more about your responsibilities?';
}
;
var Ledu_bsu_cybersec_core_narrative_WelcomeEvent_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'WelcomeEvent', 819, Ledu_bsu_cybersec_core_NarrativeEvent_2_classLit);
function WelcomeEvent$1(this$0){
  this.this$01 = this$0;
}

defineClass(822, 55, {55:1}, WelcomeEvent$1);
_.eventAction = function eventAction_13(){
  return 'Tutorial';
}
;
_.eventLabel = function eventLabel_13(){
  return 'Yes';
}
;
_.hasSubsequentPage = function hasSubsequentPage_1(){
  return true;
}
;
_.subsequentPage = function subsequentPage_1(){
  return new TutorialEvent(this.this$01.world);
}
;
_.text_1 = function text_38(){
  return 'Yes, please!';
}
;
var Ledu_bsu_cybersec_core_narrative_WelcomeEvent$1_2_classLit = createForClass('edu.bsu.cybersec.core.narrative', 'WelcomeEvent/1', 822, Ledu_bsu_cybersec_core_NarrativeEvent$Option_2_classLit);
function ConsentScreen(game){
  ScreenStack$UIScreen.call(this, game.plat);
  this.label_0 = new Label_0('Loading consent form...');
  this.game = game;
  $onSuccess($getText(game.plat.assets), new ConsentScreen$1(this));
  $setLocation_2($add_8($addStyles_0($setSize_6($createRoot(this.iface, $offPolicy(($clinit_AxisLayout() , new AxisLayout$Vertical), ($clinit_AxisLayout$Policy() , STRETCH)), $create_1(newSheetBuilder(game.plat.graphics)), this.layer), game.bounds.bounds.width_0, game.bounds.bounds.height_0), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , BACKGROUND), new Background$1(-1))])), initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$addStyles_0(new Label_0('Informed Consent Form'), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, $inset_0(new Background$1($intern_43), 0, game.bounds.bounds.height_0 * $intern_44))])), $setConstraint($setBehavior(new Scroller($addStyles_0(this.label_0, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(COLOR, valueOf($intern_45)), TEXT_WRAP.on, HALIGN.left_0])))), (null , UNIFORM_STRETCHED)), $add_8($addStyles_0(new Group($offPolicy(new AxisLayout$Vertical, STRETCH)), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, $inset_0(new Background$1($intern_43), 0, game.bounds.bounds.height_0 * $intern_44))])), initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$onClick(new Button_0('Grant informed consent and play the game'), new ConsentScreen$2(game)), $onClick(new Button_0('Play without giving informed consent'), new ConsentScreen$3(game))]))])), (game.plat.graphics.viewSize.width_0 - game.bounds.bounds.width_0) / 2, (game.plat.graphics.viewSize.height_0 - game.bounds.bounds.height_0) / 2);
}

defineClass(706, 93, {}, ConsentScreen);
_.game_0 = function game_2(){
  return this.game;
}
;
var Ledu_bsu_cybersec_core_study_ConsentScreen_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'ConsentScreen', 706, Ltripleplay_game_ScreenStack$UIScreen_2_classLit);
function ConsentScreen$1(this$0){
  this.this$01 = this$0;
}

defineClass(707, 953, {}, ConsentScreen$1);
_.onEmit = function onEmit_1(s){
  this.this$01.label_0.text_0.updateAndNotify(s, false);
}
;
var Ledu_bsu_cybersec_core_study_ConsentScreen$1_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'ConsentScreen/1', 707, Lreact_Slot_2_classLit);
function $onEmit_1(this$static){
  this$static.val$game2.consent.updateAndNotify(($clinit_Boolean() , $clinit_Boolean() , TRUE), false);
  $replace_1(this$static.val$game2.screenStack, new PreSurveyScreen(this$static.val$game2), new SlideTransition(this$static.val$game2.screenStack));
}

function ConsentScreen$2(val$game){
  this.val$game2 = val$game;
}

defineClass(708, 953, {}, ConsentScreen$2);
_.onEmit = function onEmit_2(button){
  $onEmit_1(this, button);
}
;
var Ledu_bsu_cybersec_core_study_ConsentScreen$2_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'ConsentScreen/2', 708, Lreact_Slot_2_classLit);
function $onEmit_2(this$static){
  $replace_1(this$static.val$game2.screenStack, new StartingScreen(this$static.val$game2.screenStack), new SlideTransition(this$static.val$game2.screenStack));
}

function ConsentScreen$3(val$game){
  this.val$game2 = val$game;
}

defineClass(709, 953, {}, ConsentScreen$3);
_.onEmit = function onEmit_3(button){
  $onEmit_2(this, button);
}
;
var Ledu_bsu_cybersec_core_study_ConsentScreen$3_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'ConsentScreen/3', 709, Lreact_Slot_2_classLit);
function $clinit_PostSurveyScreen(){
  $clinit_PostSurveyScreen = emptyMethod;
  GAP_BETWEEN_QUESTIONS = $percentOfHeight(game_0.bounds, $intern_44);
  HORIZONTAL_INSET = $percentOfHeight(game_0.bounds, $intern_46);
}

function PostSurveyScreen(game){
  $clinit_PostSurveyScreen();
  ScreenStack$UIScreen.call(this, game.plat);
  this.table = new PostSurveyScreen$LikertTable;
  this.field = new Field;
  this.game = game;
}

defineClass(349, 93, {}, PostSurveyScreen);
_.game_0 = function game_3(){
  return game_0;
}
;
_.wasAdded = function wasAdded_1(){
  var root;
  root = $addStyles_0($setSize_7($createRoot(this.iface, $offPolicy(($clinit_AxisLayout() , new AxisLayout$Vertical), ($clinit_AxisLayout$Policy() , STRETCH)), $create_1(newSheetBuilder(this.game.plat.graphics)), this.layer), $size(this.game.bounds.bounds, new Dimension)), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , BACKGROUND), $inset_0(new Background$1(-1), HORIZONTAL_INSET, 0))]));
  $setLocation_2(root, (this.game.plat.graphics.viewSize.width_0 - this.game.bounds.bounds.width_0) / 2, (this.game.plat.graphics.viewSize.height_0 - this.game.bounds.bounds.height_0) / 2);
  $add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$addStyles_0(new Label_0('Please rate how much you agree with the following statements.'), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [TEXT_WRAP.on]))]));
  $add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [this.table]));
  $add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [new Shim(0, GAP_BETWEEN_QUESTIONS)]));
  $add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$addStyles_0(new Label_0('Is there anything else you want to share with us about your game play experience?'), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [TEXT_WRAP.on]))]));
  $add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [this.field]));
  $add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [new Shim(0, GAP_BETWEEN_QUESTIONS)]));
  $add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$onClick(new Button_0('OK'), new PostSurveyScreen$1(this))]));
}
;
var GAP_BETWEEN_QUESTIONS = 0, HORIZONTAL_INSET = 0;
var Ledu_bsu_cybersec_core_study_PostSurveyScreen_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'PostSurveyScreen', 349, Ltripleplay_game_ScreenStack$UIScreen_2_classLit);
function $logResponses(this$static){
  var action, label_0, selected, selector, selector$iterator;
  new StringBuilder;
  for (selector$iterator = $iterator_0(new AbstractMap$1(this$static.this$01.table.selectorMap)); selector$iterator.val$outerIter2.hasNext();) {
    selector = $next_3(selector$iterator);
    selected = selector.selected._value;
    if (selected) {
      action = this$static.this$01.table.selectorMap.get_1(selector).code_0;
      label_0 = selected.level.code_0;
      $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('survey'), action), label_0));
    }
  }
  !this$static.this$01.field.text_0._value.length || $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('survey'), 'free'), this$static.this$01.field.text_0._value));
}

function $onEmit_3(this$static){
  $logResponses(this$static);
  $remove_26(this$static.this$01.game.screenStack, this$static.this$01, $dir(new SlideTransition(this$static.this$01.game.screenStack)));
}

function PostSurveyScreen$1(this$0){
  this.this$01 = this$0;
}

defineClass(845, 953, {}, PostSurveyScreen$1);
_.onEmit = function onEmit_4(button){
  $onEmit_3(this, button);
}
;
var Ledu_bsu_cybersec_core_study_PostSurveyScreen$1_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'PostSurveyScreen/1', 845, Lreact_Slot_2_classLit);
function $addStyles(this$static, styles){
  this$static._styles = $merge(this$static._styles, styles);
  this$static._ldata = null;
  this$static.invalidate();
  return this$static;
}

function $addStyles_0(this$static, styles){
  return $addStyles(this$static, ($clinit_Styles() , $add_25((null , _noneSingleton), 0, styles)));
}

function $computeSize(this$static, hintX, hintY){
  var insets, ldata, size_0;
  if (this$static._constraint) {
    hintX = this$static._constraint.adjustHintX(hintX);
    hintY = this$static._constraint.adjustHintY(hintY);
  }
  ldata = this$static._ldata = this$static.createLayoutData(hintX, hintY);
  insets = ldata.bg.insets;
  size_0 = this$static.computeSize(ldata, hintX - (insets._left + insets._right), hintY - (insets._top + insets._bottom));
  size_0.width_0 += insets._left + insets._right;
  size_0.height_0 += insets._top + insets._bottom;
  !!this$static._constraint && this$static._constraint.adjustPreferredSize(size_0, hintX, hintY);
  size_0.width_0 = iceil(size_0.width_0);
  size_0.height_0 = iceil(size_0.height_0);
  return size_0;
}

function $contains_2(this$static, x_0, y_0){
  return !(x_0 < 0 || x_0 > this$static._size.width_0 || y_0 < 0 || y_0 > this$static._size.height_0);
}

function $hierarchyChanged(this$static){
  !this$static._hierarchyChanged && (this$static._hierarchyChanged = ($clinit_AbstractSignal() , new Signal));
  return this$static._hierarchyChanged;
}

function $invalidate(this$static){
  this$static._preferredSize_0 = null;
  if ($isSet_0(this$static, ($clinit_Element$Flag() , VALID))) {
    $set_1(this$static, VALID, false);
    !!this$static._parent && this$static._parent.invalidate();
  }
}

function $isSet_0(this$static, flag){
  return (flag.mask & this$static._flags) != 0;
}

function $layout(this$static){
  var bginst, bgok, height, insets, ldata, width_0;
  if (!$isSet_0(this$static, ($clinit_Element$Flag() , VISIBLE_2)))
    return;
  width_0 = this$static._size.width_0;
  height = this$static._size.height_0;
  ldata = this$static._ldata?this$static._ldata:this$static.createLayoutData(width_0, height);
  bginst = this$static._bginst._target;
  bgok = !!bginst && bginst.this$01 == ldata.bg && $equals_4(bginst.size_0, this$static._size);
  bgok || $clear_5(this$static._bginst);
  if (width_0 > 0 && height > 0 && !bgok) {
    bginst = $set_13(this$static._bginst, ldata.bg.instantiate(this$static._size));
    bginst.addTo(this$static.layer, 0, 0, 0);
  }
  insets = ldata.bg.insets;
  this$static.layout_0(ldata, insets._left, insets._top, width_0 - (insets._left + insets._right), height - (insets._top + insets._bottom));
  this$static._ldata = null;
}

function $root(this$static){
  return !this$static._parent?null:this$static._parent.root_0();
}

function $set_1(this$static, flag, on){
  on?(this$static._flags |= flag.mask):(this$static._flags &= ~flag.mask);
}

function $setConstraint(this$static, constraint){
  this$static._constraint = constraint;
  this$static.invalidate();
  return this$static;
}

function $setEnabled(this$static, enabled){
  if (enabled != $isSet_0(this$static, ($clinit_Element$Flag() , ENABLED))) {
    $set_1(this$static, ENABLED, enabled);
    this$static._ldata = null;
    this$static.invalidate();
  }
  return this$static;
}

function $setStyles(this$static, styles){
  this$static._styles = styles;
  this$static._ldata = null;
  this$static.invalidate();
  return this$static;
}

function $setStyles_0(this$static, styles){
  return $setStyles(this$static, ($clinit_Styles() , $add_25((null , _noneSingleton), 0, styles)));
}

function $validate(this$static){
  if (!$isSet_0(this$static, ($clinit_Element$Flag() , VALID))) {
    this$static.layout();
    $set_1(this$static, VALID, true);
    this$static.wasValidated();
  }
}

function $wasAdded(this$static){
  var b;
  !!this$static._hierarchyChanged && $emit(this$static._hierarchyChanged, ($clinit_Boolean() , TRUE));
  this$static.invalidate();
  $set_1(this$static, ($clinit_Element$Flag() , IS_ADDING), false);
  for (b = this$static._bindings; b != ($clinit_Element$Binding() , NONE); b = b.next)
    $clinit_Closeable$Util();
}

function $wasRemoved(this$static){
  var b;
  $clear_5(this$static._bginst);
  !!this$static._hierarchyChanged && $emit(this$static._hierarchyChanged, ($clinit_Boolean() , FALSE));
  $set_1(this$static, ($clinit_Element$Flag() , IS_REMOVING), false);
  for (b = this$static._bindings; b != ($clinit_Element$Binding() , NONE); b = b.next)
    $clinit_Closeable$Util();
}

function $willAdd(this$static){
  return $isSet_0(this$static, ($clinit_Element$Flag() , IS_ADDING)) || !!this$static._parent && $willAdd(this$static._parent);
}

function $willRemove(this$static){
  return $isSet_0(this$static, ($clinit_Element$Flag() , IS_REMOVING)) || !!this$static._parent && $willRemove(this$static._parent);
}

function Element_0(){
  var ref;
  this.layer = this.createLayer();
  this._flags = ($clinit_Element$Flag() , VISIBLE_2).mask | ENABLED.mask;
  this._size = new Dimension;
  this._styles = ($clinit_Styles() , $clinit_Styles() , _noneSingleton);
  this._bindings = ($clinit_Element$Binding() , NONE);
  this._bginst = (ref = new Ref$1 , $set_13(ref, null) , ref);
  $setHitTester(this.layer, new Element$1(this));
  $set_1(this, HIT_DESCEND, true);
}

defineClass(8, 1, {8:1});
_.computeSize = function computeSize(ldata, hintX, hintY){
  return ldata.computeSize_0(hintX, hintY);
}
;
_.createLayer = function createLayer(){
  return new Element$7(this);
}
;
_.createLayoutData = function createLayoutData(hintX, hintY){
  return new Element$LayoutData(this);
}
;
_.invalidate = function invalidate(){
  $invalidate(this);
}
;
_.layout = function layout_0(){
  $layout(this);
}
;
_.layout_0 = function layout_1(ldata, left, top_0, width_0, height){
  ldata.layout_1(left, top_0, width_0, height);
}
;
_.preferredSize_0 = function preferredSize(hintX, hintY){
  return !this._preferredSize_0 && (this._preferredSize_0 = $computeSize(this, hintX, hintY)) , this._preferredSize_0;
}
;
_.root_0 = function root_0(){
  return $root(this);
}
;
_.setConstraint = function setConstraint(constraint){
  return $setConstraint(this, constraint);
}
;
_.setLocation = function setLocation(x_0, y_0){
  $setTranslation(this.layer, ifloor(x_0), ifloor(y_0));
}
;
_.setSize = function setSize(width_0, height){
  var changed;
  changed = this._size.width_0 != width_0 || this._size.height_0 != height;
  $setSize_1(this._size, width_0, height);
  !!this._preferredSize_0 && !$equals_4(this._size, this._preferredSize_0) && (this._ldata = null);
  changed && this.invalidate();
  return this;
}
;
_.validate = function validate(){
  $validate(this);
}
;
_.wasAdded = function wasAdded_2(){
  $wasAdded(this);
}
;
_.wasParented = function wasParented(parent_0){
  this._parent = parent_0;
}
;
_.wasRemoved = function wasRemoved(){
  $wasRemoved(this);
}
;
_.wasValidated = function wasValidated(){
}
;
_._flags = 0;
var Ltripleplay_ui_Element_2_classLit = createForClass('tripleplay.ui', 'Element', 8, Ljava_lang_Object_2_classLit);
function $didAdd(this$static, child){
  $add_13(this$static.layer, child.layer);
  child.wasParented(this$static);
  if (!!this$static.root_0() && !$willAdd(child)) {
    $set_1(child, ($clinit_Element$Flag() , IS_ADDING), true);
    child.wasAdded();
  }
}

function $didRemove(this$static, child, dispose){
  var needsRemove;
  dispose && $set_1(child, ($clinit_Element$Flag() , WILL_DISPOSE), true);
  $remove_22(this$static.layer, child.layer);
  needsRemove = $willRemove(child);
  child._parent = null;
  if (!!this$static.root_0() || needsRemove) {
    $set_1(child, ($clinit_Element$Flag() , IS_REMOVING), true);
    child.wasRemoved();
  }
  dispose && $close_4(child.layer);
}

function $layout_0(this$static, left, top_0, width_0, height){
  var ii, nn;
  this$static.getLayout().layout_2(this$static, left, top_0, width_0, height);
  for (ii = 0 , nn = this$static.childCount(); ii < nn; ii++)
    this$static.childAt(ii).validate();
}

function $wasAdded_0(this$static){
  var child, count, ii;
  $wasAdded(this$static);
  for (ii = 0 , count = this$static.childCount(); ii < count; ii++) {
    child = this$static.childAt(ii);
    $set_1(child, ($clinit_Element$Flag() , IS_ADDING), true);
    child.wasAdded();
  }
}

function $wasRemoved_0(this$static){
  var child, count, ii, willDispose;
  $wasRemoved(this$static);
  willDispose = $isSet_0(this$static, ($clinit_Element$Flag() , WILL_DISPOSE));
  for (ii = 0 , count = this$static.childCount(); ii < count; ii++) {
    child = this$static.childAt(ii);
    willDispose && $set_1(child, WILL_DISPOSE, true);
    $set_1(child, IS_REMOVING, true);
    child.wasRemoved();
  }
}

function Container(){
  Element_0.call(this);
}

function removeFromParent(element){
  var parent_0;
  if (!element._parent)
    return false;
  parent_0 = element._parent;
  parent_0.remove_4(element);
  return true;
}

defineClass(22, 8, $intern_47);
_.computeSize = function computeSize_0(ldata, hintX, hintY){
  return this.getLayout().computeSize_1(this, hintX, hintY);
}
;
_.layout_0 = function layout_2(ldata, left, top_0, width_0, height){
  $layout_0(this, left, top_0, width_0, height);
}
;
_.wasAdded = function wasAdded_3(){
  $wasAdded_0(this);
}
;
_.wasRemoved = function wasRemoved_0(){
  $wasRemoved_0(this);
}
;
var Ltripleplay_ui_Container_2_classLit = createForClass('tripleplay.ui', 'Container', 22, Ltripleplay_ui_Element_2_classLit);
defineClass(609, 22, $intern_47);
var Ltripleplay_ui_Container$Mutable_2_classLit = createForClass('tripleplay.ui', 'Container/Mutable', 609, Ltripleplay_ui_Container_2_classLit);
function $add_7(this$static, child){
  removeFromParent(child);
  $add(this$static._children, 3, child);
  $didAdd(this$static, child);
  $emit(this$static._childAdded, child);
  this$static.invalidate();
  return this$static;
}

function $add_8(this$static, children){
  var child, child$index, child$index0, child$max, child$max0;
  for (child$index0 = 0 , child$max0 = children.length; child$index0 < child$max0; ++child$index0) {
    child = children[child$index0];
    removeFromParent(child);
  }
  $addAll_0(this$static._children, new Arrays$ArrayList(children));
  for (child$index = 0 , child$max = children.length; child$index < child$max; ++child$index) {
    child = children[child$index];
    $didAdd(this$static, child);
    $emit(this$static._childAdded, child);
  }
  this$static.invalidate();
  return this$static;
}

function $childAt(this$static, index_0){
  return $get(this$static._children, index_0);
}

function $destroy(this$static, child){
  if ($remove_0(this$static._children, child)) {
    $didRemove(this$static, child, true);
    $emit(this$static._childRemoved, child);
    $invalidate(this$static);
  }
   else {
    $close_4(child.layer);
  }
}

function $didRemove_0(this$static, child){
  $didRemove(this$static, child, false);
  $emit(this$static._childRemoved, child);
}

function $remove_6(this$static, child){
  if ($remove_0(this$static._children, child)) {
    $didRemove(this$static, child, false);
    $emit(this$static._childRemoved, child);
    this$static.invalidate();
  }
}

function $removeAll(this$static){
  while (this$static._children.array.length != 0) {
    $removeAt(this$static, this$static._children.array.length - 1);
  }
  this$static.invalidate();
}

function $removeAt(this$static, index_0){
  $didRemove_0(this$static, this$static._children.remove_0(index_0));
  this$static.invalidate();
}

function Elements(layout){
  Container.call(this);
  this._children = new ArrayList;
  this._childAdded = ($clinit_AbstractSignal() , new Signal);
  this._childRemoved = new Signal;
  this._layout = layout;
  $set_1(this, ($clinit_Element$Flag() , HIT_DESCEND), true);
}

defineClass(34, 609, $intern_48);
_.childAt = function childAt(index_0){
  return $childAt(this, index_0);
}
;
_.childCount = function childCount(){
  return this._children.array.length;
}
;
_.getLayout = function getLayout(){
  return this._layout;
}
;
_.iterator = function iterator_19(){
  return unmodifiableList(this._children).iterator();
}
;
_.remove_4 = function remove_16(child){
  $remove_6(this, child);
}
;
_.stylesheet = function stylesheet(){
  return this._sheet;
}
;
var Ltripleplay_ui_Elements_2_classLit = createForClass('tripleplay.ui', 'Elements', 34, Ltripleplay_ui_Container$Mutable_2_classLit);
function Group(layout){
  Elements.call(this, layout);
}

defineClass(20, 34, $intern_48, Group);
_.getStyleClass = function getStyleClass(){
  return Ltripleplay_ui_Group_2_classLit;
}
;
var Ltripleplay_ui_Group_2_classLit = createForClass('tripleplay.ui', 'Group', 20, Ltripleplay_ui_Elements_2_classLit);
function $clinit_PostSurveyScreen$LikertTable(){
  $clinit_PostSurveyScreen$LikertTable = emptyMethod;
  INTERNAL_SHIM_SIZE = $percentOfHeight(game_0.bounds, $intern_34);
  LEVELS = ($clinit_ImmutableList() , new RegularImmutableList(nullCheckedList(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [new PostSurveyScreen$LikertTable$Level('Strongly Agree', 'SA'), new PostSurveyScreen$LikertTable$Level('Agree', 'A'), new PostSurveyScreen$LikertTable$Level('Neutral', 'N'), new PostSurveyScreen$LikertTable$Level('Disagree', 'D'), new PostSurveyScreen$LikertTable$Level('Strongly Disagree', 'SD')]))));
  PROMPTS = new RegularImmutableList(nullCheckedList(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [new PostSurveyScreen$LikertTable$Prompt('The game was enjoyable', 'enjoy'), new PostSurveyScreen$LikertTable$Prompt('The characters were believable', 'chars'), new PostSurveyScreen$LikertTable$Prompt('The decisions were difficult', 'difficult'), new PostSurveyScreen$LikertTable$Prompt('I could become an app developer', 'me')])));
}

function PostSurveyScreen$LikertTable(){
  $clinit_PostSurveyScreen$LikertTable();
  var level, level$iterator, prompt_0, prompt$iterator, responseGroup, selector, toggle;
  Group.call(this, $offPolicy(($clinit_AxisLayout() , new AxisLayout$Vertical), ($clinit_AxisLayout$Policy() , STRETCH)));
  this.selectorMap = ($clinit_Maps() , new HashMap);
  for (prompt$iterator = unmodifiableIterator(PROMPTS.delegate.iterator()); prompt$iterator.hasNext();) {
    prompt_0 = prompt$iterator.next_0();
    $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$addStyles_0(new Label_0(prompt_0.text_0), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [($clinit_Style() , HALIGN).left_0]))]));
    responseGroup = new Group(new AxisLayout$Horizontal);
    selector = new Selector;
    this.selectorMap.put(selector, prompt_0);
    for (level$iterator = unmodifiableIterator(LEVELS.delegate.iterator()); level$iterator.hasNext();) {
      level = level$iterator.next_0();
      toggle = new PostSurveyScreen$LikertTable$LevelButton(level);
      $add_24(selector, toggle, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, []));
      $add_8(responseGroup, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [toggle]));
    }
    $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [responseGroup]));
    $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [new Shim(0, INTERNAL_SHIM_SIZE)]));
  }
}

defineClass(843, 20, $intern_48, PostSurveyScreen$LikertTable);
var INTERNAL_SHIM_SIZE = 0, LEVELS, PROMPTS;
var Ledu_bsu_cybersec_core_study_PostSurveyScreen$LikertTable_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'PostSurveyScreen/LikertTable', 843, Ltripleplay_ui_Group_2_classLit);
function PostSurveyScreen$LikertTable$Level(text_0, code_0){
  this.text_0 = text_0;
  this.code_0 = code_0;
}

defineClass(180, 1, {}, PostSurveyScreen$LikertTable$Level);
var Ledu_bsu_cybersec_core_study_PostSurveyScreen$LikertTable$Level_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'PostSurveyScreen/LikertTable/Level', 180, Ljava_lang_Object_2_classLit);
function Widget(){
  Element_0.call(this);
  this._behave = this.createBehavior();
  if (this._behave) {
    $set_1(this, ($clinit_Element$Flag() , HIT_DESCEND), false);
    $set_1(this, HIT_ABSORB, true);
    $addConnection($events(this.layer), this._behave);
  }
}

defineClass(26, 8, $intern_49);
_.createBehavior = function createBehavior(){
  return null;
}
;
_.layout = function layout_3(){
  $layout(this);
  !!this._behave && this._behave.layout();
}
;
var Ltripleplay_ui_Widget_2_classLit = createForClass('tripleplay.ui', 'Widget', 26, Ltripleplay_ui_Element_2_classLit);
function $wasRemoved_1(this$static){
  $wasRemoved(this$static);
  $close_8(this$static._tglyph);
  if (this$static._ilayer) {
    this$static._ilayer.close_0();
    this$static._ilayer = null;
  }
  this$static._renderedIcon = null;
}

function TextWidget(){
  Widget.call(this);
  this._tglyph = new Glyph(this.layer);
}

defineClass(28, 26, $intern_50);
_.createLayoutData = function createLayoutData_0(hintX, hintY){
  return new TextWidget$TextLayoutData(this, hintX, hintY);
}
;
_.wasRemoved = function wasRemoved_1(){
  $wasRemoved_1(this);
}
;
var Ltripleplay_ui_TextWidget_2_classLit = createForClass('tripleplay.ui', 'TextWidget', 28, Ltripleplay_ui_Widget_2_classLit);
function $setText(this$static, text_0){
  this$static.text_0.updateAndNotify(text_0, false);
  return this$static;
}

function AbstractTextButton(text_0){
  TextWidget.call(this);
  this.text_0 = ($clinit_AbstractValue() , new Value(null));
  this.icon = new Value(null);
  this.text_0.updateAndNotify(text_0, false);
  $addConnection(this.text_0, new Element$6(this, true));
  $addConnection(this.icon, new TextWidget$1(this));
  this.icon.updateAndNotify(null, false);
}

defineClass(95, 28, {95:1, 8:1, 28:1, 26:1});
_.icon_0 = function icon_0(){
  return this.icon._value;
}
;
_.text_1 = function text_39(){
  return this.text_0._value;
}
;
var Ltripleplay_ui_AbstractTextButton_2_classLit = createForClass('tripleplay.ui', 'AbstractTextButton', 95, Ltripleplay_ui_TextWidget_2_classLit);
function ToggleButton(text_0){
  AbstractTextButton.call(this, text_0);
}

defineClass(317, 95, $intern_51);
_.clicked_0 = function clicked_0(){
  return this._behave.clicked;
}
;
_.createBehavior = function createBehavior_0(){
  return new Behavior$Toggle(this);
}
;
_.getStyleClass = function getStyleClass_0(){
  return Ltripleplay_ui_ToggleButton_2_classLit;
}
;
_.selected_0 = function selected_0(){
  return this._behave.selected;
}
;
_.toString$ = function toString_26(){
  return 'ToggleButton(' + this.text_0._value + ')';
}
;
var Ltripleplay_ui_ToggleButton_2_classLit = createForClass('tripleplay.ui', 'ToggleButton', 317, Ltripleplay_ui_AbstractTextButton_2_classLit);
function PostSurveyScreen$LikertTable$LevelButton(level){
  ToggleButton.call(this, level.text_0);
  this.level = level;
  $addStyles_0(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , FONT_0), $derive((checkState_0(!!instance_1, 'Not yet initialized') , instance_1).REGULAR, 12))]));
}

defineClass(844, 317, $intern_51, PostSurveyScreen$LikertTable$LevelButton);
var Ledu_bsu_cybersec_core_study_PostSurveyScreen$LikertTable$LevelButton_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'PostSurveyScreen/LikertTable/LevelButton', 844, Ltripleplay_ui_ToggleButton_2_classLit);
function PostSurveyScreen$LikertTable$Prompt(text_0, code_0){
  this.text_0 = text_0;
  this.code_0 = code_0;
}

defineClass(206, 1, {}, PostSurveyScreen$LikertTable$Prompt);
var Ledu_bsu_cybersec_core_study_PostSurveyScreen$LikertTable$Prompt_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'PostSurveyScreen/LikertTable/Prompt', 206, Ljava_lang_Object_2_classLit);
function $createUI(this$static){
  var question, question$iterator, root, view;
  root = $addStyles_0($setSize_7($createRoot(this$static.iface, $offPolicy(($clinit_AxisLayout() , new AxisLayout$Vertical), ($clinit_AxisLayout$Policy() , STRETCH)), $create_1(newSheetBuilder(this$static.game.plat.graphics)), this$static.layer), $size(this$static.game.bounds.bounds, new Dimension)), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , BACKGROUND), new Background$1(-1))]));
  $setLocation_2(root, (this$static.game.plat.graphics.viewSize.width_0 - this$static.game.bounds.bounds.width_0) / 2, (this$static.game.plat.graphics.viewSize.height_0 - this$static.game.bounds.bounds.height_0) / 2);
  for (question$iterator = unmodifiableIterator(this$static.questions.delegate.iterator()); question$iterator.hasNext();) {
    question = question$iterator.next_0();
    view = new SurveyQuestionView(question);
    $add_0(this$static.views, view);
    $add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [view]));
    $add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [new Shim(0, this$static.game.bounds.bounds.height_0 * $intern_34)]));
  }
  $add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$add_8(new Group(new AxisLayout$Horizontal), initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$onClick(new Button_0('OK'), new PreSurveyScreen$1(this$static))])).setConstraint((null , UNSTRETCHED))]));
}

function $logResponses_0(this$static){
  var action, label_0, question, question$iterator;
  new StringBuilder;
  for (question$iterator = new AbstractList$IteratorImpl(this$static.views); question$iterator.i < question$iterator.this$01_0.size_1();) {
    question = (checkCriticalElement(question$iterator.i < question$iterator.this$01_0.size_1()) , question$iterator.this$01_0.get_0(question$iterator.last = question$iterator.i++));
    if (question.selector.selected._value != null) {
      action = question.question.logPrefix;
      label_0 = $getSelection(question);
      $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('survey'), action), label_0));
    }
  }
}

function PreSurveyScreen(game){
  ScreenStack$UIScreen.call(this, game.plat);
  this.questions = ($clinit_ImmutableList() , new RegularImmutableList(nullCheckedList(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [$build($option($option($option($option($logPrefix(new SurveyQuestion$Builder('How old are you?'), 'age'), '18-25'), '26-40'), '41-55'), '56+')), $build($option($option($logPrefix(new SurveyQuestion$Builder('Do you work in Information Technology (IT)?'), 'IT'), 'Yes'), 'No')), $build($option($option($logPrefix(new SurveyQuestion$Builder('Do you consider yourself to have good computer security skills?'), 'skill'), 'Yes'), 'No')), $build($option($option($option($option($option($option($option($logPrefix(new SurveyQuestion$Builder('What is your highest level of education completed?'), 'ed'), 'Some high school'), 'High school'), 'Some college'), "Associate's degree"), "Bachelor's degree"), "Master's degree"), 'Doctoral degree'))]))));
  this.views = newArrayListWithCapacity(this.questions.delegate.size_1());
  this.game = game;
}

defineClass(781, 93, {}, PreSurveyScreen);
_.game_0 = function game_4(){
  return this.game;
}
;
_.wasAdded = function wasAdded_4(){
  $createUI(this);
}
;
var Ledu_bsu_cybersec_core_study_PreSurveyScreen_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'PreSurveyScreen', 781, Ltripleplay_game_ScreenStack$UIScreen_2_classLit);
function $onEmit_4(this$static){
  $logResponses_0(this$static.this$01);
  $replace_1(this$static.this$01.game.screenStack, new StartingScreen(this$static.this$01.game.screenStack), new SlideTransition(this$static.this$01.game.screenStack));
}

function PreSurveyScreen$1(this$0){
  this.this$01 = this$0;
}

defineClass(782, 953, {}, PreSurveyScreen$1);
_.onEmit = function onEmit_5(button){
  $onEmit_4(this, button);
}
;
var Ledu_bsu_cybersec_core_study_PreSurveyScreen$1_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'PreSurveyScreen/1', 782, Lreact_Slot_2_classLit);
function SurveyQuestion(builder){
  this.text_0 = builder.name_0;
  this.logPrefix = builder.logPrefix;
  this.options = copyOf(builder.options);
}

defineClass(847, 1, {}, SurveyQuestion);
var Ledu_bsu_cybersec_core_study_SurveyQuestion_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'SurveyQuestion', 847, Ljava_lang_Object_2_classLit);
function $build(this$static){
  checkState_0(this$static.options.array.length >= 2, 'Must have at least two options');
  if (this$static.logPrefix == null) {
    throw new IllegalStateException_0('No log prefix');
  }
  return new SurveyQuestion(this$static);
}

function $logPrefix(this$static, prefix){
  this$static.logPrefix = checkNotNull(prefix);
  return this$static;
}

function $option(this$static, text_0){
  $add_0(this$static.options, new SurveyQuestion$Option(text_0));
  return this$static;
}

function SurveyQuestion$Builder(name_0){
  this.options = new ArrayList;
  this.name_0 = name_0;
}

defineClass(207, 1, {}, SurveyQuestion$Builder);
var Ledu_bsu_cybersec_core_study_SurveyQuestion$Builder_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'SurveyQuestion/Builder', 207, Ljava_lang_Object_2_classLit);
function SurveyQuestion$Option(text_0){
  this.text_0 = text_0;
}

defineClass(848, 1, {}, SurveyQuestion$Option);
var Ledu_bsu_cybersec_core_study_SurveyQuestion$Option_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'SurveyQuestion/Option', 848, Ljava_lang_Object_2_classLit);
function $getSelection(this$static){
  if (this$static.selector.selected._value != null) {
    return this$static.selector.selected._value.loggableName;
  }
   else {
    throw new UnsupportedOperationException_0('No selection!');
  }
}

function SurveyQuestionView(question){
  var checkBox, option, option$iterator, optionsGroup;
  Group.call(this, $offPolicy(($clinit_AxisLayout() , new AxisLayout$Vertical), ($clinit_AxisLayout$Policy() , STRETCH)));
  this.selector = new Selector;
  this.question = checkNotNull(question);
  $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$addStyles_0(new Label_0(question.text_0), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [($clinit_Style() , HALIGN).left_0, TEXT_WRAP.on]))]));
  optionsGroup = new Group(new TableLayout(initValues(getClassLiteralForArray(Ltripleplay_ui_layout_TableLayout$Column_2_classLit, 1), $intern_1, 54, 0, [new SurveyQuestionView$ExposedColumn(($clinit_Style$HAlign() , CENTER_1), false, 1), new SurveyQuestionView$ExposedColumn(LEFT_2, true, 5)])));
  for (option$iterator = question.options.iterator_0(); option$iterator.hasNext();) {
    option = option$iterator.next_0();
    checkBox = new SurveyQuestionView$OptionCheckBox(option.text_0);
    $add_24(this.selector, checkBox, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, []));
    $add_8(optionsGroup, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [checkBox]));
    $add_8(optionsGroup, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$addStyles_0(new Label_0(option.text_0), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [HALIGN.left_0]))]));
  }
  $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [optionsGroup]));
}

defineClass(888, 20, $intern_48, SurveyQuestionView);
var Ledu_bsu_cybersec_core_study_SurveyQuestionView_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'SurveyQuestionView', 888, Ltripleplay_ui_Group_2_classLit);
function TableLayout$Column(halign, stretch, weight, minWidth){
  this._halign = halign;
  this._weight = weight;
  this._stretch = stretch;
  this._minWidth = minWidth;
}

defineClass(54, 1, $intern_52, TableLayout$Column);
_._minWidth = 0;
_._stretch = false;
_._weight = 0;
var Ltripleplay_ui_layout_TableLayout$Column_2_classLit = createForClass('tripleplay.ui.layout', 'TableLayout/Column', 54, Ljava_lang_Object_2_classLit);
function SurveyQuestionView$ExposedColumn(halign, stretch, weight){
  TableLayout$Column.call(this, halign, stretch, weight, 0);
}

defineClass(356, 54, $intern_52, SurveyQuestionView$ExposedColumn);
var Ledu_bsu_cybersec_core_study_SurveyQuestionView$ExposedColumn_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'SurveyQuestionView/ExposedColumn', 356, Ltripleplay_ui_layout_TableLayout$Column_2_classLit);
function $updateCheckViz(this$static, isChecked){
  !!this$static._tglyph._layer && $setVisible(this$static._tglyph._layer, isChecked);
  !!this$static._ilayer && $setVisible(this$static._ilayer, isChecked);
}

defineClass(318, 28, $intern_53);
_.clicked_0 = function clicked_1(){
  return this._behave.clicked;
}
;
_.createBehavior = function createBehavior_1(){
  return new Behavior$Toggle(this);
}
;
_.getStyleClass = function getStyleClass_1(){
  return Ltripleplay_ui_CheckBox_2_classLit;
}
;
_.icon_0 = function icon_1(){
  return this._checkIcon;
}
;
_.layout = function layout_4(){
  $layout(this);
  !!this._behave && this._behave.layout();
  $updateCheckViz(this, this._behave.selected._value.value_0);
}
;
_.selected_0 = function selected_1(){
  return this._behave.selected;
}
;
_.text_1 = function text_40(){
  return this._checkStr;
}
;
_.toString$ = function toString_27(){
  return 'CheckBox(' + this._checkStr + ')';
}
;
var Ltripleplay_ui_CheckBox_2_classLit = createForClass('tripleplay.ui', 'CheckBox', 318, Ltripleplay_ui_TextWidget_2_classLit);
function SurveyQuestionView$OptionCheckBox(loggableName){
  TextWidget.call(this);
  this._checkStr = 'X';
  this._checkIcon = null;
  $addConnection(this._behave.selected, new CheckBox$1(this));
  this.loggableName = loggableName;
}

defineClass(889, 318, $intern_53, SurveyQuestionView$OptionCheckBox);
var Ledu_bsu_cybersec_core_study_SurveyQuestionView$OptionCheckBox_2_classLit = createForClass('edu.bsu.cybersec.core.study', 'SurveyQuestionView/OptionCheckBox', 889, Ltripleplay_ui_CheckBox_2_classLit);
function $entityAdded(this$static, entity){
  this$static.isInterested(entity) && ($add_22(this$static._active, entity.id_0) , $set_12(entity.systems, this$static._id));
}

function $entityChanged(this$static, entity){
  var haveInterest, wasAdded;
  wasAdded = $isSet_2(entity.systems, this$static._id);
  haveInterest = this$static.isInterested(entity);
  haveInterest && !wasAdded?($add_22(this$static._active, entity.id_0) , $set_12(entity.systems, this$static._id)):!haveInterest && wasAdded && ($remove_25(this$static._active, entity.id_0) , $clear_4(entity.systems, this$static._id));
}

function $entityId(this$static, ii){
  return $get_16(this$static._active, ii);
}

function $entityRemoved(this$static, entity){
  $isSet_2(entity.systems, this$static._id) && ($remove_25(this$static._active, entity.id_0) , $clear_4(entity.systems, this$static._id));
}

function $paint_0(this$static){
  if (!this$static._enabled)
    return;
}

function $update_1(this$static, clock){
  if (!this$static._enabled)
    return;
  this$static.update_1(clock, this$static._active);
}

function System(world, priority){
  this._active = new IntBag;
  this.priority = priority;
  this._id = $register(world, this);
}

defineClass(40, 1, {});
_.update_1 = function update_0(clock, entities){
}
;
_._enabled = true;
_._id = 0;
_.priority = 0;
var Ltripleplay_entity_System_2_classLit = createForClass('tripleplay.entity', 'System', 40, Ljava_lang_Object_2_classLit);
function $runIfPossible(this$static, id_0){
  var runnable;
  runnable = $get_13(this$static.gameWorld.event_0, id_0);
  if (runnable) {
    $get_13(this$static.gameWorld.event_0, id_0).run();
    $set_9(this$static.gameWorld.event_0, id_0, null);
  }
}

function EventTriggerSystem(gameWorld){
  System.call(this, gameWorld, ($clinit_SystemPriority() , MODEL_LEVEL).value_0);
  this.gameWorld = checkNotNull(gameWorld);
}

defineClass(895, 40, {}, EventTriggerSystem);
_.isInterested = function isInterested(entity){
  var interested;
  interested = $has(entity, this.gameWorld.timeTrigger);
  interested && checkState_0($has(entity, this.gameWorld.event_0), 'I expect every time triggerable thing to have an event.');
  return interested;
}
;
_.update_1 = function update_1(clock, entities){
  var i, id_0, limit, time;
  for (i = 0 , limit = entities._size; i < limit; i++) {
    id_0 = entities._elems[i];
    time = $get_14(this.gameWorld.timeTrigger, id_0);
    $contains_1(this.gameWorld.gameTime._value, time) && $runIfPossible(this, id_0);
  }
}
;
var Ledu_bsu_cybersec_core_systems_EventTriggerSystem_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'EventTriggerSystem', 895, Ltripleplay_entity_System_2_classLit);
function $computeMaintenanceSum(this$static, entities){
  var i, id_0, limit, total;
  total = 0;
  for (i = 0 , limit = entities._size; i < limit; i++) {
    id_0 = entities._elems[i];
    $isMaintainer(this$static, $entity(this$static.world, id_0)) && (total += $get_12(this$static.world.maintenanceSkill, id_0));
  }
  return total;
}

function $findMaxProgressExploit(this$static, entities){
  var entity, i, limit, max_0;
  max_0 = null;
  for (i = 0 , limit = entities._size; i < limit; i++) {
    entity = $entity(this$static.world, entities._elems[i]);
    $has(entity, this$static.world.maintenanceProgress) && $get_12(this$static.world.maintenanceProgress, entity.id_0) < 1 && (!max_0 || $get_12(this$static.world.maintenanceProgress, entity.id_0) > $get_12(this$static.world.maintenanceProgress, max_0.id_0)) && (max_0 = entity);
  }
  return max_0;
}

function $isMaintainer(this$static, entity){
  return $has(entity, this$static.world.task) && $isSet(($clinit_TaskFlags() , MAINTENANCE), $get_14(this$static.world.taskFlags, $get_14(this$static.world.task, entity.id_0)));
}

function ExploitMaintenanceSystem(world){
  System.call(this, world, ($clinit_SystemPriority() , MODEL_LEVEL).value_0);
  this.world = checkNotNull(world);
}

defineClass(897, 40, {}, ExploitMaintenanceSystem);
_.isInterested = function isInterested_0(entity){
  return $has(entity, this.world.task) || $has(entity, this.world.maintenanceProgress);
}
;
_.update_1 = function update_2(clock, entities){
  var cappedNewProgress, entity, newProgress, totalMaintenance;
  totalMaintenance = $computeMaintenanceSum(this, entities);
  entity = $findMaxProgressExploit(this, entities);
  if (entity) {
    newProgress = $get_12(this.world.maintenanceProgress, entity.id_0) + totalMaintenance * $intern_34 * ($delta(this.world.gameTime._value) / 3600);
    cappedNewProgress = 1 < newProgress?1:newProgress;
    $set_8(this.world.maintenanceProgress, entity.id_0, cappedNewProgress);
    cappedNewProgress >= 1 && $remove_24(entity, this.world.userAttrition);
  }
}
;
var Ledu_bsu_cybersec_core_systems_ExploitMaintenanceSystem_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'ExploitMaintenanceSystem', 897, Ltripleplay_entity_System_2_classLit);
function $runPotentialExploit(this$static){
  var exposure, randomValue;
  randomValue = $nextInternal(this$static.random_0, 24) * $intern_54;
  exposure = this$static.world.exposure._value.value_0;
  randomValue < exposure && $generate(this$static.factory);
}

function ExploitSystem(world){
  System.call(this, world, ($clinit_SystemPriority() , MODEL_LEVEL).value_0);
  this.random_0 = new Random;
  this.nextCheck = 7200;
  this.world = checkNotNull(world);
  $addConnection(this.world.gameTime, new ExploitSystem$1(this));
  this.factory = new ExploitFactory(world);
}

defineClass(825, 40, {}, ExploitSystem);
_.isInterested = function isInterested_1(entity){
  return false;
}
;
_.nextCheck = 0;
var Ledu_bsu_cybersec_core_systems_ExploitSystem_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'ExploitSystem', 825, Ltripleplay_entity_System_2_classLit);
function $onChange(this$static, value_0){
  if (value_0.now_0 >= this$static.this$01.nextCheck) {
    $runPotentialExploit(this$static.this$01);
    this$static.this$01.nextCheck = value_0.now_0 + 7200;
  }
}

function ExploitSystem$1(this$0){
  this.this$01 = this$0;
}

defineClass(826, 1, {}, ExploitSystem$1);
_.onChange = function onChange_0(value_0, oldValue){
  $onChange(this, value_0, oldValue);
}
;
var Ledu_bsu_cybersec_core_systems_ExploitSystem$1_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'ExploitSystem/1', 826, Ljava_lang_Object_2_classLit);
function ExposureReductionSystem(world){
  System.call(this, world, ($clinit_SystemPriority() , MODEL_LEVEL).value_0);
  this.world = checkNotNull(world);
}

defineClass(894, 40, {}, ExposureReductionSystem);
_.isInterested = function isInterested_2(entity){
  return $has(entity, this.world.task);
}
;
_.update_1 = function update_3(clock, entities){
  var change, changePerHour, currentExposure, elapsedSeconds, i, id_0, limit, percentChangePerHour;
  elapsedSeconds = $delta(this.world.gameTime._value);
  for (i = 0 , limit = entities._size; i < limit; i++) {
    id_0 = entities._elems[i];
    if ($isSet(($clinit_TaskFlags() , MAINTENANCE), $get_14(this.world.taskFlags, $get_14(this.world.task, id_0)))) {
      currentExposure = this.world.exposure._value.value_0;
      percentChangePerHour = round_int($get_12(this.world.maintenanceSkill, id_0)) / $intern_2;
      changePerHour = currentExposure * percentChangePerHour;
      change = changePerHour * elapsedSeconds / 3600;
      this.world.exposure.updateAndNotify(new Float(currentExposure - change), false);
    }
  }
}
;
var Ledu_bsu_cybersec_core_systems_ExposureReductionSystem_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'ExposureReductionSystem', 894, Ltripleplay_entity_System_2_classLit);
function $computeTotalDevelopmentEffort(this$static){
  var accumulatedDevelopmentEffort, entityId, i, limit;
  accumulatedDevelopmentEffort = 0;
  for (i = 0 , limit = this$static.developerBag._size; i < limit; i++) {
    entityId = $get_16(this$static.developerBag, i);
    $isSet(($clinit_TaskFlags() , DEVELOPMENT), $get_14(this$static.world.taskFlags, $get_14(this$static.world.task, entityId))) && (accumulatedDevelopmentEffort += round_int($get_12(this$static.world.developmentSkill, entityId)));
  }
  return accumulatedDevelopmentEffort;
}

function $distributeEffortEvenlyAcrossFeaturesInDevelopment(this$static){
  var delta, dt, effortPerFeature, i, id_0, limit;
  dt = $delta(this$static.world.gameTime._value);
  effortPerFeature = $computeTotalDevelopmentEffort(this$static) / this$static.developmentBag._size;
  for (i = 0 , limit = this$static.developmentBag._size; i < limit; i++) {
    id_0 = $get_16(this$static.developmentBag, i);
    delta = effortPerFeature * dt / 3600 * this$static.inefficiencyFactor._value.value_0;
    $add_18(this$static.world.developmentProgress, id_0, delta);
  }
}

function $processCompletedFeatures(this$static){
  var i, id_0, limit, e;
  for (i = 0 , limit = this$static.developmentBag._size; i < limit; i++) {
    id_0 = $get_16(this$static.developmentBag, i);
    $has($entity(this$static.world, id_0), this$static.world.developmentProgress) && $get_12(this$static.world.developmentProgress, id_0) >= $get_14(this$static.world.goal, id_0) && (e = $entity(this$static.world, id_0) , $remove_24(e, this$static.world.developmentProgress) , this$static.world.exposure.updateAndNotify(new Float(this$static.world.exposure._value.value_0 + $get_12(this$static.world.vulnerability, id_0)), false) , $set_10(this$static.world.usersPerHourState, id_0, ($clinit_UsersPerHourState() , ACTIVE).value_0) , undefined);
  }
}

function $triageEntitiesIntoBags(this$static, entities){
  var entity, entityId, i, limit;
  for (i = 0 , limit = entities._size; i < limit; i++) {
    entityId = entities._elems[i];
    entity = $entity(this$static.world, entityId);
    $has(entity, this$static.world.developmentProgress)?$add_22(this$static.developmentBag, entityId):$add_22(this$static.developerBag, entityId);
  }
}

function FeatureDevelopmentSystem(world){
  System.call(this, world, ($clinit_SystemPriority() , MODEL_LEVEL).value_0);
  this.developmentBag = new IntBag;
  this.developerBag = new IntBag;
  this.inefficiencyFactor = ($clinit_AbstractValue() , new Value(new Float(1)));
  this.world = checkNotNull(world);
}

defineClass(785, 40, {}, FeatureDevelopmentSystem);
_.isInterested = function isInterested_3(entity){
  return $has(entity, this.world.developmentProgress) || $has(entity, this.world.task);
}
;
_.update_1 = function update_4(clock, entities){
  $triageEntitiesIntoBags(this, entities);
  $distributeEffortEvenlyAcrossFeaturesInDevelopment(this);
  $processCompletedFeatures(this);
  this.developmentBag._size = 0;
  this.developerBag._size = 0;
}
;
var Ledu_bsu_cybersec_core_systems_FeatureDevelopmentSystem_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'FeatureDevelopmentSystem', 785, Ltripleplay_entity_System_2_classLit);
function $nextFeatureNumber(this$static){
  this$static.nextFeatureNumber = 1;
  return this$static;
}

function FeatureGenerationSystem(world){
  System.call(this, world, ($clinit_SystemPriority() , MODEL_LEVEL).value_0);
  this.world = checkNotNull(world);
  this.featureFactory = ($clinit_FeatureFactory() , new FeatureFactory(world));
}

defineClass(784, 40, {}, FeatureGenerationSystem);
_.isInterested = function isInterested_4(entity){
  return $has(entity, this.world.developmentProgress);
}
;
_.update_1 = function update_5(clock, entities){
  var e;
  if (entities._size == 0) {
    e = $makeFeatureInDevelopment(this.featureFactory, this.nextFeatureNumber++);
    $set_10(this.world.goal, e.id_0, 20);
  }
}
;
_.nextFeatureNumber = 0;
var Ledu_bsu_cybersec_core_systems_FeatureGenerationSystem_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'FeatureGenerationSystem', 784, Ltripleplay_entity_System_2_classLit);
function $setEnabled_0(this$static, enabled){
  var t;
  this$static._enabled = enabled;
  this$static.enabled = enabled;
  enabled || (t = this$static.gameWorld.gameTime._value , t.previous != t.now_0 && this$static.gameWorld.gameTime.updateAndNotify(new GameTime(t.now_0, t.now_0), false) , undefined);
}

function GameTimeSystem(world){
  System.call(this, world, ($clinit_SystemPriority() , CLOCK_LEVEL).value_0);
  this.scale_0 = ($clinit_AbstractValue() , new Value(new Float(7200)));
  this.enabled = true;
  this.gameWorld = world;
}

defineClass(842, 40, {}, GameTimeSystem);
_.isInterested = function isInterested_5(entity){
  return true;
}
;
_.update_1 = function update_6(clock, entities){
  var elapsedGameTime;
  elapsedGameTime = round_int(clock.dt * this.scale_0._value.value_0 / $intern_2);
  $advanceGameTime(this.gameWorld, elapsedGameTime);
}
;
_.enabled = false;
var Ledu_bsu_cybersec_core_systems_GameTimeSystem_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'GameTimeSystem', 842, Ltripleplay_entity_System_2_classLit);
function LayerPositionSystem(world){
  System.call(this, world, ($clinit_SystemPriority() , UI_LEVEL).value_0);
  this.pointCache = new Point;
  this.world = checkNotNull(world);
}

defineClass(899, 40, {}, LayerPositionSystem);
_.isInterested = function isInterested_6(entity){
  return $has(entity, this.world.sprite) && $has(entity, this.world.position_0);
}
;
_.update_1 = function update_7(clock, entities){
  var i, id_0, layer, limit;
  for (i = 0 , limit = entities._size; i < limit; i++) {
    id_0 = entities._elems[i];
    layer = $get_13(this.world.sprite, id_0);
    $get_15(this.world.position_0, id_0, this.pointCache);
    $setTranslation_0(layer, this.pointCache);
  }
}
;
var Ledu_bsu_cybersec_core_systems_LayerPositionSystem_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'LayerPositionSystem', 899, Ltripleplay_entity_System_2_classLit);
function $updateSkills(this$static, id_0){
  var c, start_0, taskFlags, taskId, updated;
  taskId = $get_14(this$static.world.task, id_0);
  taskFlags = $get_14(this$static.world.taskFlags, taskId);
  c = $isSet(($clinit_TaskFlags() , DEVELOPMENT), taskFlags)?this$static.world.developmentSkill:$isSet(MAINTENANCE, taskFlags)?this$static.world.maintenanceSkill:null;
  if (c) {
    start_0 = c._blocks[~~(id_0 / 256)][id_0 % 256];
    updated = start_0 + this$static.elapsedHours * $intern_39;
    c._blocks[~~(id_0 / 256)][id_0 % 256] = updated;
  }
}

function LearningSystem(world){
  System.call(this, world, ($clinit_SystemPriority() , MODEL_LEVEL).value_0);
  this.world = checkNotNull(world);
}

defineClass(896, 40, {}, LearningSystem);
_.isInterested = function isInterested_7(entity){
  return $has(entity, this.world.task) && $has(entity, this.world.developmentSkill);
}
;
_.update_1 = function update_8(clock, entities){
  var i, id_0, limit;
  this.elapsedHours = $delta(this.world.gameTime._value) / 3600;
  for (i = 0 , limit = entities._size; i < limit; i++) {
    id_0 = entities._elems[i];
    $updateSkills(this, id_0);
  }
}
;
_.elapsedHours = 0;
var Ledu_bsu_cybersec_core_systems_LearningSystem_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'LearningSystem', 896, Ltripleplay_entity_System_2_classLit);
function TaskProgressSystem(world){
  System.call(this, world, ($clinit_SystemPriority() , MODEL_LEVEL).value_0);
  this.world = checkNotNull(world);
}

function updateName(name_0, hoursRemaining){
  return name_0.indexOf('(') != -1?$substring_0(name_0, 0, $indexOf_2(name_0, fromCodePoint(40)) + 1) + hoursRemaining + 'hr)':name_0 + ' (' + hoursRemaining + 'hr)';
}

defineClass(900, 40, {}, TaskProgressSystem);
_.isInterested = function isInterested_8(entity){
  return $has(entity, this.world.secondsRemaining);
}
;
_.update_1 = function update_9(clock, entities){
  var hoursRemaining, i, limit, newName, ownerId, taskId;
  for (i = 0 , limit = entities._size; i < limit; i++) {
    taskId = entities._elems[i];
    ownerId = $get_14(this.world.owner, taskId);
    if ($get_14(this.world.task, ownerId) == taskId) {
      $add_19(this.world.secondsRemaining, taskId, -$delta(this.world.gameTime._value));
      $get_14(this.world.secondsRemaining, taskId) <= 0 && $has($entity(this.world, taskId), this.world.onComplete) && $get_13(this.world.onComplete, taskId).run();
    }
    if ($has($entity(this.world, taskId), this.world.name_0)) {
      hoursRemaining = ~~($get_14(this.world.secondsRemaining, taskId) / 3600) + 1;
      newName = updateName($get_13(this.world.name_0, taskId), hoursRemaining);
      $set_9(this.world.name_0, taskId, newName);
    }
  }
}
;
var Ledu_bsu_cybersec_core_systems_TaskProgressSystem_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'TaskProgressSystem', 900, Ltripleplay_entity_System_2_classLit);
function UpdatingSystem(world){
  System.call(this, world, ($clinit_SystemPriority() , MODEL_LEVEL).value_0);
  this.gameWorld = checkNotNull(world);
}

defineClass(893, 40, {}, UpdatingSystem);
_.isInterested = function isInterested_9(entity){
  return $has(entity, this.gameWorld.onUpdate);
}
;
_.update_1 = function update_10(clock, entities){
  var i, id_0, limit, updatable;
  for (i = 0 , limit = entities._size; i < limit; i++) {
    id_0 = entities._elems[i];
    updatable = $get_13(this.gameWorld.onUpdate, id_0);
    updatable.update_0(clock);
  }
}
;
var Ledu_bsu_cybersec_core_systems_UpdatingSystem_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'UpdatingSystem', 893, Ltripleplay_entity_System_2_classLit);
function UserAttritionSystem(world){
  System.call(this, world, ($clinit_SystemPriority() , MODEL_LEVEL).value_0);
  this.world = checkNotNull(world);
}

defineClass(898, 40, {}, UserAttritionSystem);
_.isInterested = function isInterested_10(entity){
  return $has(entity, this.world.userAttrition);
}
;
_.update_1 = function update_11(clock, entities){
  var attrition, i, id_0, initialUsers, limit, lostUsers, totalUsers;
  for (i = 0 , limit = entities._size; i < limit; i++) {
    id_0 = entities._elems[i];
    attrition = $get_12(this.world.userAttrition, id_0) * $delta(this.world.gameTime._value) / 3600;
    initialUsers = this.world.users._value.value_0;
    lostUsers = initialUsers * attrition;
    totalUsers = 0 > initialUsers - lostUsers?0:initialUsers - lostUsers;
    $add_18(this.world.lostUsers, id_0, lostUsers);
    this.world.users.updateAndNotify(new Float(totalUsers), false);
  }
}
;
var Ledu_bsu_cybersec_core_systems_UserAttritionSystem_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'UserAttritionSystem', 898, Ltripleplay_entity_System_2_classLit);
function $isActiveUserGeneratingEntity(this$static, entity){
  return $has(entity, this$static.world.usersPerHour) && $get_14(this$static.world.usersPerHourState, entity.id_0) == ($clinit_UsersPerHourState() , ACTIVE).value_0;
}

function UserGenerationSystem(world){
  System.call(this, world, ($clinit_SystemPriority() , MODEL_LEVEL).value_0);
  this.userGenerationEnabled = ($clinit_AbstractValue() , new Value(($clinit_Boolean() , $clinit_Boolean() , TRUE)));
  this.world = world;
}

defineClass(850, 40, {}, UserGenerationSystem);
_.isInterested = function isInterested_11(entity){
  return $has(entity, this.world.usersPerHour) && $has(entity, this.world.usersPerHourState);
}
;
_.update_1 = function update_12(clock, entities){
  var additionalUsers, delta, i, id_0, limit, usersPerHour;
  delta = $delta(this.world.gameTime._value);
  for (i = 0 , limit = entities._size; i < limit; i++) {
    id_0 = entities._elems[i];
    if ($get_14(this.world.usersPerHourState, id_0) == ($clinit_UsersPerHourState() , ACTIVE).value_0) {
      usersPerHour = $get_12(this.world.usersPerHour, id_0);
      additionalUsers = 0;
      this.userGenerationEnabled._value.value_0 && (additionalUsers = usersPerHour * delta / 3600);
      this.world.users.updateAndNotify(new Float(this.world.users._value.value_0 + additionalUsers), false);
    }
  }
}
;
var Ledu_bsu_cybersec_core_systems_UserGenerationSystem_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'UserGenerationSystem', 850, Ltripleplay_entity_System_2_classLit);
function $changeTo(this$static, state){
  this$static.state = state;
  this$static.state.onEnter();
}

function WorkHoursSystem(world, gameTimeSystem){
  System.call(this, world, ($clinit_SystemPriority() , MODEL_LEVEL).value_0);
  this.previousTasks = ($clinit_Maps() , new HashMap);
  this.isWorkHours = ($clinit_AbstractValue() , new Value(($clinit_Boolean() , $clinit_Boolean() , TRUE)));
  this.IN_WORK_HOURS = new WorkHoursSystem$1(this);
  this.OFF_WORK_HOURS = new WorkHoursSystem$2(this);
  this.state = this.IN_WORK_HOURS;
  this.world = checkNotNull(world);
  this.gameTimeSystem = checkNotNull(gameTimeSystem);
}

defineClass(851, 40, {}, WorkHoursSystem);
_.isInterested = function isInterested_12(entity){
  return $has(entity, this.world.task);
}
;
_.update_1 = function update_13(clock, entities){
  this.state.update_2();
}
;
var Ledu_bsu_cybersec_core_systems_WorkHoursSystem_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'WorkHoursSystem', 851, Ltripleplay_entity_System_2_classLit);
function $setWorkersToTheirPreviousTasks(this$static){
  var i, id_0, limit, previousTask;
  for (i = 0 , limit = this$static.this$01._active._size; i < limit; i++) {
    id_0 = $entityId(this$static.this$01, i);
    previousTask = this$static.this$01.previousTasks.get_1(valueOf(id_0));
    !!previousTask && $set_10(this$static.this$01.world.task, id_0, previousTask.value_0);
  }
}

function WorkHoursSystem$1(this$0){
  this.this$01 = this$0;
}

defineClass(852, 1, {}, WorkHoursSystem$1);
_.onEnter = function onEnter(){
  this.this$01.isWorkHours.updateAndNotify(($clinit_Boolean() , $clinit_Boolean() , TRUE), false);
  if (this.this$01.previousTasks.size_1() != 0) {
    $setWorkersToTheirPreviousTasks(this);
    this.this$01.previousTasks.clear_0();
  }
  this.this$01.gameTimeSystem.scale_0.updateAndNotify(new Float(this.this$01.gameTimeSystem.scale_0._value.value_0 / 2.5), false);
}
;
_.update_2 = function update_14(){
  $apply_0(valueOf(this.this$01.world.gameTime._value.now_0)) || $changeTo(this.this$01, this.this$01.OFF_WORK_HOURS);
}
;
var Ledu_bsu_cybersec_core_systems_WorkHoursSystem$1_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'WorkHoursSystem/1', 852, Ljava_lang_Object_2_classLit);
function WorkHoursSystem$2(this$0){
  this.this$01 = this$0;
}

defineClass(853, 1, {}, WorkHoursSystem$2);
_.onEnter = function onEnter_0(){
  var i, id_0, limit, taskId;
  this.this$01.isWorkHours.updateAndNotify(($clinit_Boolean() , $clinit_Boolean() , FALSE), false);
  for (i = 0 , limit = this.this$01._active._size; i < limit; i++) {
    id_0 = $entityId(this.this$01, i);
    taskId = $get_14(this.this$01.world.task, id_0);
    if ($isSet(($clinit_TaskFlags() , BOUND_TO_WORKDAY), $get_14(this.this$01.world.taskFlags, taskId))) {
      this.this$01.previousTasks.put(valueOf(id_0), valueOf(taskId));
      $set_10(this.this$01.world.task, id_0, this.this$01.world.notAtWorkTaskId);
    }
  }
  this.this$01.gameTimeSystem.scale_0.updateAndNotify(new Float(this.this$01.gameTimeSystem.scale_0._value.value_0 * 2.5), false);
}
;
_.update_2 = function update_15(){
  $apply_0(valueOf(this.this$01.world.gameTime._value.now_0)) && $changeTo(this.this$01, this.this$01.IN_WORK_HOURS);
}
;
var Ledu_bsu_cybersec_core_systems_WorkHoursSystem$2_2_classLit = createForClass('edu.bsu.cybersec.core.systems', 'WorkHoursSystem/2', 853, Ljava_lang_Object_2_classLit);
function $createBoundingBoxWithin(this$static, parent_0){
  var childHeight, childWidth, parentHeight, parentWidth, viewAspectRatio, xDiff, yDiff;
  parentWidth = parent_0.width_0;
  parentHeight = parent_0.height_0;
  viewAspectRatio = parentWidth / parentHeight;
  if (this$static.desiredAspectRatio < viewAspectRatio) {
    childWidth = this$static.desiredAspectRatio * parentHeight;
    xDiff = parentWidth - childWidth;
    return new Rectangle_0(xDiff / 2, 0, childWidth, parentHeight);
  }
   else {
    childHeight = parentWidth / this$static.desiredAspectRatio;
    yDiff = parentHeight - childHeight;
    return new Rectangle_0(0, yDiff / 2, parentWidth, childHeight);
  }
}

function AspectRatioTool(){
  checkArgument_0(true, 'Aspect ratio must be positive');
  this.desiredAspectRatio = 0.5625;
}

defineClass(443, 1, {}, AspectRatioTool);
_.desiredAspectRatio = 0;
var Ledu_bsu_cybersec_core_ui_AspectRatioTool_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'AspectRatioTool', 443, Ljava_lang_Object_2_classLit);
function AxisLayoutWeightAnimationValue(element){
  this.element = checkNotNull(element);
}

defineClass(209, 1, {}, AxisLayoutWeightAnimationValue);
_.initial = function initial(){
  return 1;
}
;
_.set_1 = function set_1(value_0){
  var constraint;
  constraint = ($clinit_AxisLayout() , new AxisLayout$Constraint(true, value_0));
  this.element.setConstraint(constraint);
}
;
var Ledu_bsu_cybersec_core_ui_AxisLayoutWeightAnimationValue_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'AxisLayoutWeightAnimationValue', 209, Ljava_lang_Object_2_classLit);
function $imageGroup(this$static){
  var bounds, canvas, bossScale, bossScaledWidth;
  bounds = game_0.bounds;
  canvas = $createCanvas(game_0.plat.graphics, bounds.bounds.width_0, bounds.bounds.height_0 / 2);
  bossScale = canvas.height_0 / $height(this$static.boss);
  bossScaledWidth = $width(this$static.boss) * bossScale * $intern_55;
  $draw(canvas, this$static.boss, (canvas.width_0 - bossScaledWidth) / 2, 0, bossScaledWidth, canvas.height_0 * $intern_55);
  $draw(canvas, this$static.desk, 0, canvas.height_0 * $intern_40, canvas.width_0, canvas.height_0 * 0.5);
  return new Label_2(new Icons$1(canvas.image));
}

function BossAtDeskLabelFactory(boss){
  this.desk = $getImage(game_0.assets, ($clinit_GameAssets$ImageKey() , DESK));
  this.boss = checkNotNull(boss);
}

defineClass(357, 1, {}, BossAtDeskLabelFactory);
var Ledu_bsu_cybersec_core_ui_BossAtDeskLabelFactory_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'BossAtDeskLabelFactory', 357, Ljava_lang_Object_2_classLit);
function SizableWidget(width_0, height){
  Widget.call(this);
  this.preferredSize = new DimensionValue;
  $updateAndNotify(this.preferredSize, new Dimension_0(width_0, height), false);
  $addConnection(this.preferredSize, new Element$6(this, false));
}

defineClass(201, 26, $intern_49);
_.createLayoutData = function createLayoutData_1(hintX, hintY){
  return new Element$SizableLayoutData_0(this, this.preferredSize._value);
}
;
var Ltripleplay_ui_SizableWidget_2_classLit = createForClass('tripleplay.ui', 'SizableWidget', 201, Ltripleplay_ui_Widget_2_classLit);
function CompanyStatusGraph(world){
  var textFormat, textLayout, canvas;
  SizableWidget.call(this, 0, 0);
  this.data_0 = new SizeConstrainedSmoothingList;
  $add_13(this.layer, new CompanyStatusGraph$1(this, world));
  $updateAndNotify(this.preferredSize, new Dimension_0(100, 100), false);
  $addConnection(world.gameTime, new CompanyStatusGraph$2(this, world));
  textFormat = (new TextFormat).withFont((checkState_0(!!instance_1, 'Not yet initialized') , instance_1).REGULAR);
  textLayout = $layoutText(game_0.plat.graphics, textFormat);
  canvas = $createCanvas_0(game_0.plat.graphics, textLayout.size_0);
  $fillText_0(($setFillStyleWeb(canvas.ctx, cssColorString($intern_56)) , canvas), textLayout, 0, 0);
  $addAt(this.layer, $setRotation(new ImageLayer($toTexture(canvas, ($clinit_Texture$Config() , DEFAULT_0)))), textLayout.size_0.height_0 * $intern_42, textLayout.size_0.width_0 * 1.5);
}

defineClass(912, 201, $intern_49, CompanyStatusGraph);
_.getStyleClass = function getStyleClass_2(){
  return Ledu_bsu_cybersec_core_ui_CompanyStatusGraph_2_classLit;
}
;
_.max_0 = 0;
var Ledu_bsu_cybersec_core_ui_CompanyStatusGraph_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'CompanyStatusGraph', 912, Ltripleplay_ui_SizableWidget_2_classLit);
function $close(this$static){
  !!this$static.parent_0 && $remove_22(this$static.parent_0, this$static);
  $setState(this$static, ($clinit_Layer$State() , DISPOSED));
}

function $events(this$static){
  !this$static.events && (this$static.events = new Layer$1(this$static));
  return this$static.events;
}

function $hitTest(this$static, p){
  return !this$static.hitTester?$hitTestDefault(this$static, p):this$static.hitTester.hitTest(this$static, p);
}

function $isSet_1(this$static, flag){
  return (this$static.flags & flag.bitmask) != 0;
}

function $onAdd(this$static){
  if (maskUndefined(this$static.state._value) === maskUndefined(($clinit_Layer$State() , DISPOSED)))
    throw new IllegalStateException_0('Illegal to use disposed layer: ' + this$static);
  $setState(this$static, ADDED);
}

function $originX(this$static){
  var width_0;
  if ($isSet_1(this$static, ($clinit_Layer$Flag() , ODIRTY))) {
    width_0 = this$static.width_1();
    if (width_0 > 0) {
      this$static.originX = 0;
      this$static.originY = (this$static.height_1() , 0);
      $setFlag(this$static, ODIRTY, false);
    }
  }
  return this$static.originX;
}

function $originY(this$static){
  var height;
  if ($isSet_1(this$static, ($clinit_Layer$Flag() , ODIRTY))) {
    height = this$static.height_1();
    if (height > 0) {
      this$static.originX = (this$static.width_1() , 0);
      this$static.originY = 0;
      $setFlag(this$static, ODIRTY, false);
    }
  }
  return this$static.originY;
}

function $paint_1(this$static, surf){
  var otint;
  if (!$isSet_1(this$static, ($clinit_Layer$Flag() , VISIBLE_1)))
    return;
  otint = $combineTint(surf, this$static.tint);
  $concatenate(surf, $transform(this$static), $originX(this$static), $originY(this$static));
  try {
    this$static.paintImpl(surf);
  }
   finally {
    surf.tint = otint;
  }
}

function $setAlpha(this$static, alpha_0){
  var ialpha;
  this$static.alpha_0 = alpha_0;
  ialpha = round_int(255 * (alpha_0 < 0?0:alpha_0 > 1?1:alpha_0));
  this$static.tint = ialpha << 24 | this$static.tint & $intern_57;
  return this$static;
}

function $setDepth(this$static, depth){
  var oldDepth;
  oldDepth = this$static.depth;
  if (depth != oldDepth) {
    this$static.depth = depth;
    !!this$static.parent_0 && $depthChanged(this$static.parent_0, this$static, oldDepth);
  }
  return this$static;
}

function $setFlag(this$static, flag, active){
  active?(this$static.flags |= flag.bitmask):(this$static.flags &= ~flag.bitmask);
}

function $setHitTester(this$static, tester){
  this$static.hitTester = tester;
  return this$static;
}

function $setInteractive(this$static, interactive){
  if ($isSet_1(this$static, ($clinit_Layer$Flag() , INTERACTIVE)) != interactive) {
    interactive && !!this$static.parent_0 && $setInteractive(this$static.parent_0, true);
    $setFlag(this$static, INTERACTIVE, interactive);
  }
  return this$static;
}

function $setOrigin(this$static, x_0){
  this$static.originX = x_0;
  this$static.originY = 0;
  this$static.origin = ($clinit_Layer$Origin() , FIXED_0);
  $setFlag(this$static, ($clinit_Layer$Flag() , ODIRTY), false);
  return this$static;
}

function $setRotation(this$static){
  if (this$static.rotation != $intern_58) {
    this$static.rotation = $intern_58;
    $setFlag(this$static, ($clinit_Layer$Flag() , XFDIRTY), true);
  }
  return this$static;
}

function $setScale(this$static, scale){
  return $setScale_0(this$static, scale, scale);
}

function $setScale_0(this$static, sx, sy){
  if (sx != this$static.scaleX || sy != this$static.scaleY) {
    this$static.scaleX = sx;
    this$static.scaleY = sy;
    $setFlag(this$static, ($clinit_Layer$Flag() , XFDIRTY), true);
  }
  return this$static;
}

function $setState(this$static, state){
  this$static.state.updateAndNotify(state, false);
}

function $setTranslation(this$static, x_0, y_0){
  $setTranslation_1(this$static.transform, x_0, y_0);
  return this$static;
}

function $setTranslation_0(this$static, trans){
  return $setTranslation(this$static, trans.x_0, trans.y_0);
}

function $setVisible(this$static, visible){
  $setFlag(this$static, ($clinit_Layer$Flag() , VISIBLE_1), visible);
  return this$static;
}

function $transform(this$static){
  var cosa, m00, m01, m10, m11, sina, tx, ty;
  if ($isSet_1(this$static, ($clinit_Layer$Flag() , XFDIRTY))) {
    sina = sin_0(this$static.rotation);
    cosa = cos_0(this$static.rotation);
    m00 = cosa * this$static.scaleX;
    m01 = sina * this$static.scaleY;
    m10 = -sina * this$static.scaleX;
    m11 = cosa * this$static.scaleY;
    tx = this$static.transform.tx;
    ty = this$static.transform.ty;
    $setTransform(this$static.transform, m00, m01, m10, m11, tx, ty);
    $setFlag(this$static, XFDIRTY, false);
  }
  return this$static.transform;
}

function Layer(){
  this.state = ($clinit_AbstractValue() , new Value(($clinit_Layer$State() , REMOVED)));
  this.transform = new AffineTransform;
  this.origin = ($clinit_Layer$Origin() , FIXED_0);
  $setFlag(this, ($clinit_Layer$Flag() , VISIBLE_1), true);
}

defineClass(21, 1, $intern_59);
_.close_0 = function close_0(){
  $close(this);
}
;
_.deactivateOnNoListeners = function deactivateOnNoListeners(){
  return true;
}
;
_.height_1 = function height_0(){
  return 0;
}
;
_.hitTestDefault = function hitTestDefault(p){
  return p.x_0 >= 0 && p.y_0 >= 0 && p.x_0 < this.width_1() && p.y_0 < this.height_1()?this:null;
}
;
_.name_1 = function name_2(){
  if (this.name_0 == null) {
    this.name_0 = $getName(this.___clazz$);
    this.name_0 = $substring(this.name_0, this.name_0.lastIndexOf('.') + 1);
  }
  return this.name_0;
}
;
_.onAdd = function onAdd(){
  $onAdd(this);
}
;
_.onRemove = function onRemove(){
  $setState(this, ($clinit_Layer$State() , REMOVED));
}
;
_.toString$ = function toString_28(){
  var buf;
  buf = new StringBuilder_1(this.name_1());
  $append_7($append_4((buf.string += ' @ ' , buf), getHashCode(this)), ' [');
  this.toString_1(buf);
  return (buf.string += ']' , buf).string;
}
;
_.toString_1 = function toString_29(buf){
  $append_6((buf.string += 'tx=' , buf), $transform(this));
  !!this.hitTester && $append_6((buf.string += ', hitTester=' , buf), this.hitTester);
}
;
_.width_1 = function width_1(){
  return 0;
}
;
_.alpha_0 = 1;
_.depth = 0;
_.flags = 0;
_.originX = 0;
_.originY = 0;
_.rotation = 0;
_.scaleX = 1;
_.scaleY = 1;
_.tint = -1;
var Lplayn_scene_Layer_2_classLit = createForClass('playn.scene', 'Layer', 21, Ljava_lang_Object_2_classLit);
function $drawData(this$static, surface){
  var i, limit, minXPerUnit, newX, newY, prevX, prevY, xPerUnit, yPerUnit;
  minXPerUnit = this$static.this$01._size.width_0 / 100;
  surface.fillColor = $intern_56;
  yPerUnit = this$static.this$01._size.height_0 / this$static.this$01.max_0;
  xPerUnit = min_0(minXPerUnit, this$static.this$01._size.width_0 / (this$static.this$01.data_0.size_0 - 1));
  prevX = 0;
  prevY = yPerUnit * this$static.this$01.data_0.list[0];
  for (i = 1 , limit = this$static.this$01.data_0.size_0; i < limit; i++) {
    newX = i * xPerUnit;
    newY = $get_5(this$static.this$01.data_0, i) * yPerUnit;
    $drawLine(surface, prevX, prevY, newX, newY, 1);
    prevX = newX;
    prevY = newY;
  }
  $drawGoalLine(this$static, surface, yPerUnit);
}

function $drawGoalLine(this$static, surface, yPerUnit){
  var goal, goalY;
  goal = this$static.val$world2.company._value.goal.minimumUsers;
  goalY = goal * yPerUnit;
  if (goalY < this$static.this$01._size.height_0) {
    surface.fillColor = $intern_43;
    $drawLine(surface, 0, goal * yPerUnit, this$static.this$01._size.width_0, goal * yPerUnit, 1);
  }
}

function CompanyStatusGraph$1(this$0, val$world){
  this.this$01 = this$0;
  this.val$world2 = val$world;
  Layer.call(this);
}

defineClass(913, 21, $intern_59, CompanyStatusGraph$1);
_.paintImpl = function paintImpl(surface){
  var borderSize, twiceBorderSize;
  $transform_0(surface, this.this$01._size.height_0);
  borderSize = this.this$01._size.width_0 * $intern_34;
  twiceBorderSize = borderSize * 2;
  surface.fillColor = $intern_56;
  $fillRect_0(surface, 0, 0, this.this$01._size.width_0, this.this$01._size.height_0);
  surface.fillColor = -1;
  $fillRect_0(surface, borderSize, borderSize, this.this$01._size.width_0 - twiceBorderSize, this.this$01._size.height_0 - twiceBorderSize);
  this.this$01.data_0.size_0 > 0 && $drawData(this, surface);
}
;
var Ledu_bsu_cybersec_core_ui_CompanyStatusGraph$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'CompanyStatusGraph/1', 913, Lplayn_scene_Layer_2_classLit);
function $addDatum(this$static, datum){
  this$static.this$01.data_0.size_0 == 0 && (this$static.this$01.max_0 = datum * 3);
  $add_6(this$static.this$01.data_0, datum);
  this$static.this$01.max_0 = max_2(this$static.this$01.max_0, datum);
}

function $onChange_0(this$static, value_0){
  if (value_0.now_0 - this$static.lastUpdate > 600) {
    $addDatum(this$static, round_int(this$static.val$world2.users._value.value_0));
    this$static.lastUpdate = value_0.now_0;
  }
}

function CompanyStatusGraph$2(this$0, val$world){
  this.this$01 = this$0;
  this.val$world2 = val$world;
}

defineClass(914, 1, {}, CompanyStatusGraph$2);
_.onChange = function onChange_1(value_0, oldValue){
  $onChange_0(this, value_0, oldValue);
}
;
_.lastUpdate = 0;
var Ledu_bsu_cybersec_core_ui_CompanyStatusGraph$2_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'CompanyStatusGraph/2', 914, Ljava_lang_Object_2_classLit);
function $clinit_InteractionAreaGroup(){
  $clinit_InteractionAreaGroup = emptyMethod;
  COMPANY_LOGO = $getTile(game_0.assets, ($clinit_GameAssets$TileKey() , COMPANY_LOGO_WITH_ALPHA));
}

function InteractionAreaGroup(layout){
  var b;
  $clinit_InteractionAreaGroup();
  Group.call(this, layout);
  this.needsAttention = ($clinit_AbstractValue() , new Value(($clinit_Boolean() , $clinit_Boolean() , FALSE)));
  b = new InteractionAreaGroup$1;
  b = this.applyInsets(b);
  $addStyles_0(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , BACKGROUND), b)]));
}

defineClass(264, 20, $intern_48);
_.applyInsets = function applyInsets(b){
  return b;
}
;
_.invalidate = function invalidate_0(){
  $invalidate(this);
}
;
var COMPANY_LOGO;
var Ledu_bsu_cybersec_core_ui_InteractionAreaGroup_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'InteractionAreaGroup', 264, Ltripleplay_ui_Group_2_classLit);
function $clinit_CompanyStatusGroup(){
  $clinit_CompanyStatusGroup = emptyMethod;
  $clinit_InteractionAreaGroup();
  HGAP_BETWEEN_COLUMNS = $percentOfHeight(game_0.bounds, $intern_44);
  TABLE_INSETS = $percentOfHeight(game_0.bounds, $intern_46);
}

function CompanyStatusGroup(world){
  var summaryTable;
  $clinit_CompanyStatusGroup();
  InteractionAreaGroup.call(this, $offPolicy(($clinit_AxisLayout() , new AxisLayout$Vertical), ($clinit_AxisLayout$Policy() , STRETCH)));
  this.usersPerHourLabel = new Label;
  this.gameWorld = checkNotNull(world);
  new CompanyStatusGroup$UsersPerHourLabelSystem(this);
  summaryTable = $addStyles_0(new Group(new TableLayout(initValues(getClassLiteralForArray(Ltripleplay_ui_layout_TableLayout$Column_2_classLit, 1), $intern_1, 54, 0, [new CompanyStatusGroup$ExposedColumn(($clinit_Style$HAlign() , LEFT_2), true, 0), new CompanyStatusGroup$ExposedColumn(RIGHT_2, false, 0), new CompanyStatusGroup$ExposedColumn(CENTER_1, false, HGAP_BETWEEN_COLUMNS), new CompanyStatusGroup$ExposedColumn(LEFT_2, true, 0), new CompanyStatusGroup$ExposedColumn(RIGHT_2, false, 0)]))), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , BACKGROUND), $inset_0(new BlankBackground, TABLE_INSETS, TABLE_INSETS))]));
  $add_8(summaryTable, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$addStyles_0(new Label_0('Users per hour'), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [HALIGN.left_0])), this.usersPerHourLabel, new Shim(0, 0), $addStyles_0(new Label_0('Days remaining'), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [HALIGN.left_0])), new CompanyStatusGroup$DaysRemainingLabel(this.gameWorld), $addStyles_0(new Label_0('Estimated exposure'), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [HALIGN.left_0])), new CompanyStatusGroup$EstimatedExposureLabel(this.gameWorld), new Shim(0, 0), $addStyles_0(new Label_0('Progress toward goal'), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [HALIGN.left_0])), new CompanyStatusGroup$ProgressTowardGoalLabel(this.gameWorld)]));
  $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [summaryTable, $add_8(new Group($offPolicy(new AxisLayout$Horizontal, STRETCH)), initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$setConstraint(new Shim(0, 0), new AxisLayout$Constraint(true, 1)), $setConstraint(new CompanyStatusGraph(this.gameWorld), new AxisLayout$Constraint(true, 14)), $setConstraint(new Shim(0, 0), new AxisLayout$Constraint(true, 1))])).setConstraint((null , UNIFORM_STRETCHED))]));
}

defineClass(876, 264, $intern_48, CompanyStatusGroup);
var HGAP_BETWEEN_COLUMNS = 0, TABLE_INSETS = 0;
var Ledu_bsu_cybersec_core_ui_CompanyStatusGroup_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'CompanyStatusGroup', 876, Ledu_bsu_cybersec_core_ui_InteractionAreaGroup_2_classLit);
function Label(){
  Label_1.call(this, null, null);
}

function Label_0(text_0){
  Label_1.call(this, text_0, null);
}

function Label_1(text_0, icon){
  TextWidget.call(this);
  this.text_0 = ($clinit_AbstractValue() , new Value(null));
  this.icon = new Value(null);
  this.text_0.updateAndNotify(text_0, false);
  $addConnection(this.text_0, new Element$6(this, true));
  $addConnection(this.icon, new TextWidget$1(this));
  this.icon.updateAndNotify(icon, false);
}

function Label_2(icon){
  Label_1.call(this, null, icon);
}

defineClass(11, 28, $intern_50, Label, Label_0, Label_1, Label_2);
_.getStyleClass = function getStyleClass_3(){
  return Ltripleplay_ui_Label_2_classLit;
}
;
_.icon_0 = function icon_2(){
  return this.icon._value;
}
;
_.text_1 = function text_41(){
  return this.text_0._value;
}
;
_.toString$ = function toString_30(){
  return 'Label(' + this.text_0._value + ')';
}
;
var Ltripleplay_ui_Label_2_classLit = createForClass('tripleplay.ui', 'Label', 11, Ltripleplay_ui_TextWidget_2_classLit);
function CompanyStatusGroup$DaysRemainingLabel(world){
  Label.call(this);
  $addConnection(world.gameTime, new CompanyStatusGroup$DaysRemainingLabel$1(this, world));
}

defineClass(879, 11, $intern_50, CompanyStatusGroup$DaysRemainingLabel);
var Ledu_bsu_cybersec_core_ui_CompanyStatusGroup$DaysRemainingLabel_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'CompanyStatusGroup/DaysRemainingLabel', 879, Ltripleplay_ui_Label_2_classLit);
function $onChange_1(this$static, value_0){
  var daysLeft, secondsLeft;
  secondsLeft = this$static.val$world2.gameEnd._value.value_0 - value_0.now_0;
  daysLeft = ~~(secondsLeft / 86400) + 1;
  this$static.this$11.text_0.updateAndNotify('' + daysLeft, false);
}

function CompanyStatusGroup$DaysRemainingLabel$1(this$1, val$world){
  this.this$11 = this$1;
  this.val$world2 = val$world;
}

defineClass(882, 1, {}, CompanyStatusGroup$DaysRemainingLabel$1);
_.onChange = function onChange_2(value_0, oldValue){
  $onChange_1(this, value_0, oldValue);
}
;
var Ledu_bsu_cybersec_core_ui_CompanyStatusGroup$DaysRemainingLabel$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'CompanyStatusGroup/DaysRemainingLabel/1', 882, Ljava_lang_Object_2_classLit);
function CompanyStatusGroup$EstimatedExposureLabel(world){
  Label_0.call(this, '' + world.exposure._value);
  this.isPassColor = true;
  $addStyles_0(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , COLOR), valueOf(-1))]));
  $addConnection(world.exposure, new CompanyStatusGroup$EstimatedExposureLabel$1(this, world));
}

defineClass(878, 11, $intern_50, CompanyStatusGroup$EstimatedExposureLabel);
_.isPassColor = false;
var Ledu_bsu_cybersec_core_ui_CompanyStatusGroup$EstimatedExposureLabel_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'CompanyStatusGroup/EstimatedExposureLabel', 878, Ltripleplay_ui_Label_2_classLit);
function $onChange_2(this$static, value_0){
  this$static.this$11.text_0.updateAndNotify($makeTruncatedString(this$static.truncator, value_0.value_0 * 100) + '%', false);
  if ($isAcceptableExposure(this$static.val$world2.company._value.goal, this$static.val$world2.exposure._value.value_0) && !this$static.this$11.isPassColor) {
    $addStyles_0(this$static.this$11, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , COLOR), valueOf(-1))]));
    this$static.this$11.isPassColor = true;
  }
   else if (!$isAcceptableExposure(this$static.val$world2.company._value.goal, this$static.val$world2.exposure._value.value_0) && this$static.this$11.isPassColor) {
    $addStyles_0(this$static.this$11, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , COLOR), valueOf(-65536))]));
    this$static.this$11.isPassColor = false;
  }
}

function CompanyStatusGroup$EstimatedExposureLabel$1(this$1, val$world){
  this.this$11 = this$1;
  this.val$world2 = val$world;
  this.truncator = new DecimalTruncator(1);
}

defineClass(881, 1, {}, CompanyStatusGroup$EstimatedExposureLabel$1);
_.onChange = function onChange_3(value_0, oldValue){
  $onChange_2(this, value_0, oldValue);
}
;
var Ledu_bsu_cybersec_core_ui_CompanyStatusGroup$EstimatedExposureLabel$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'CompanyStatusGroup/EstimatedExposureLabel/1', 881, Ljava_lang_Object_2_classLit);
function CompanyStatusGroup$ExposedColumn(halign, stretch, minWidth){
  TableLayout$Column.call(this, halign, stretch, 1, minWidth);
}

defineClass(181, 54, $intern_52, CompanyStatusGroup$ExposedColumn);
var Ledu_bsu_cybersec_core_ui_CompanyStatusGroup$ExposedColumn_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'CompanyStatusGroup/ExposedColumn', 181, Ltripleplay_ui_layout_TableLayout$Column_2_classLit);
function CompanyStatusGroup$ProgressTowardGoalLabel(world){
  Label.call(this);
  this.metGoal = false;
  $addStyles_0(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , COLOR), valueOf(-65536))]));
  $addConnection(world.users, new CompanyStatusGroup$ProgressTowardGoalLabel$1(this, world));
}

defineClass(880, 11, $intern_50, CompanyStatusGroup$ProgressTowardGoalLabel);
_.metGoal = false;
var Ledu_bsu_cybersec_core_ui_CompanyStatusGroup$ProgressTowardGoalLabel_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'CompanyStatusGroup/ProgressTowardGoalLabel', 880, Ltripleplay_ui_Label_2_classLit);
function $onEmit_5(this$static, users){
  var progress;
  progress = users.value_0 / this$static.val$world2.company._value.goal.minimumUsers;
  this$static.this$11.text_0.updateAndNotify($makeTruncatedString(this$static.truncator, progress * 100) + '%', false);
  if (progress >= 1 && !this$static.this$11.metGoal) {
    $addStyles_0(this$static.this$11, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , COLOR), valueOf(-1))]));
    this$static.this$11.metGoal = true;
  }
   else if (progress < 1 && this$static.this$11.metGoal) {
    $addStyles_0(this$static.this$11, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , COLOR), valueOf(-65536))]));
    this$static.this$11.metGoal = false;
  }
}

function CompanyStatusGroup$ProgressTowardGoalLabel$1(this$1, val$world){
  this.this$11 = this$1;
  this.val$world2 = val$world;
  this.truncator = new DecimalTruncator(1);
}

defineClass(883, 953, {}, CompanyStatusGroup$ProgressTowardGoalLabel$1);
_.onEmit = function onEmit_6(users){
  $onEmit_5(this, users);
}
;
var Ledu_bsu_cybersec_core_ui_CompanyStatusGroup$ProgressTowardGoalLabel$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'CompanyStatusGroup/ProgressTowardGoalLabel/1', 883, Lreact_Slot_2_classLit);
function $sumOfUsersPerHour(this$static, entities){
  var i, limit, sum;
  sum = 0;
  for (i = 0 , limit = entities._size; i < limit; i++) {
    sum += $get_12(this$static.this$01.gameWorld.usersPerHour, entities._elems[i]);
  }
  return sum;
}

function CompanyStatusGroup$UsersPerHourLabelSystem(this$0){
  this.this$01 = this$0;
  System.call(this, this$0.gameWorld, ($clinit_SystemPriority() , UI_LEVEL).value_0);
  this.truncator = new DecimalTruncator(0);
}

defineClass(877, 40, {}, CompanyStatusGroup$UsersPerHourLabelSystem);
_.isInterested = function isInterested_13(entity){
  return $isActiveUserGeneratingEntity(this.this$01.gameWorld.userGenerationSystem, entity);
}
;
_.update_1 = function update_16(clock, entities){
  var sum, truncatedUsersPerHour;
  sum = $sumOfUsersPerHour(this, entities);
  truncatedUsersPerHour = $makeTruncatedString(this.truncator, sum);
  this.this$01.usersPerHourLabel.text_0.updateAndNotify(truncatedUsersPerHour, false);
}
;
var Ledu_bsu_cybersec_core_ui_CompanyStatusGroup$UsersPerHourLabelSystem_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'CompanyStatusGroup/UsersPerHourLabelSystem', 877, Ltripleplay_entity_System_2_classLit);
function $clinit_CreditScreen(){
  $clinit_CreditScreen = emptyMethod;
  CREDITS = initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['Game Design and Development:', 'Paul Gestwicki and Kaleb Stumbaugh', ' ', 'Visuals:', 'Coy Yuan', ' ', 'Music:', 'Chipper Doodle and Pamgaea', 'by Kevin MacLeod (incompetech.com)', 'Licensed under Creative Commons: By Attribution 3.0', 'http://creativecommons.org/licenses/by/3.0/']);
}

function $createContentArea(this$static){
  var group, s, s$array, s$index, s$max;
  group = new Group(($clinit_AxisLayout() , new AxisLayout$Vertical));
  $add_8(group, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [new Label_2(new Icons$1($getImage(game_0.assets, ($clinit_GameAssets$ImageKey() , LOGO))))]));
  for (s$array = CREDITS , s$index = 0 , s$max = s$array.length; s$index < s$max; ++s$index) {
    s = s$array[s$index];
    $add_8(group, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$setStyles_0(new Label_0(s), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , COLOR), valueOf(-1)), TEXT_WRAP.on]))]));
  }
  $add_8(group, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [new Label_0(' ')]));
  $add_8(group, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$onClick(new Button_0('OK'), new CreditScreen$1(this$static))]));
  return group;
}

function CreditScreen(screenStack){
  $clinit_CreditScreen();
  ScreenStack$UIScreen.call(this, game_0.plat);
  this.creditScreen = this;
  this.screenStack = screenStack;
}

defineClass(815, 93, {}, CreditScreen);
_.game_0 = function game_5(){
  return game_0;
}
;
_.wasShown = function wasShown_1(){
  var root;
  $closeOnHide(this, $addConnection(game_0.update, new Signal$1(this.update)));
  $closeOnHide(this, $addConnection(game_0.paint, new Signal$1(this.paint)));
  root = $setSize_7($createRoot(this.iface, ($clinit_AxisLayout() , new AxisLayout$Vertical), $create_1(newSheetBuilder(game_0.plat.graphics)), this.layer), game_0.plat.graphics.viewSize);
  $setStyles_0($add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$createContentArea(this)])), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , BACKGROUND), new Background$1($intern_60))]));
}
;
var CREDITS;
var Ledu_bsu_cybersec_core_ui_CreditScreen_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'CreditScreen', 815, Ltripleplay_game_ScreenStack$UIScreen_2_classLit);
function $onEmit_6(this$static){
  $remove_26(this$static.this$01.screenStack, this$static.this$01.creditScreen, $dir(new SlideTransition(this$static.this$01.screenStack)));
}

function CreditScreen$1(this$0){
  this.this$01 = this$0;
}

defineClass(816, 953, {}, CreditScreen$1);
_.onEmit = function onEmit_7(button){
  $onEmit_6(this, button);
}
;
var Ledu_bsu_cybersec_core_ui_CreditScreen$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'CreditScreen/1', 816, Lreact_Slot_2_classLit);
function $clinit_EndScreen(){
  $clinit_EndScreen = emptyMethod;
  HGAP_BETWEEN_COLUMNS_0 = $percentOfHeight(game_0.bounds, $intern_44);
  TABLE_INSETS_0 = $percentOfHeight(game_0.bounds, $intern_46);
}

function $completedFeatures(this$static){
  var count, e, e$iterator;
  count = -1;
  for (e$iterator = new World$3(this$static.gameWorld); e$iterator._nextIdx >= 0;) {
    e = $next_6(e$iterator);
    $has(e, this$static.gameWorld.featureNumber) && ++count;
  }
  return count;
}

function $createEndGameTable(this$static){
  var data_0, key, key$iterator, summaryTable, tableHeader, wholeTable, map_0;
  wholeTable = $addStyles_0(new Group(($clinit_AxisLayout() , new AxisLayout$Vertical)), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , BACKGROUND), $inset_0(new Background$1($intern_60), 5, 5))]));
  tableHeader = new Group(new AxisLayout$Horizontal);
  $add_8(tableHeader, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$addStyles_0(new Label_0('Performance Review'), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(COLOR, valueOf(-1))]))]));
  summaryTable = $addStyles_0(new Group(new TableLayout(initValues(getClassLiteralForArray(Ltripleplay_ui_layout_TableLayout$Column_2_classLit, 1), $intern_1, 54, 0, [new ExposedColumn(($clinit_Style$HAlign() , LEFT_2), true, 0), new ExposedColumn(CENTER_1, false, HGAP_BETWEEN_COLUMNS_0), new ExposedColumn(RIGHT_2, false, 0)]))), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, $inset_0(new Background$1(-1), TABLE_INSETS_0, TABLE_INSETS_0))]));
  data_0 = (map_0 = ($clinit_Maps() , new LinkedHashMap) , $put_7(map_0, 'Users', '' + this$static.finalUserAmount) , $put_7(map_0, 'Features', '' + $completedFeatures(this$static)) , $put_7(map_0, 'Exposure', '' + $makeTruncatedString(this$static.truncator, this$static.finalExposure * 100) + '%') , $put_7(map_0, 'Known exploits', '' + $knownExploits(this$static)) , copyOf_0(map_0));
  for (key$iterator = $keySet(data_0).iterator(); key$iterator.hasNext();) {
    key = key$iterator.next_0();
    $add_8(summaryTable, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$addStyles_0(new Label_0(key), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [HALIGN.left_0])), new Shim(0, 0), $addStyles_0(new Label_0(key == null?null:safeGet(data_0.delegate, key)), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [HALIGN.left_0]))]));
  }
  $add_8(wholeTable, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [tableHeader, summaryTable, new Shim(1, 1)]));
  return wholeTable;
}

function $knownExploits(this$static){
  var count, e, e$iterator;
  count = 0;
  for (e$iterator = new World$3(this$static.gameWorld); e$iterator._nextIdx >= 0;) {
    e = $next_6(e$iterator);
    $has(e, this$static.gameWorld.exploitNumber) && ++count;
  }
  return count;
}

function EndScreen(screenStack, gameWorld){
  var exposure;
  $clinit_EndScreen();
  ScreenStack$UIScreen.call(this, game_0.plat);
  this.truncator = new DecimalTruncator(2);
  this.gameWorld = gameWorld;
  this.screenStack = screenStack;
  this.finalUserAmount = round_int(gameWorld.users._value.value_0);
  this.finalExposure = gameWorld.exposure._value.value_0;
  exposure = this.gameWorld.exposure._value.value_0;
  $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'end:users'), '' + this.finalUserAmount));
  $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'end:exposure'), '' + exposure));
}

defineClass(787, 93, {}, EndScreen);
_.game_0 = function game_6(){
  return game_0;
}
;
_.wasShown = function wasShown_2(){
  var root;
  $closeOnHide(this, $addConnection(game_0.update, new Signal$1(this.update)));
  $closeOnHide(this, $addConnection(game_0.paint, new Signal$1(this.paint)));
  root = $setStyles_0($add_8($setSize_7($createRoot(this.iface, ($clinit_AxisLayout() , new AxisLayout$Vertical), $create_1(newSheetBuilder(game_0.plat.graphics)), this.layer), game_0.plat.graphics.viewSize), initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$setStyles_0(new Label_0('Your two weeks is up! Lets take a look.'), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , COLOR), valueOf($intern_56))]))])), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, new Background$1(-1))]));
  $add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$createEndGameTable(this)]));
  $add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$addStyles_0(new Label_0($generatorEndText(new EndTextGenerator(this.gameWorld))), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(COLOR, valueOf($intern_56)), TEXT_WRAP.on])), $imageGroup(new BossAtDeskLabelFactory(this.gameWorld.company._value.boss.image)), $onClick(new Button_0('OK'), new EndScreen$1(this))]));
}
;
_.finalExposure = 0;
_.finalUserAmount = 0;
var HGAP_BETWEEN_COLUMNS_0 = 0, TABLE_INSETS_0 = 0;
var Ledu_bsu_cybersec_core_ui_EndScreen_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'EndScreen', 787, Ltripleplay_game_ScreenStack$UIScreen_2_classLit);
function $onEmit_7(this$static){
  game_0.consent._value.value_0?$replace_1(this$static.this$01.screenStack, new PostSurveyScreen(game_0), $dir(new SlideTransition(this$static.this$01.screenStack))):$remove_26(this$static.this$01.screenStack, this$static.this$01, $dir(new SlideTransition(this$static.this$01.screenStack)));
}

function EndScreen$1(this$0){
  this.this$01 = this$0;
}

defineClass(788, 953, {}, EndScreen$1);
_.onEmit = function onEmit_8(button){
  $onEmit_7(this, button);
}
;
var Ledu_bsu_cybersec_core_ui_EndScreen$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'EndScreen/1', 788, Lreact_Slot_2_classLit);
function $generatorEndText(this$static){
  return $isMet(this$static.goal, this$static.finalUsers, this$static.finalExpsoure)?'We needed ' + this$static.goal.minimumUsers + ' and less than ' + $makeTruncatedString(this$static.truncator, this$static.goal.maximumExposure * 100) + '% exposure. You made some great choices! I look forward to working with you.':!$isAcceptableExposure(this$static.goal, this$static.finalExpsoure) && !$isEnoughUsers(this$static.goal, this$static.finalUsers)?'Not only did we have fewer than ' + this$static.goal.minimumUsers + ' users, but our exposure was also above ' + $makeTruncatedString(this$static.truncator, this$static.goal.maximumExposure * 100) + "%! Your decisions were awful. You're fired.":$isAcceptableExposure(this$static.goal, this$static.finalExpsoure)?'We needed ' + this$static.goal.minimumUsers + ' and less than ' + $makeTruncatedString(this$static.truncator, this$static.goal.maximumExposure * 100) + '% exposure. You did well with security, but that stopped us from gaining enough users.':'We needed ' + this$static.goal.minimumUsers + ' and less than ' + $makeTruncatedString(this$static.truncator, this$static.goal.maximumExposure * 100) + '% exposure. You neglected your duties as a security professional.';
}

function EndTextGenerator(world){
  this.truncator = new DecimalTruncator(2);
  this.finalUsers = round_int(world.users._value.value_0);
  this.finalExpsoure = world.exposure._value.value_0;
  this.goal = world.company._value.goal;
}

defineClass(911, 1, {}, EndTextGenerator);
_.finalExpsoure = 0;
_.finalUsers = 0;
var Ledu_bsu_cybersec_core_ui_EndTextGenerator_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'EndTextGenerator', 911, Ljava_lang_Object_2_classLit);
function $clinit_EventsGroup(){
  $clinit_EventsGroup = emptyMethod;
  $clinit_InteractionAreaGroup();
  CALLOUT_BACKGROUND = new RoundRectBackground(game_0.plat.graphics, -1, $percentOfHeight(game_0.bounds, $intern_41), -5063215, $percentOfHeight(game_0.bounds, $intern_34));
}

function $makeButtonGroup(this$static){
  var buttonGroup, option, option$iterator;
  buttonGroup = new Group(new FlowLayout);
  for (option$iterator = this$static.currentEvent.options_0().iterator(); option$iterator.hasNext();) {
    option = option$iterator.next_0();
    $add_8(buttonGroup, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$onClick(new Button_0(option.text_1()), new EventsGroup$2(this$static, option))]));
  }
  return buttonGroup;
}

function $makeSpeakerTextLabel(message){
  var inset;
  inset = $percentOfHeight(game_0.bounds, $intern_44);
  return $addStyles_0(new Label_0(message), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [($clinit_Style() , TEXT_WRAP).on, new Style$Binding(COLOR, valueOf($intern_45)), new Style$Binding(BACKGROUND, $inset_0(new BlankBackground, inset, inset))]));
}

function $updateContent(this$static){
  var buttonGroup, shimSize, speakerText;
  $removeAll(this$static.content_0);
  if (!this$static.currentEvent) {
    $add_8(this$static.content_0, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$makeSpeakerTextLabel("I don't need your attention right now. Good luck!")]));
  }
   else {
    shimSize = game_0.bounds.bounds.height_0 * $intern_34;
    speakerText = $makeSpeakerTextLabel(this$static.currentEvent.text_1());
    buttonGroup = $makeButtonGroup(this$static);
    $add_8(this$static.content_0, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [new Shim(0, shimSize), speakerText, buttonGroup, new Shim(0, shimSize)]));
  }
}

function $validate_0(this$static){
  var parentSize, textBoxWidth;
  if (this$static.scroller) {
    parentSize = this$static._parent._size;
    textBoxWidth = parentSize.width_0 * $intern_61;
    $setConstraint(this$static.scroller, new Constraints$3(textBoxWidth, parentSize.height_0));
    this$static.scroller.content_0.setConstraint(new Constraints$3(textBoxWidth, parentSize.height_0));
  }
  $validate(this$static);
}

function EventsGroup(gameWorld){
  $clinit_EventsGroup();
  InteractionAreaGroup.call(this, $offPolicy(($clinit_AxisLayout() , new AxisLayout$Horizontal), ($clinit_AxisLayout$Policy() , STRETCH)));
  this.onEventCompletion = new UnitSignal;
  this.eventSpeakerImage = $getImage(game_0.assets, ($clinit_GameAssets$ImageKey() , ADMIN));
  this.gameWorld = gameWorld;
  $addConnection(gameWorld.onNarrativeEvent, new EventsGroup$1(this, gameWorld));
}

defineClass(923, 264, $intern_48, EventsGroup);
_.validate = function validate_0(){
  $validate_0(this);
}
;
_.wasParented = function wasParented_0(parent_0){
  var parentSize, textBox, width_0, imageWidth, desiredWidth, scale;
  this._parent = parent_0;
  if (this._children.array.length == 0) {
    parentSize = this._parent._size;
    $setConstraint(this, new Constraints$3(parentSize.width_0, parentSize.height_0));
    textBox = (width_0 = parentSize.width_0 * $intern_61 , this.content_0 = new Group(($clinit_AxisLayout() , new AxisLayout$Vertical)) , $updateContent(this) , this.scroller = $setConstraint($setBehavior(new Scroller(this.content_0)), new Constraints$3(width_0, parentSize.height_0)) , $addStyles_0($add_8(new SizableGroup($offPolicy(new AxisLayout$Vertical, ($clinit_AxisLayout$Policy() , STRETCH)), width_0, parentSize.height_0), initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [this.scroller])), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , BACKGROUND), CALLOUT_BACKGROUND)])));
    $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [textBox, $add_8(new Group(new AxisLayout$Vertical), initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$setConstraint(new Shim(0, 0), (null , UNIFORM_STRETCHED)), new Label_2((imageWidth = $width(this.eventSpeakerImage) , desiredWidth = parentSize.width_0 * 0.11999999731779099 , scale = desiredWidth / imageWidth , new Icons$2(new Icons$1(this.eventSpeakerImage), scale))), new Shim(0, game_0.bounds.bounds.height_0 * $intern_34)])).setConstraint((null , UNIFORM_STRETCHED))]));
    $validate_0(this);
  }
}
;
var CALLOUT_BACKGROUND;
var Ledu_bsu_cybersec_core_ui_EventsGroup_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'EventsGroup', 923, Ledu_bsu_cybersec_core_ui_InteractionAreaGroup_2_classLit);
function EventsGroup$1(this$0, val$gameWorld){
  this.this$01 = this$0;
  this.val$gameWorld2 = val$gameWorld;
}

defineClass(924, 953, {}, EventsGroup$1);
_.onEmit = function onEmit_9(event_0){
  this.this$01.needsAttention.updateAndNotify(($clinit_Boolean() , $clinit_Boolean() , TRUE), false);
  $setEnabled_0(this.val$gameWorld2.gameTimeSystem, false);
  this.this$01.currentEvent = checkNotNull(event_0);
  !!this.this$01.content_0 && $updateContent(this.this$01);
  $invalidate(this.this$01);
}
;
var Ledu_bsu_cybersec_core_ui_EventsGroup$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'EventsGroup/1', 924, Lreact_Slot_2_classLit);
function $onEmit_8(this$static){
  this$static.this$01.currentEvent = null;
  this$static.val$option2.onSelected();
  if (this$static.val$option2.hasSubsequentPage()) {
    this$static.this$01.currentEvent = this$static.val$option2.subsequentPage();
  }
   else {
    $setEnabled_0(this$static.this$01.gameWorld.gameTimeSystem, true);
    this$static.this$01.needsAttention.updateAndNotify(($clinit_Boolean() , $clinit_Boolean() , FALSE), false);
    $notify(this$static.this$01.onEventCompletion, ($clinit_AbstractSignal() , EMIT), null, null, null);
  }
  $updateContent(this$static.this$01);
  $invalidate(this$static.this$01);
}

function EventsGroup$2(this$0, val$option){
  this.this$01 = this$0;
  this.val$option2 = val$option;
}

defineClass(925, 953, {}, EventsGroup$2);
_.onEmit = function onEmit_10(button){
  $onEmit_8(this, button);
}
;
var Ledu_bsu_cybersec_core_ui_EventsGroup$2_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'EventsGroup/2', 925, Lreact_Slot_2_classLit);
function $inset(this$static, uniformInset){
  this$static.insets = ($clinit_Insets() , new Insets(uniformInset, uniformInset, uniformInset, uniformInset));
  return this$static;
}

function $inset_0(this$static, horiz, vert){
  this$static.insets = ($clinit_Insets() , new Insets(vert, horiz, vert, horiz));
  return this$static;
}

function $inset_1(this$static, top_0, right, bottom, left){
  this$static.insets = new Insets(top_0, right, bottom, left);
  return this$static;
}

function Background(){
  this.insets = ($clinit_Insets() , ZERO_1);
}

defineClass(131, 1, {});
var Ltripleplay_ui_Background_2_classLit = createForClass('tripleplay.ui', 'Background', 131, Ljava_lang_Object_2_classLit);
function ExpandableBackground(builder){
  Background.call(this);
  this.background = builder.background;
  this.workHoursSystem = builder.workHoursSystem;
}

defineClass(901, 131, {}, ExpandableBackground);
_.instantiate = function instantiate(size_0){
  return new Background$LayerInstance(this, size_0, new ExpandableBackground$1(this, size_0));
}
;
var Ledu_bsu_cybersec_core_ui_ExpandableBackground_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'ExpandableBackground', 901, Ltripleplay_ui_Background_2_classLit);
function ExpandableBackground$1(this$0, val$size){
  this.this$01 = this$0;
  this.val$size2 = val$size;
  Layer.call(this);
  this.backgroundAspectRatio = this.this$01.background.displayWidth / this.this$01.background.displayHeight;
}

defineClass(903, 21, $intern_59, ExpandableBackground$1);
_.paintImpl = function paintImpl_0(surf){
  var tile, destinationWidth, destinationHeight, sourceWidth, sourceHeight, y_0;
  checkState_0(this.backgroundAspectRatio <= 1, 'Current approach assumes background image taller than wide');
  tile = this.this$01.background;
  destinationWidth = this.val$size2.width_0;
  destinationHeight = destinationWidth / this.backgroundAspectRatio;
  sourceWidth = tile.displayWidth;
  sourceHeight = tile.displayHeight;
  this.this$01.workHoursSystem.isWorkHours._value.value_0 || (surf.tint = -8947849 , surf);
  (!surf.checkIntersection || $intersects(surf, destinationWidth, destinationHeight)) && $addToBatch_0(tile, surf.batch, surf.tint, surf.lastTrans, destinationWidth, destinationHeight, sourceWidth, sourceHeight);
  surf.fillColor = $intern_45;
  y_0 = this.val$size2.height_0;
  $drawLine(surf, 0, y_0, this.val$size2.width_0, y_0, 4);
}
;
_.backgroundAspectRatio = 0;
var Ledu_bsu_cybersec_core_ui_ExpandableBackground$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'ExpandableBackground/1', 903, Lplayn_scene_Layer_2_classLit);
function $withWorkHours(this$static, system){
  this$static.workHoursSystem = checkNotNull(system);
  checkNotNull(this$static.background);
  return new ExpandableBackground(this$static);
}

function ExpandableBackground$Builder(background){
  this.background = checkNotNull(background);
}

defineClass(902, 1, {}, ExpandableBackground$Builder);
var Ledu_bsu_cybersec_core_ui_ExpandableBackground$Builder_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'ExpandableBackground/Builder', 902, Ljava_lang_Object_2_classLit);
function $updateScrollerConstraints(this$static){
  var parentSize;
  parentSize = this$static._parent._size;
  $setConstraint(this$static.scroller, new Constraints$3(parentSize.width_0, parentSize.height_0));
}

function $validate_1(this$static){
  $validate(this$static);
  $updateScrollerConstraints(this$static);
}

function InteractionAreaGroup$Scrolling(layout){
  InteractionAreaGroup.call(this, layout);
}

defineClass(355, 264, $intern_48);
_.applyInsets = function applyInsets_0(b){
  var horizontal;
  horizontal = $percentOfHeight(game_0.bounds, $intern_44);
  return b.insets = ($clinit_Insets() , new Insets(0, horizontal, 0, horizontal)) , b;
}
;
_.validate = function validate_1(){
  $validate_1(this);
}
;
_.wasParented = function wasParented_1(parent_0){
  this._parent = parent_0;
  $updateScrollerConstraints(this);
}
;
var Ledu_bsu_cybersec_core_ui_InteractionAreaGroup$Scrolling_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'InteractionAreaGroup/Scrolling', 355, Ledu_bsu_cybersec_core_ui_InteractionAreaGroup_2_classLit);
function ExploitsGroup(gameWorld){
  $clinit_InteractionAreaGroup();
  InteractionAreaGroup$Scrolling.call(this, ($clinit_AxisLayout() , new AxisLayout$Vertical));
  this.content_0 = new Group(new TableLayout(initValues(getClassLiteralForArray(Ltripleplay_ui_layout_TableLayout$Column_2_classLit, 1), $intern_1, 54, 0, [new ExploitsGroup$ExposedColumn(($clinit_Style$HAlign() , LEFT_2)), new ExploitsGroup$ExposedColumn(LEFT_2), new ExploitsGroup$ExposedColumn(LEFT_2)])));
  this.world = checkNotNull(gameWorld);
  $add_8(this.content_0, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [new Label_0('EXPLOIT TYPE'), new Label_0('USERS LOST'), new Label_0('FIX %')]));
  this.scroller = $setBehavior(new Scroller(this.content_0));
  $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [this.scroller]));
  new ExploitsGroup$1(this, gameWorld, ($clinit_SystemPriority() , UI_LEVEL).value_0, gameWorld);
}

defineClass(918, 355, $intern_48, ExploitsGroup);
var Ledu_bsu_cybersec_core_ui_ExploitsGroup_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'ExploitsGroup', 918, Ledu_bsu_cybersec_core_ui_InteractionAreaGroup$Scrolling_2_classLit);
function ExploitsGroup$1(this$0, $anonymous0, $anonymous1, val$gameWorld){
  this.this$01 = this$0;
  this.val$gameWorld4 = val$gameWorld;
  System.call(this, $anonymous0, $anonymous1);
  this.map_0 = ($clinit_Maps() , new HashMap);
}

defineClass(922, 40, {}, ExploitsGroup$1);
_.isInterested = function isInterested_14(entity){
  return $has(entity, this.val$gameWorld4.exploitNumber);
}
;
_.update_1 = function update_17(clock, entities){
  var exploitNumber, i, id_0, labels, limit;
  for (i = 0 , limit = entities._size; i < limit; i++) {
    id_0 = entities._elems[i];
    exploitNumber = $get_14(this.val$gameWorld4.exploitNumber, id_0);
    if (this.map_0.containsKey(valueOf(exploitNumber))) {
      $update_2(this.map_0.get_1(valueOf(exploitNumber)));
    }
     else {
      labels = new ExploitsGroup$Labels;
      labels.usersLostLabel = new ExploitsGroup$UsersLostLabel(this.this$01, id_0);
      labels.progressLabel = new ExploitsGroup$ProgressLabel(this.this$01, id_0);
      this.map_0.put(valueOf(exploitNumber), labels);
      $add_7(this.this$01.content_0, labels.progressLabel);
      $add_7(this.this$01.content_0, labels.usersLostLabel);
      $add_7(this.this$01.content_0, $addStyles_0(new Label_0($get_13(this.val$gameWorld4.name_0, id_0)), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [($clinit_Style() , HALIGN).left_0])));
      $invalidate(this.this$01);
    }
  }
}
;
var Ledu_bsu_cybersec_core_ui_ExploitsGroup$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'ExploitsGroup/1', 922, Ltripleplay_entity_System_2_classLit);
function ExploitsGroup$ExposedColumn(halign){
  TableLayout$Column.call(this, halign, true, 1, 0);
}

defineClass(272, 54, $intern_52, ExploitsGroup$ExposedColumn);
var Ledu_bsu_cybersec_core_ui_ExploitsGroup$ExposedColumn_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'ExploitsGroup/ExposedColumn', 272, Ltripleplay_ui_layout_TableLayout$Column_2_classLit);
function $update_2(this$static){
  $update_4(this$static.usersLostLabel);
  $update_3(this$static.progressLabel);
}

function ExploitsGroup$Labels(){
}

defineClass(919, 1, {}, ExploitsGroup$Labels);
var Ledu_bsu_cybersec_core_ui_ExploitsGroup$Labels_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'ExploitsGroup/Labels', 919, Ljava_lang_Object_2_classLit);
function $update_3(this$static){
  var entity, progress;
  entity = $entity(this$static.this$01.world, this$static.entityId);
  if ($has(entity, this$static.this$01.world.maintenanceProgress)) {
    progress = round_int($get_12(this$static.this$01.world.maintenanceProgress, this$static.entityId) * 100);
    this$static.text_0.updateAndNotify(progress + '%', false);
  }
   else {
    this$static.text_0.updateAndNotify('Fixed', false);
  }
}

function ExploitsGroup$ProgressLabel(this$0, entityId){
  this.this$01 = this$0;
  Label.call(this);
  this.entityId = entityId;
}

defineClass(921, 11, $intern_50, ExploitsGroup$ProgressLabel);
_.entityId = 0;
var Ledu_bsu_cybersec_core_ui_ExploitsGroup$ProgressLabel_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'ExploitsGroup/ProgressLabel', 921, Ltripleplay_ui_Label_2_classLit);
function $update_4(this$static){
  this$static.text_0.updateAndNotify('' + round_int($get_12(this$static.this$01.world.lostUsers, this$static.entityId)), false);
}

function ExploitsGroup$UsersLostLabel(this$0, entityId){
  this.this$01 = this$0;
  Label.call(this);
  this.entityId = entityId;
}

defineClass(920, 11, $intern_50, ExploitsGroup$UsersLostLabel);
_.entityId = 0;
var Ledu_bsu_cybersec_core_ui_ExploitsGroup$UsersLostLabel_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'ExploitsGroup/UsersLostLabel', 920, Ltripleplay_ui_Label_2_classLit);
function ExposedColumn(halign, stretch, minWidth){
  TableLayout$Column.call(this, halign, stretch, 1, minWidth);
}

defineClass(270, 54, $intern_52, ExposedColumn);
var Ledu_bsu_cybersec_core_ui_ExposedColumn_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'ExposedColumn', 270, Ltripleplay_ui_layout_TableLayout$Column_2_classLit);
function FeatureGroup(gameWorld){
  $clinit_InteractionAreaGroup();
  InteractionAreaGroup$Scrolling.call(this, ($clinit_AxisLayout() , new AxisLayout$Vertical));
  this.map_0 = ($clinit_Maps() , new HashMap);
  this.content_0 = new Group(new TableLayout(initValues(getClassLiteralForArray(Ltripleplay_ui_layout_TableLayout$Column_2_classLit, 1), $intern_1, 54, 0, [new FeatureGroup$ExposedColumn(($clinit_Style$HAlign() , LEFT_2)), new FeatureGroup$ExposedColumn(LEFT_2), new FeatureGroup$ExposedColumn(RIGHT_2)])));
  $add_8(this.content_0, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [new Label_0('FEATURE'), new Label_0('PROGRESS'), new Label_0('USERS PER HOUR')]));
  this.scroller = $setBehavior(new Scroller(this.content_0));
  $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [this.scroller]));
  this.world = checkNotNull(gameWorld);
  new FeatureGroup$1(this, this.world, ($clinit_SystemPriority() , UI_LEVEL).value_0, gameWorld);
}

defineClass(915, 355, $intern_48, FeatureGroup);
var Ledu_bsu_cybersec_core_ui_FeatureGroup_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'FeatureGroup', 915, Ledu_bsu_cybersec_core_ui_InteractionAreaGroup$Scrolling_2_classLit);
function FeatureGroup$1(this$0, $anonymous0, $anonymous1, val$gameWorld){
  this.this$01 = this$0;
  this.val$gameWorld4 = val$gameWorld;
  System.call(this, $anonymous0, $anonymous1);
}

defineClass(917, 40, {}, FeatureGroup$1);
_.isInterested = function isInterested_15(entity){
  return $has(entity, this.val$gameWorld4.featureNumber);
}
;
_.update_1 = function update_18(clock, entities){
  var featureId, i, id_0, limit, progressLabel;
  for (i = 0 , limit = entities._size; i < limit; i++) {
    id_0 = entities._elems[i];
    featureId = $get_14(this.val$gameWorld4.featureNumber, id_0);
    if (this.this$01.map_0.containsKey(valueOf(featureId))) {
      $update_5(this.this$01.map_0.get_1(valueOf(featureId)));
    }
     else {
      progressLabel = new FeatureGroup$ProgressLabel(this.this$01, id_0);
      this.this$01.map_0.put(valueOf(featureId), progressLabel);
      $add_7(this.this$01.content_0, new Label_0('' + $get_12(this.val$gameWorld4.usersPerHour, id_0)));
      $add_7(this.this$01.content_0, progressLabel);
      $add_7(this.this$01.content_0, $addStyles_0(new Label_0($get_13(this.val$gameWorld4.name_0, id_0)), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [($clinit_Style() , HALIGN).left_0])));
    }
  }
}
;
var Ledu_bsu_cybersec_core_ui_FeatureGroup$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'FeatureGroup/1', 917, Ltripleplay_entity_System_2_classLit);
function FeatureGroup$ExposedColumn(halign){
  TableLayout$Column.call(this, halign, true, 1, 10);
}

defineClass(271, 54, $intern_52, FeatureGroup$ExposedColumn);
var Ledu_bsu_cybersec_core_ui_FeatureGroup$ExposedColumn_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'FeatureGroup/ExposedColumn', 271, Ltripleplay_ui_layout_TableLayout$Column_2_classLit);
function $update_5(this$static){
  var entity, progress;
  entity = $entity(this$static.this$01.world, this$static.entityId);
  if ($has(entity, this$static.this$01.world.developmentProgress)) {
    progress = round_int($get_12(this$static.this$01.world.developmentProgress, this$static.entityId) / $get_14(this$static.this$01.world.goal, this$static.entityId) * 100);
    this$static.text_0.updateAndNotify(progress + '%', false);
  }
   else {
    this$static.text_0.updateAndNotify('100%', false);
  }
}

function FeatureGroup$ProgressLabel(this$0, entityId){
  this.this$01 = this$0;
  Label.call(this);
  this.entityId = entityId;
}

defineClass(916, 11, $intern_50, FeatureGroup$ProgressLabel);
_.entityId = 0;
var Ledu_bsu_cybersec_core_ui_FeatureGroup$ProgressLabel_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'FeatureGroup/ProgressLabel', 916, Ltripleplay_ui_Label_2_classLit);
function FontCache(){
  this.REGULAR = new Font('Lato-Regular', viewSize_0.g.viewSize.height_0 * $intern_44);
}

function initialize(g){
  if (!instance_1) {
    viewSize_0 = new FontCache$ViewSize(g);
    return instance_1 = new FontCache;
  }
   else {
    return instance_1;
  }
}

defineClass(543, 1, {}, FontCache);
var instance_1, viewSize_0;
var Ledu_bsu_cybersec_core_ui_FontCache_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'FontCache', 543, Ljava_lang_Object_2_classLit);
function FontCache$ViewSize(g){
  this.g = checkNotNull(g);
}

defineClass(544, 1, {}, FontCache$ViewSize);
var Ledu_bsu_cybersec_core_ui_FontCache$ViewSize_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'FontCache/ViewSize', 544, Ljava_lang_Object_2_classLit);
function $cache(this$static, keys_0){
  var image, key, key$index, key$max, list, promise;
  list = newArrayListWithCapacity(values_17().length);
  for (key$index = 0 , key$max = keys_0.length; key$index < key$max; ++key$index) {
    key = keys_0[key$index];
    promise = new RPromise;
    image = $getImage_0(this$static.assets, key.path);
    $onSuccess(image.state, new GameAssets$1(this$static, key, promise));
    $onFailure(image.state, new GameAssets$2(promise));
    list.array[list.array.length] = promise;
  }
  return list;
}

function $cache_0(this$static, keys_0){
  var image, key, key$index, key$max, list, promise;
  list = newArrayListWithCapacity(($clinit_GameAssets$TileKey() , initValues(getClassLiteralForArray(Ledu_bsu_cybersec_core_ui_GameAssets$TileKey_2_classLit, 1), $intern_1, 71, 0, [BACKGROUND_1, BACKGROUND_2, BACKGROUND_4, NARRATIVE_BACKGROUND_1, NARRATIVE_BACKGROUND_2, NARRATIVE_BACKGROUND_3, COMPANY_LOGO_WITH_ALPHA])).length);
  for (key$index = 0 , key$max = keys_0.length; key$index < key$max; ++key$index) {
    key = keys_0[key$index];
    promise = new RPromise;
    image = $getImage_0(this$static.assets, key.path);
    $onSuccess(image.state, new GameAssets$3(this$static, key, promise));
    $onFailure(image.state, new GameAssets$4(promise));
    list.array[list.array.length] = promise;
  }
  return list;
}

function $getImage(this$static, key){
  var image;
  image = $get_11(this$static.imageCache, key);
  if (!image) {
    throw new UnsupportedOperationException_0('Cannot currently get images that are not cached (attempted to get ' + key + ')');
  }
  return image;
}

function $getTile(this$static, key){
  var tile;
  tile = $get_11(this$static.tileCache, key);
  if (!tile) {
    throw new UnsupportedOperationException_0('Cannot currently get tiles that are not cached (attempted to get ' + key + ')');
  }
  return tile;
}

function GameAssets(assets){
  this.tileCache = ($clinit_Maps() , new EnumMap(checkNotNull(Ledu_bsu_cybersec_core_ui_GameAssets$TileKey_2_classLit)));
  this.imageCache = new EnumMap(checkNotNull(Ledu_bsu_cybersec_core_ui_GameAssets$ImageKey_2_classLit));
  this.assets = checkNotNull(assets);
}

defineClass(436, 1, {}, GameAssets);
var Ledu_bsu_cybersec_core_ui_GameAssets_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameAssets', 436, Ljava_lang_Object_2_classLit);
function GameAssets$1(this$0, val$key, val$promise){
  this.this$01 = this$0;
  this.val$key2 = val$key;
  this.val$promise3 = val$promise;
}

defineClass(437, 953, {}, GameAssets$1);
_.onEmit = function onEmit_11(image){
  $put_4(this.this$01.imageCache, this.val$key2, image);
  this.val$promise3.succeed(image);
}
;
var Ledu_bsu_cybersec_core_ui_GameAssets$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameAssets/1', 437, Lreact_Slot_2_classLit);
function GameAssets$2(val$promise){
  this.val$promise2 = val$promise;
}

defineClass(438, 953, {}, GameAssets$2);
_.onEmit = function onEmit_12(throwable){
  this.val$promise2.fail(throwable);
}
;
var Ledu_bsu_cybersec_core_ui_GameAssets$2_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameAssets/2', 438, Lreact_Slot_2_classLit);
function GameAssets$3(this$0, val$key, val$promise){
  this.this$01 = this$0;
  this.val$key2 = val$key;
  this.val$promise3 = val$promise;
}

defineClass(439, 953, {}, GameAssets$3);
_.onEmit = function onEmit_13(image){
  var future;
  future = $map(image.state, new Image$3(image));
  $onSuccess(future, new GameAssets$3$1(this, this.val$key2, this.val$promise3));
  $onFailure(future, new GameAssets$3$2(this.val$promise3));
}
;
var Ledu_bsu_cybersec_core_ui_GameAssets$3_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameAssets/3', 439, Lreact_Slot_2_classLit);
function GameAssets$3$1(this$1, val$key, val$promise){
  this.this$11 = this$1;
  this.val$key2 = val$key;
  this.val$promise3 = val$promise;
}

defineClass(440, 953, {}, GameAssets$3$1);
_.onEmit = function onEmit_14(tile){
  $put_4(this.this$11.this$01.tileCache, this.val$key2, tile);
  this.val$promise3.succeed(tile);
}
;
var Ledu_bsu_cybersec_core_ui_GameAssets$3$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameAssets/3/1', 440, Lreact_Slot_2_classLit);
function GameAssets$3$2(val$promise){
  this.val$promise2 = val$promise;
}

defineClass(441, 953, {}, GameAssets$3$2);
_.onEmit = function onEmit_15(throwable){
  this.val$promise2.fail(throwable);
}
;
var Ledu_bsu_cybersec_core_ui_GameAssets$3$2_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameAssets/3/2', 441, Lreact_Slot_2_classLit);
function GameAssets$4(val$promise){
  this.val$promise2 = val$promise;
}

defineClass(442, 953, {}, GameAssets$4);
_.onEmit = function onEmit_16(throwable){
  this.val$promise2.fail(throwable);
}
;
var Ledu_bsu_cybersec_core_ui_GameAssets$4_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameAssets/4', 442, Lreact_Slot_2_classLit);
function $clinit_GameAssets$ImageKey(){
  $clinit_GameAssets$ImageKey = emptyMethod;
  ADMIN = new GameAssets$ImageKey('ADMIN', 0, 'admin.png');
  STATUS = new GameAssets$ImageKey('STATUS', 1, 'status.png');
  NEWS = new GameAssets$ImageKey('NEWS', 2, 'news.png');
  NEWS_ATTENTION = new GameAssets$ImageKey('NEWS_ATTENTION', 3, 'news-attention.png');
  DEVELOPMENT_0 = new GameAssets$ImageKey('DEVELOPMENT', 4, 'development.png');
  MAINTENANCE_0 = new GameAssets$ImageKey('MAINTENANCE', 5, 'maintenance.png');
  LOGO = new GameAssets$ImageKey('LOGO', 6, 'logo.png');
  MUTE = new GameAssets$ImageKey('MUTE', 7, 'mute.png');
  UNMUTE = new GameAssets$ImageKey('UNMUTE', 8, 'unmute.png');
  DESK = new GameAssets$ImageKey('DESK', 9, 'desk.png');
  ESTEBAN = new GameAssets$ImageKey('ESTEBAN', 10, 'Esteban.png');
  MELISSA = new GameAssets$ImageKey('MELISSA', 11, 'Melissa.png');
  NANCY = new GameAssets$ImageKey('NANCY', 12, 'Nancy.png');
  JERRY = new GameAssets$ImageKey('JERRY', 13, 'Jerry.png');
  VANI = new GameAssets$ImageKey('VANI', 14, 'Vani.png');
  ABDULLAH = new GameAssets$ImageKey('ABDULLAH', 15, 'Abdullah.png');
  JANINE = new GameAssets$ImageKey('JANINE', 16, 'Janine.png');
  IVAR = new GameAssets$ImageKey('IVAR', 17, 'Ivar.png');
  BRUCE = new GameAssets$ImageKey('BRUCE', 18, 'Bruce.png');
}

function GameAssets$ImageKey(enum$name, enum$ordinal, name_0){
  Enum.call(this, enum$name, enum$ordinal);
  this.path = 'images/' + checkNotNull(name_0);
}

function values_17(){
  $clinit_GameAssets$ImageKey();
  return initValues(getClassLiteralForArray(Ledu_bsu_cybersec_core_ui_GameAssets$ImageKey_2_classLit, 1), $intern_1, 43, 0, [ADMIN, STATUS, NEWS, NEWS_ATTENTION, DEVELOPMENT_0, MAINTENANCE_0, LOGO, MUTE, UNMUTE, DESK, ESTEBAN, MELISSA, NANCY, JERRY, VANI, ABDULLAH, JANINE, IVAR, BRUCE]);
}

defineClass(43, 7, {43:1, 3:1, 9:1, 7:1}, GameAssets$ImageKey);
var ABDULLAH, ADMIN, BRUCE, DESK, DEVELOPMENT_0, ESTEBAN, IVAR, JANINE, JERRY, LOGO, MAINTENANCE_0, MELISSA, MUTE, NANCY, NEWS, NEWS_ATTENTION, STATUS, UNMUTE, VANI;
var Ledu_bsu_cybersec_core_ui_GameAssets$ImageKey_2_classLit = createForEnum('edu.bsu.cybersec.core.ui', 'GameAssets/ImageKey', 43, Ljava_lang_Enum_2_classLit, values_17);
function $clinit_GameAssets$TileKey(){
  $clinit_GameAssets$TileKey = emptyMethod;
  BACKGROUND_1 = new GameAssets$TileKey('BACKGROUND_1', 0, 'employee_bg_1.png');
  BACKGROUND_2 = new GameAssets$TileKey('BACKGROUND_2', 1, 'employee_bg_2.png');
  BACKGROUND_4 = new GameAssets$TileKey('BACKGROUND_4', 2, 'employee_bg_4.png');
  NARRATIVE_BACKGROUND_1 = new GameAssets$TileKey('NARRATIVE_BACKGROUND_1', 3, 'crop-1.png');
  NARRATIVE_BACKGROUND_2 = new GameAssets$TileKey('NARRATIVE_BACKGROUND_2', 4, 'crop-2.png');
  NARRATIVE_BACKGROUND_3 = new GameAssets$TileKey('NARRATIVE_BACKGROUND_3', 5, 'crop-3.png');
  COMPANY_LOGO_WITH_ALPHA = new GameAssets$TileKey('COMPANY_LOGO_WITH_ALPHA', 6, 'company_logo.png');
}

function GameAssets$TileKey(enum$name, enum$ordinal, name_0){
  Enum.call(this, enum$name, enum$ordinal);
  this.path = 'images/' + checkNotNull(name_0);
}

function values_18(){
  $clinit_GameAssets$TileKey();
  return initValues(getClassLiteralForArray(Ledu_bsu_cybersec_core_ui_GameAssets$TileKey_2_classLit, 1), $intern_1, 71, 0, [BACKGROUND_1, BACKGROUND_2, BACKGROUND_4, NARRATIVE_BACKGROUND_1, NARRATIVE_BACKGROUND_2, NARRATIVE_BACKGROUND_3, COMPANY_LOGO_WITH_ALPHA]);
}

defineClass(71, 7, {71:1, 3:1, 9:1, 7:1}, GameAssets$TileKey);
var BACKGROUND_1, BACKGROUND_2, BACKGROUND_4, COMPANY_LOGO_WITH_ALPHA, NARRATIVE_BACKGROUND_1, NARRATIVE_BACKGROUND_2, NARRATIVE_BACKGROUND_3;
var Ledu_bsu_cybersec_core_ui_GameAssets$TileKey_2_classLit = createForEnum('edu.bsu.cybersec.core.ui', 'GameAssets/TileKey', 71, Ljava_lang_Enum_2_classLit, values_18);
function $currentViewIs(this$static, view){
  return $childAt(this$static.shown, 0) == view;
}

function $setConstraint_0(this$static, constraint){
  $setConstraint(this$static, constraint);
  $invalidate($childAt(this$static.shown, 0));
  return this$static;
}

function GameInteractionArea(gameWorld, iface){
  Group.call(this, $offPolicy(($clinit_AxisLayout() , new AxisLayout$Vertical), ($clinit_AxisLayout$Policy() , STRETCH)));
  this.shown = (new Group($offPolicy($stretchByDefault(new AxisLayout$Vertical), STRETCH))).setConstraint((null , UNIFORM_STRETCHED));
  this.shownChanged = ($clinit_AbstractSignal() , new Signal);
  this.gameWorld = checkNotNull(gameWorld);
  this.iface = checkNotNull(iface);
  this.statusGroup = new CompanyStatusGroup(gameWorld);
  $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [this.shown]));
  $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$setConstraint(new GameInteractionArea$ButtonArea(this), (null , UNSTRETCHED))]));
  $addStyles_0(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , BACKGROUND), new Background$1($intern_43))]));
}

defineClass(677, 20, $intern_48, GameInteractionArea);
_.setConstraint = function setConstraint_0(constraint){
  return $setConstraint(this, constraint) , $invalidate($childAt(this.shown, 0)) , this;
}
;
var Ledu_bsu_cybersec_core_ui_GameInteractionArea_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameInteractionArea', 677, Ltripleplay_ui_Group_2_classLit);
function GameInteractionArea$ButtonArea(this$0){
  var button, button$iterator;
  this.this$01 = this$0;
  Group.call(this, ($clinit_AxisLayout() , new AxisLayout$Horizontal));
  this.featureGroup = new FeatureGroup(this.this$01.gameWorld);
  this.exploitsGroup = new ExploitsGroup(this.this$01.gameWorld);
  this.eventsGroup = new EventsGroup(this.this$01.gameWorld);
  this.statusButton = new GameInteractionArea$ChangeViewControl_0(this.this$01, ($clinit_GameAssets$ImageKey() , STATUS), 'Status', this.this$01.statusGroup, null);
  this.featureButton = new GameInteractionArea$ChangeViewControl_0(this.this$01, DEVELOPMENT_0, 'Features', this.featureGroup, (new GameInteractionArea$ButtonArea$Counter_0(this, this.this$01.gameWorld.featureNumber, -1)).count);
  this.exploitsButton = new GameInteractionArea$ChangeViewControl_0(this.this$01, MAINTENANCE_0, 'Exploits', this.exploitsGroup, (new GameInteractionArea$ButtonArea$Counter(this, this.this$01.gameWorld.exploitNumber)).count);
  this.eventsButton = new GameInteractionArea$ChangeViewControl(this.this$01, NEWS, NEWS_ATTENTION, 'Alerts', this.eventsGroup, null);
  this.allButtons = ($clinit_ImmutableList() , new RegularImmutableList(nullCheckedList(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [this.statusButton, this.featureButton, this.exploitsButton, this.eventsButton]))));
  $addConnection(this.eventsGroup.onEventCompletion, new GameInteractionArea$ButtonArea$1(this));
  for (button$iterator = unmodifiableIterator(this.allButtons.delegate.iterator()); button$iterator.hasNext();) {
    button = button$iterator.next_0();
    $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [button]));
  }
  $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [new MuteCheckBox]));
  $click(this.statusButton.button_0._behave);
  $addConnection(this.this$01.gameWorld.gameTime, new GameInteractionArea$ButtonArea$2(this));
}

defineClass(678, 20, $intern_48, GameInteractionArea$ButtonArea);
var Ledu_bsu_cybersec_core_ui_GameInteractionArea$ButtonArea_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameInteractionArea/ButtonArea', 678, Ltripleplay_ui_Group_2_classLit);
defineClass(968, 953, {});
_.onEmit = function onEmit_17(event_0){
  this.onEmit_0();
}
;
_.run = function run_25(){
  this.onEmit_0();
}
;
var Lreact_UnitSlot_2_classLit = createForClass('react', 'UnitSlot', 968, Lreact_Slot_2_classLit);
function GameInteractionArea$ButtonArea$1(this$1){
  this.this$11 = this$1;
}

defineClass(680, 968, {}, GameInteractionArea$ButtonArea$1);
_.onEmit_0 = function onEmit_18(){
  $click(this.this$11.statusButton.button_0._behave);
}
;
var Ledu_bsu_cybersec_core_ui_GameInteractionArea$ButtonArea$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameInteractionArea/ButtonArea/1', 680, Lreact_UnitSlot_2_classLit);
function $onEmit_9(this$static){
  $currentViewIs(this$static.this$11.this$01, this$static.this$11.exploitsGroup) && $validate_1(this$static.this$11.exploitsGroup);
  $currentViewIs(this$static.this$11.this$01, this$static.this$11.featureGroup) && $validate_1(this$static.this$11.featureGroup);
}

function GameInteractionArea$ButtonArea$2(this$1){
  this.this$11 = this$1;
}

defineClass(681, 953, {}, GameInteractionArea$ButtonArea$2);
_.onEmit = function onEmit_19(gameTime){
  $onEmit_9(this, gameTime);
}
;
var Ledu_bsu_cybersec_core_ui_GameInteractionArea$ButtonArea$2_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameInteractionArea/ButtonArea/2', 681, Lreact_Slot_2_classLit);
function GameInteractionArea$ButtonArea$Counter(this$1, component){
  GameInteractionArea$ButtonArea$Counter_0.call(this, this$1, component, 0);
}

function GameInteractionArea$ButtonArea$Counter_0(this$1, component, mod){
  System.call(this, this$1.this$01.gameWorld, ($clinit_SystemPriority() , UI_LEVEL).value_0);
  this.count = ($clinit_AbstractValue() , new Value(valueOf(0)));
  this.component = checkNotNull(component);
  this.modifier = mod;
}

defineClass(243, 40, {}, GameInteractionArea$ButtonArea$Counter, GameInteractionArea$ButtonArea$Counter_0);
_.isInterested = function isInterested_16(entity){
  return $has(entity, this.component);
}
;
_.update_1 = function update_19(clock, entities){
  this.count.updateAndNotify(valueOf(entities._size + this.modifier), false);
}
;
_.modifier = 0;
var Ledu_bsu_cybersec_core_ui_GameInteractionArea$ButtonArea$Counter_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameInteractionArea/ButtonArea/Counter', 243, Ltripleplay_entity_System_2_classLit);
function GameInteractionArea$ChangeViewControl(this$0, imageKey, attentionKey, text_0, view, number){
  var altIcon, attentionImage, desiredHeight, desiredWidth, iconImage, numberLabel, theIcon;
  this.this$01 = this$0;
  Group.call(this, new AbsoluteLayout);
  this.button_0 = new GameInteractionArea$ChangeViewControl$ChangeViewButton(text_0);
  iconImage = $getImage(game_0.assets, imageKey);
  attentionImage = $getImage(game_0.assets, attentionKey);
  desiredHeight = game_0.bounds.bounds.height_0 * 0.05999999865889549;
  desiredWidth = game_0.bounds.bounds.width_0 / 5;
  $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [at(this.button_0, 0, 0, desiredWidth, desiredHeight)]));
  if (number) {
    numberLabel = new GameInteractionArea$ChangeViewControl$CountLabel(this, number);
    $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$setConstraint(numberLabel, uniform(($clinit_BoxPoint() , BR)))]));
  }
  theIcon = new Icons$2(new Icons$1(iconImage), desiredHeight * $intern_61 / $invScaled(iconImage.scale_0, iconImage.pixelHeight));
  altIcon = new Icons$2(new Icons$1(attentionImage), desiredHeight * $intern_61 / $invScaled(attentionImage.scale_0, attentionImage.pixelHeight));
  this.button_0.icon.updateAndNotify(theIcon, false);
  $addStyles_0(this.button_0, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [($clinit_Style() , ICON_CUDDLE).on, new Style$Binding(ICON_GAP, valueOf(-round_int(game_0.bounds.bounds.height_0 * $intern_62)))]));
  $addConnection(view.needsAttention, new GameInteractionArea$ChangeViewControl$1(this, view, altIcon, theIcon, text_0));
  $setConstraint(this, new Constraints$3(desiredWidth, desiredHeight));
  $onClick(this.button_0, new GameInteractionArea$ChangeViewControl$2(this, view));
  $addConnection(this$0.shownChanged, new GameInteractionArea$ChangeViewControl$3(this));
}

function GameInteractionArea$ChangeViewControl_0(this$0, imageKey, text_0, view, number){
  GameInteractionArea$ChangeViewControl.call(this, this$0, imageKey, imageKey, text_0, view, number);
}

defineClass(175, 20, $intern_48, GameInteractionArea$ChangeViewControl, GameInteractionArea$ChangeViewControl_0);
var Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameInteractionArea/ChangeViewControl', 175, Ltripleplay_ui_Group_2_classLit);
function $flashWhileNeedsAttention(this$static){
  $add_16($then($add_16($then($add_16($then($add_16($then($add_17(this$static.this$11.this$01.iface.anim, new Animation$Action(this$static.showAltIconIfNotSelected))), new Animation$Delay)), new Animation$Action(this$static.showRegIcon))), new Animation$Delay)), new Animation$Action(new GameInteractionArea$ChangeViewControl$1$3(this$static, this$static.val$view2)));
}

function GameInteractionArea$ChangeViewControl$1(this$1, val$view, val$altIcon, val$theIcon, val$text){
  this.this$11 = this$1;
  this.val$view2 = val$view;
  this.val$altIcon3 = val$altIcon;
  this.val$theIcon4 = val$theIcon;
  this.val$text5 = val$text;
  this.showAltIconIfNotSelected = new GameInteractionArea$ChangeViewControl$1$1(this, this.val$view2, this.val$altIcon3);
  this.showRegIcon = new GameInteractionArea$ChangeViewControl$1$2(this, this.val$theIcon4, this.val$text5);
}

defineClass(683, 953, {}, GameInteractionArea$ChangeViewControl$1);
_.onEmit = function onEmit_20(selected){
  selected.value_0?$add_16($then($add_16($then($add_16($then($add_16($then($add_17(this.this$11.this$01.iface.anim, new Animation$Action(this.showAltIconIfNotSelected))), new Animation$Delay)), new Animation$Action(this.showRegIcon))), new Animation$Delay)), new Animation$Action(new GameInteractionArea$ChangeViewControl$1$3(this, this.val$view2))):$run_0(this.showRegIcon);
}
;
var Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameInteractionArea/ChangeViewControl/1', 683, Lreact_Slot_2_classLit);
function GameInteractionArea$ChangeViewControl$1$1(this$2, val$view, val$altIcon){
  this.this$21 = this$2;
  this.val$view2 = val$view;
  this.val$altIcon3 = val$altIcon;
}

defineClass(684, 1, {}, GameInteractionArea$ChangeViewControl$1$1);
_.run = function run_26(){
  if (!$currentViewIs(this.this$21.this$11.this$01, this.val$view2)) {
    this.this$21.this$11.button_0.icon.updateAndNotify(this.val$altIcon3, false);
    this.this$21.this$11.button_0.text_0.updateAndNotify(null, false);
  }
}
;
var Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$1$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameInteractionArea/ChangeViewControl/1/1', 684, Ljava_lang_Object_2_classLit);
function $run_0(this$static){
  this$static.this$21.this$11.button_0.icon.updateAndNotify(this$static.val$theIcon2, false);
  this$static.this$21.this$11.button_0.text_0.updateAndNotify(this$static.val$text3, false);
}

function GameInteractionArea$ChangeViewControl$1$2(this$2, val$theIcon, val$text){
  this.this$21 = this$2;
  this.val$theIcon2 = val$theIcon;
  this.val$text3 = val$text;
}

defineClass(685, 1, {}, GameInteractionArea$ChangeViewControl$1$2);
_.run = function run_27(){
  $run_0(this);
}
;
var Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$1$2_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameInteractionArea/ChangeViewControl/1/2', 685, Ljava_lang_Object_2_classLit);
function GameInteractionArea$ChangeViewControl$1$3(this$2, val$view){
  this.this$21 = this$2;
  this.val$view2 = val$view;
}

defineClass(326, 1, {}, GameInteractionArea$ChangeViewControl$1$3);
_.run = function run_28(){
  this.val$view2.needsAttention._value.value_0 && $flashWhileNeedsAttention(this.this$21);
}
;
var Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$1$3_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameInteractionArea/ChangeViewControl/1/3', 326, Ljava_lang_Object_2_classLit);
function $onEmit_10(this$static){
  $removeAll(this$static.this$11.this$01.shown);
  $add_8(this$static.this$11.this$01.shown, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [this$static.val$view2]));
  $emit(this$static.this$11.this$01.shownChanged, this$static.this$11);
}

function GameInteractionArea$ChangeViewControl$2(this$1, val$view){
  this.this$11 = this$1;
  this.val$view2 = val$view;
}

defineClass(686, 953, {}, GameInteractionArea$ChangeViewControl$2);
_.onEmit = function onEmit_21(event_0){
  $onEmit_10(this, event_0);
}
;
var Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$2_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameInteractionArea/ChangeViewControl/2', 686, Lreact_Slot_2_classLit);
function GameInteractionArea$ChangeViewControl$3(this$1){
  this.this$11 = this$1;
}

defineClass(687, 953, {}, GameInteractionArea$ChangeViewControl$3);
_.onEmit = function onEmit_22(changeViewControl){
  $setEnabled(this.this$11, changeViewControl != this.this$11);
}
;
var Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$3_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameInteractionArea/ChangeViewControl/3', 687, Lreact_Slot_2_classLit);
function $onClick(this$static, onClick){
  $addConnection(this$static._behave.clicked, onClick);
  return this$static;
}

function Button(){
  Button_1.call(this, null);
}

function Button_0(text_0){
  Button_1.call(this, text_0);
}

function Button_1(text_0){
  AbstractTextButton.call(this, text_0);
}

defineClass(48, 95, $intern_63, Button_0);
_.clicked_0 = function clicked_2(){
  return this._behave.clicked;
}
;
_.createBehavior = function createBehavior_2(){
  return new Behavior$Click(this);
}
;
_.getStyleClass = function getStyleClass_4(){
  return Ltripleplay_ui_Button_2_classLit;
}
;
_.toString$ = function toString_31(){
  return 'Button(' + this.text_0._value + ')';
}
;
var Ltripleplay_ui_Button_2_classLit = createForClass('tripleplay.ui', 'Button', 48, Ltripleplay_ui_AbstractTextButton_2_classLit);
function GameInteractionArea$ChangeViewControl$ChangeViewButton(text_0){
  Button_0.call(this, text_0);
}

defineClass(624, 48, $intern_63, GameInteractionArea$ChangeViewControl$ChangeViewButton);
_.getStyleClass = function getStyleClass_5(){
  return Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$ChangeViewButton_2_classLit;
}
;
var Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$ChangeViewButton_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameInteractionArea/ChangeViewControl/ChangeViewButton', 624, Ltripleplay_ui_Button_2_classLit);
function GameInteractionArea$ChangeViewControl$CountLabel(this$1, value_0){
  this.this$11 = this$1;
  Label_0.call(this, '' + value_0._value.value_0);
  $addConnection(value_0, new GameInteractionArea$ChangeViewControl$CountLabel$1(this));
}

defineClass(625, 11, $intern_50, GameInteractionArea$ChangeViewControl$CountLabel);
_.getStyleClass = function getStyleClass_6(){
  return Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$CountLabel_2_classLit;
}
;
var Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$CountLabel_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameInteractionArea/ChangeViewControl/CountLabel', 625, Ltripleplay_ui_Label_2_classLit);
function GameInteractionArea$ChangeViewControl$CountLabel$1(this$2){
  this.this$21 = this$2;
}

defineClass(682, 953, {}, GameInteractionArea$ChangeViewControl$CountLabel$1);
_.onEmit = function onEmit_23(integer){
  this.this$21.text_0.updateAndNotify('' + integer.value_0, false);
  $using($in_0($to($add_16($then($using($in_0($to($add_17(this.this$21.this$11.this$01.iface.anim, new Animation$One(new AnimBuilder$2(this.this$21.layer))), 1.2000000476837158), 250), ($clinit_Interpolator() , EASE_INOUT))), new Animation$One(new AnimBuilder$2(this.this$21.layer))), 1), 250), EASE_INOUT);
}
;
var Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$CountLabel$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameInteractionArea/ChangeViewControl/CountLabel/1', 682, Lreact_Slot_2_classLit);
function $createLeftSideLayerToCoverShiftingEmployees(this$static, width_0, height){
  var sideLayer;
  sideLayer = new Layers$2(width_0, height);
  $addAt(this$static.layer, sideLayer, 0, 0);
}

function GameScreen(screenStack, company){
  var playableWorldFactory, product, userGeneratingEntity, end, gameEnd, hostName;
  ScreenStack$UIScreen.call(this, game_0.plat);
  this.timeLabel = new Label_0('');
  this.usersLabel = new Label_0('');
  this.screenStack = checkNotNull(screenStack);
  this.gameWorld = (playableWorldFactory = new PlayableWorldFactory(game_0.config, company) , product = ($nextFeatureNumber(playableWorldFactory.world.featureGenerationSystem) , playableWorldFactory.world.featureDevelopmentSystem.inefficiencyFactor.updateAndNotify(new Float(0.1), false) , playableWorldFactory.world.exposure.updateAndNotify(new Float($intern_39), false) , playableWorldFactory.world.users.updateAndNotify(new Float($intern_2), false) , userGeneratingEntity = $makeCompletedFeature(($clinit_FeatureFactory() , new FeatureFactory(playableWorldFactory.world))) , $set_8(playableWorldFactory.world.usersPerHour, userGeneratingEntity.id_0, 25) , $set_8(playableWorldFactory.world.vulnerability, userGeneratingEntity.id_0, 10) , $makeDevelopers(playableWorldFactory) , end = $add_21($create_0(playableWorldFactory.world), playableWorldFactory.world.timeTrigger, playableWorldFactory.world.event_0, initValues(getClassLiteralForArray(Ltripleplay_entity_Component_2_classLit, 1), $intern_1, 37, 0, [])) , gameEnd = playableWorldFactory.world.gameTime._value.now_0 + 864000 , $set_10(playableWorldFactory.world.timeTrigger, end.id_0, gameEnd) , $set_9(playableWorldFactory.world.event_0, end.id_0, new PlayableWorldFactory$1(playableWorldFactory)) , playableWorldFactory.world.gameEnd.updateAndNotify(valueOf(gameEnd), false) , $createIn(new DefaultNarrativeScript, playableWorldFactory.world) , playableWorldFactory.world.company.updateAndNotify(playableWorldFactory.company, false) , playableWorldFactory.world) , $addConnection(product.onGameEnd, new GameScreen$1(this, product)) , product);
  new GameScreen$2(this, this.gameWorld, ($clinit_SystemPriority() , UI_LEVEL).value_0);
  new GameScreen$3(this, this.gameWorld, UI_LEVEL.value_0);
  $connect(this.gameWorld, this.update, this.paint);
  (hostName = $wnd.location.hostname , $equals(hostName, '127.0.0.1')) && $addConnection(game_0.plat.input_0.keyboardEvents, new DebugMode(this.gameWorld));
}

defineClass(712, 93, {}, GameScreen);
_.game_0 = function game_7(){
  return game_0;
}
;
_.wasShown = function wasShown_3(){
  var viewSize, contentBounds, root, builder, content_0, content_1;
  $closeOnHide(this, $addConnection(game_0.update, new Signal$1(this.update)));
  $closeOnHide(this, $addConnection(game_0.paint, new Signal$1(this.paint)));
  viewSize = game_0.plat.graphics.viewSize;
  contentBounds = game_0.bounds;
  root = $createRoot(this.iface, new AbsoluteLayout, (builder = newSheetBuilder(game_0.plat.graphics) , $add_28(builder, Ltripleplay_ui_Label_2_classLit, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , COLOR), valueOf(-1))])) , $create_1(builder)), this.layer);
  content_0 = (content_1 = new Group($offPolicy($gap(($clinit_AxisLayout() , new AxisLayout$Vertical), 0), ($clinit_AxisLayout$Policy() , STRETCH))) , $add_8(content_1, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$setConstraint(new GameScreen$TopStatusBar(this), new Constraints$2)])) , $add_8(content_1, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$setConstraint(new MainUIGroup(this.gameWorld, this.iface, root), (null , UNIFORM_STRETCHED))])) , content_1);
  $setSize_7($addStyles_0($add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [at(content_0, contentBounds.bounds.x_0, contentBounds.bounds.y_0, contentBounds.bounds.width_0, contentBounds.bounds.height_0)])), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, new Background$1($intern_56))])), game_0.plat.graphics.viewSize);
  viewSize.width_0 > contentBounds.bounds.width_0 && $createLeftSideLayerToCoverShiftingEmployees(this, (viewSize.width_0 - contentBounds.bounds.width_0) / 2, viewSize.height_0);
  $loop(($clinit_Jukebox() , $clinit_Jukebox() , SINGLETON), (checkState_0(!!instance_2, 'Must be initialized first') , instance_2).GAME_THEME);
}
;
var Ledu_bsu_cybersec_core_ui_GameScreen_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameScreen', 712, Ltripleplay_game_ScreenStack$UIScreen_2_classLit);
function GameScreen$1(this$0, val$product){
  this.this$01 = this$0;
  this.val$product2 = val$product;
}

defineClass(714, 968, {}, GameScreen$1);
_.onEmit_0 = function onEmit_24(){
  $replace_1(this.this$01.screenStack, new EndScreen(this.this$01.screenStack, this.val$product2), new SlideTransition(this.this$01.screenStack));
}
;
var Ledu_bsu_cybersec_core_ui_GameScreen$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameScreen/1', 714, Lreact_UnitSlot_2_classLit);
function GameScreen$2(this$0, $anonymous0, $anonymous1){
  var updater;
  this.this$01 = this$0;
  System.call(this, $anonymous0, $anonymous1);
  updater = $add_20($create_0(this.this$01.gameWorld), this.this$01.gameWorld.onUpdate);
  $set_9(this.this$01.gameWorld.onUpdate, updater.id_0, new GameScreen$2$1(this));
  this.formatter = game_0.config.formatter;
  this.now_0 = {l:1424336, m:14641, h:0};
}

defineClass(715, 40, {}, GameScreen$2);
_.isInterested = function isInterested_17(entity){
  return false;
}
;
_.now_0 = {l:0, m:0, h:0};
var Ledu_bsu_cybersec_core_ui_GameScreen$2_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameScreen/2', 715, Ltripleplay_entity_System_2_classLit);
function GameScreen$2$1(this$1){
  this.this$11 = this$1;
}

defineClass(716, 1, {}, GameScreen$2$1);
_.update_0 = function update_20(clock){
  var day, text_0, tick;
  tick = fromInt(this.this$11.this$01.gameWorld.gameTime._value.now_0);
  this.this$11.now_0 = add_8({l:1424336, m:14641, h:0}, tick);
  day = ~~((this.this$11.this$01.gameWorld.gameTime._value.now_0 + 28800) / 86400) + 1;
  text_0 = 'Day ' + day + ' ' + $format_0(this.this$11.formatter, mul(this.this$11.now_0, {l:$intern_2, m:0, h:0}));
  this.this$11.this$01.timeLabel.text_0.updateAndNotify(text_0, false);
}
;
var Ledu_bsu_cybersec_core_ui_GameScreen$2$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameScreen/2/1', 716, Ljava_lang_Object_2_classLit);
function GameScreen$3(this$0, $anonymous0, $anonymous1){
  this.this$01 = this$0;
  System.call(this, $anonymous0, $anonymous1);
}

defineClass(717, 40, {}, GameScreen$3);
_.isInterested = function isInterested_18(entity){
  return true;
}
;
_.update_1 = function update_21(clock, entities){
  var numberOfUsers;
  numberOfUsers = this.this$01.gameWorld.users._value.value_0;
  this.this$01.usersLabel.text_0.updateAndNotify('Users: ' + round_int(numberOfUsers), false);
}
;
var Ledu_bsu_cybersec_core_ui_GameScreen$3_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameScreen/3', 717, Ltripleplay_entity_System_2_classLit);
function GameScreen$TopStatusBar(this$0){
  Group.call(this, ($clinit_AxisLayout() , new AxisLayout$Horizontal));
  this.SHIM_WIDTH = game_0.bounds.bounds.height_0 * $intern_41;
  $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$setConstraint(new Shim(0, 0), new Constraints$3(this.SHIM_WIDTH, 0))]));
  $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$setConstraint($addStyles_0(this$0.timeLabel, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [($clinit_Style() , HALIGN).left_0])), (null , UNIFORM_STRETCHED))]));
  $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$setConstraint(new Shim(0, 0), new Constraints$3(this.SHIM_WIDTH, 0))]));
  $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$setConstraint($addStyles_0(this$0.usersLabel, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [HALIGN.left_0])), (null , UNIFORM_STRETCHED))]));
  $addStyles_0(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, new Background$1($intern_43))]));
}

defineClass(713, 20, $intern_48, GameScreen$TopStatusBar);
_.SHIM_WIDTH = 0;
var Ledu_bsu_cybersec_core_ui_GameScreen$TopStatusBar_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'GameScreen/TopStatusBar', 713, Ltripleplay_ui_Group_2_classLit);
function InteractionAreaGroup$1(){
  Background.call(this);
}

defineClass(874, 131, {}, InteractionAreaGroup$1);
_.instantiate = function instantiate_0(size_0){
  return new Background$LayerInstance(this, size_0, new InteractionAreaGroup$1$1(size_0));
}
;
var Ledu_bsu_cybersec_core_ui_InteractionAreaGroup$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'InteractionAreaGroup/1', 874, Ltripleplay_ui_Background_2_classLit);
function InteractionAreaGroup$1$1(val$size){
  this.val$size2 = val$size;
  Layer.call(this);
}

defineClass(875, 21, $intern_59, InteractionAreaGroup$1$1);
_.paintImpl = function paintImpl_1(surf){
  $draw_0(surf, ($clinit_InteractionAreaGroup() , COMPANY_LOGO), this.val$size2.width_0, this.val$size2.height_0);
}
;
var Ledu_bsu_cybersec_core_ui_InteractionAreaGroup$1$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'InteractionAreaGroup/1/1', 875, Lplayn_scene_Layer_2_classLit);
function $clinit_Jukebox(){
  $clinit_Jukebox = emptyMethod;
  SINGLETON = new Jukebox;
}

function $loop(this$static, track){
  checkNotNull(track);
  if (!this$static.currentTrack) {
    $startPlaying(this$static, track);
  }
   else if (this$static.currentTrack != track) {
    $stop_0(this$static.currentTrack);
    $startPlaying(this$static, track);
  }
}

function $registerSfx(this$static, sfx){
  $addAll_0(this$static.sfx, sfx);
  return this$static;
}

function $startPlaying(this$static, track){
  this$static.currentTrack = track;
  if (!this$static.muted._value.value_0) {
    track.looping = true;
    !!track.impl && track.impl.setLooping_0(true);
    track.playing = true;
    !!track.impl && track.impl.play_0();
  }
}

function $toggleMute(this$static){
  this$static.muted.updateAndNotify(($clinit_Boolean() , this$static.muted._value.value_0?FALSE:TRUE), false);
}

function Jukebox(){
  this.muted = ($clinit_AbstractValue() , new Value(($clinit_Boolean() , $clinit_Boolean() , FALSE)));
  this.sfx = new ArrayList;
  $addConnection(this.muted, new Jukebox$1(this));
  $addConnection(this.muted, new Jukebox$2(this));
}

defineClass(538, 1, {}, Jukebox);
var SINGLETON;
var Ledu_bsu_cybersec_core_ui_Jukebox_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'Jukebox', 538, Ljava_lang_Object_2_classLit);
function Jukebox$1(this$0){
  this.this$01 = this$0;
}

defineClass(539, 953, {}, Jukebox$1);
_.onEmit = function onEmit_25(muted){
  !muted.value_0 && !!this.this$01.currentTrack?$play_0(this.this$01.currentTrack):muted.value_0 && !!this.this$01.currentTrack && $stop_0(this.this$01.currentTrack);
}
;
var Ledu_bsu_cybersec_core_ui_Jukebox$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'Jukebox/1', 539, Lreact_Slot_2_classLit);
function $muteSounds(this$static){
  var s, s$iterator;
  for (s$iterator = new AbstractList$IteratorImpl(this$static.this$01.sfx); s$iterator.i < s$iterator.this$01_0.size_1();) {
    s = (checkCriticalElement(s$iterator.i < s$iterator.this$01_0.size_1()) , s$iterator.this$01_0.get_0(s$iterator.last = s$iterator.i++));
    this$static.storedVolumes.put(s, new Float(s.volume_1()));
    s.setVolume_1(0);
  }
}

function $restoreVolumes(this$static){
  var s, s$iterator;
  for (s$iterator = $iterator_0(new AbstractMap$1(this$static.storedVolumes)); s$iterator.val$outerIter2.hasNext();) {
    s = $next_3(s$iterator);
    s.setVolume_1(this$static.storedVolumes.get_1(s).value_0);
  }
}

function Jukebox$2(this$0){
  this.this$01 = this$0;
  this.storedVolumes = ($clinit_Maps() , new HashMap);
}

defineClass(540, 953, {}, Jukebox$2);
_.onEmit = function onEmit_26(muted){
  muted.value_0?$muteSounds(this):$restoreVolumes(this);
}
;
var Ledu_bsu_cybersec_core_ui_Jukebox$2_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'Jukebox/2', 540, Lreact_Slot_2_classLit);
function LabelColorHighlightAmount(label_0){
  this.label_0 = checkNotNull(label_0);
}

defineClass(938, 1, {}, LabelColorHighlightAmount);
_.initial = function initial_0(){
  return 0;
}
;
_.set_1 = function set_2(value_0){
  var current, p2;
  current = (p2 = 1 - value_0 , $intern_45 | round_int(255 * value_0 + 51 * p2) << 16 | round_int(255 * value_0 + 82 * p2) << 8 | round_int(255 * value_0 + 53 * p2));
  $addStyles_0(this.label_0, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , COLOR), valueOf(current))]));
}
;
var Ledu_bsu_cybersec_core_ui_LabelColorHighlightAmount_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'LabelColorHighlightAmount', 938, Ljava_lang_Object_2_classLit);
function $stringify(list){
  var builder, i, limit, s;
  builder = new StringBuilder;
  for (i = 0 , limit = list.array.length; i < limit; i++) {
    s = (checkElementIndex(i, list.array.length) , list.array[i]);
    builder.string += s;
    i < limit - 1 && (builder.string += ', ' , builder);
    i == limit - 2 && (builder.string += 'and ' , builder);
  }
  return builder.string;
}

function $countDown(this$static){
  var game;
  --this$static.assetTypesYetToCache;
  this$static.assetTypesYetToCache == 0 && (game = game_0 , game.config.showConsent?$replace_1(this$static.screenStack, new ConsentScreen(game), new SlideTransition(this$static.screenStack)):$replace_1(this$static.screenStack, new StartingScreen(this$static.screenStack), new SlideTransition(this$static.screenStack)) , undefined);
}

function $startLoadingImages(this$static){
  var future, future$iterator, futures;
  futures = $cache(game_0.assets, values_17());
  for (future$iterator = new AbstractList$IteratorImpl(futures); future$iterator.i < future$iterator.this$01_0.size_1();) {
    future = (checkCriticalElement(future$iterator.i < future$iterator.this$01_0.size_1()) , future$iterator.this$01_0.get_0(future$iterator.last = future$iterator.i++));
    $onSuccess(future, new LoadingScreen$1(this$static));
    $onFailure(future, new LoadingScreen$2);
  }
  $onSuccess(collect_1(futures), new LoadingScreen$3(this$static));
}

function $startLoadingSounds(this$static){
  var allSoundsBuilder, sound, sound$iterator, sounds;
  sounds = new ArrayList;
  allSoundsBuilder = new ImmutableList$Builder;
  $addAll_2(allSoundsBuilder, (checkState_0(!!instance_2, 'Must be initialized first') , instance_2).all);
  $addAll_2(allSoundsBuilder, (checkState_0(!!instance_3, 'Must be initialized first') , instance_3).all);
  for (sound$iterator = copyOf(allSoundsBuilder.contents).iterator_0(); sound$iterator.hasNext();) {
    sound = sound$iterator.next_0();
    $add_0(sounds, sound.state);
    $onComplete(sound.state, new LoadingScreen$7(this$static));
  }
  $onComplete(collect_1(sounds), new LoadingScreen$8(this$static));
}

function $startLoadingTiles(this$static){
  var future, future$iterator, futures;
  futures = $cache_0(game_0.assets, ($clinit_GameAssets$TileKey() , initValues(getClassLiteralForArray(Ledu_bsu_cybersec_core_ui_GameAssets$TileKey_2_classLit, 1), $intern_1, 71, 0, [BACKGROUND_1, BACKGROUND_2, BACKGROUND_4, NARRATIVE_BACKGROUND_1, NARRATIVE_BACKGROUND_2, NARRATIVE_BACKGROUND_3, COMPANY_LOGO_WITH_ALPHA])));
  for (future$iterator = new AbstractList$IteratorImpl(futures); future$iterator.i < future$iterator.this$01_0.size_1();) {
    future = (checkCriticalElement(future$iterator.i < future$iterator.this$01_0.size_1()) , future$iterator.this$01_0.get_0(future$iterator.last = future$iterator.i++));
    $onSuccess(future, new LoadingScreen$4(this$static));
    $onFailure(future, new LoadingScreen$5);
  }
  $onSuccess(collect_1(futures), new LoadingScreen$6(this$static));
}

function LoadingScreen(screenStack){
  ScreenStack$UIScreen.call(this, game_0.plat);
  this.assetTypesYetToCache = 3;
  this.screenStack = checkNotNull(screenStack);
}

defineClass(547, 93, {}, LoadingScreen);
_.game_0 = function game_8(){
  return game_0;
}
;
_.wasShown = function wasShown_4(){
  var root, max_0, width_0, height;
  $closeOnHide(this, $addConnection(game_0.update, new Signal$1(this.update)));
  $closeOnHide(this, $addConnection(game_0.paint, new Signal$1(this.paint)));
  root = $setSize_7($createRoot(this.iface, ($clinit_AxisLayout() , new AxisLayout$Vertical), $create_1(newSheetBuilder(game_0.plat.graphics)), this.layer), game_0.plat.graphics.viewSize);
  $add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$addStyles(new Label_0('Loading...'), make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , COLOR), valueOf(-1))])))]));
  $addStyles(root, make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, new Background$1($intern_43))])));
  max_0 = values_17().length + ($clinit_GameAssets$TileKey() , initValues(getClassLiteralForArray(Ledu_bsu_cybersec_core_ui_GameAssets$TileKey_2_classLit, 1), $intern_1, 71, 0, [BACKGROUND_1, BACKGROUND_2, BACKGROUND_4, NARRATIVE_BACKGROUND_1, NARRATIVE_BACKGROUND_2, NARRATIVE_BACKGROUND_3, COMPANY_LOGO_WITH_ALPHA])).length + (checkState_0(!!instance_2, 'Must be initialized first') , instance_2).all.delegate.size_1() + (checkState_0(!!instance_3, 'Must be initialized first') , instance_3).all.delegate.size_1();
  width_0 = game_0.plat.graphics.viewSize.width_0;
  height = game_0.plat.graphics.viewSize.height_0;
  this.progressBar = new ProgressBar(max_0, width_0 * 0.550000011920929, height * $intern_44);
  $addCenterAt(this.layer, this.progressBar, width_0 / 2, height * 3 / 5);
  $startLoadingImages(this);
  $startLoadingTiles(this);
  $startLoadingSounds(this);
}
;
_.assetTypesYetToCache = 0;
var Ledu_bsu_cybersec_core_ui_LoadingScreen_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'LoadingScreen', 547, Ltripleplay_game_ScreenStack$UIScreen_2_classLit);
function $onEmit_11(this$static){
  $increment(this$static.this$01.progressBar);
}

function LoadingScreen$1(this$0){
  this.this$01 = this$0;
}

defineClass(548, 953, {}, LoadingScreen$1);
_.onEmit = function onEmit_27(image){
  $onEmit_11(this, image);
}
;
var Ledu_bsu_cybersec_core_ui_LoadingScreen$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'LoadingScreen/1', 548, Lreact_Slot_2_classLit);
function LoadingScreen$2(){
}

defineClass(549, 953, {}, LoadingScreen$2);
_.onEmit = function onEmit_28(throwable){
  $warn_0(game_0.plat.log_0, 'Failed to load image', throwable);
}
;
var Ledu_bsu_cybersec_core_ui_LoadingScreen$2_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'LoadingScreen/2', 549, Lreact_Slot_2_classLit);
function $onEmit_12(this$static){
  $countDown(this$static.this$01);
}

function LoadingScreen$3(this$0){
  this.this$01 = this$0;
}

defineClass(550, 953, {}, LoadingScreen$3);
_.onEmit = function onEmit_29(tiles){
  $onEmit_12(this, tiles);
}
;
var Ledu_bsu_cybersec_core_ui_LoadingScreen$3_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'LoadingScreen/3', 550, Lreact_Slot_2_classLit);
function $onEmit_13(this$static){
  $increment(this$static.this$01.progressBar);
}

function LoadingScreen$4(this$0){
  this.this$01 = this$0;
}

defineClass(551, 953, {}, LoadingScreen$4);
_.onEmit = function onEmit_30(tile){
  $onEmit_13(this, tile);
}
;
var Ledu_bsu_cybersec_core_ui_LoadingScreen$4_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'LoadingScreen/4', 551, Lreact_Slot_2_classLit);
function LoadingScreen$5(){
}

defineClass(552, 953, {}, LoadingScreen$5);
_.onEmit = function onEmit_31(throwable){
  $warn_0(game_0.plat.log_0, 'Failed to load tile', throwable);
}
;
var Ledu_bsu_cybersec_core_ui_LoadingScreen$5_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'LoadingScreen/5', 552, Lreact_Slot_2_classLit);
function $onEmit_14(this$static){
  $countDown(this$static.this$01);
}

function LoadingScreen$6(this$0){
  this.this$01 = this$0;
}

defineClass(553, 953, {}, LoadingScreen$6);
_.onEmit = function onEmit_32(tiles){
  $onEmit_14(this, tiles);
}
;
var Ledu_bsu_cybersec_core_ui_LoadingScreen$6_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'LoadingScreen/6', 553, Lreact_Slot_2_classLit);
function $onEmit_15(this$static){
  $increment(this$static.this$01.progressBar);
}

function LoadingScreen$7(this$0){
  this.this$01 = this$0;
}

defineClass(554, 953, {}, LoadingScreen$7);
_.onEmit = function onEmit_33(event_0){
  $onEmit_15(this, event_0);
}
;
var Ledu_bsu_cybersec_core_ui_LoadingScreen$7_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'LoadingScreen/7', 554, Lreact_Slot_2_classLit);
function LoadingScreen$8(this$0){
  this.this$01 = this$0;
}

defineClass(555, 953, {}, LoadingScreen$8);
_.onEmit = function onEmit_34(event_0){
  event_0.isSuccess()?$countDown(this.this$01):$warn(game_0.plat.log_0, 'Failed to load a sound: ' + event_0);
}
;
var Ledu_bsu_cybersec_core_ui_LoadingScreen$8_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'LoadingScreen/8', 555, Lreact_Slot_2_classLit);
function $clinit_MainUIGroup(){
  $clinit_MainUIGroup = emptyMethod;
  BACKGROUNDS = ($clinit_ImmutableList() , new RegularImmutableList(nullCheckedList(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [$getTile(game_0.assets, ($clinit_GameAssets$TileKey() , BACKGROUND_1)), $getTile(game_0.assets, BACKGROUND_2), $getTile(game_0.assets, BACKGROUND_4)]))));
  WORKER_X = game_0.bounds.bounds.width_0 * 0.30000001192092896;
}

function $configureUI(this$static, root){
  var backgroundIterator, e, e$iterator, employeeView, id_0;
  backgroundIterator = unmodifiableIterator(BACKGROUNDS.delegate.iterator());
  for (e$iterator = new AbstractList$IteratorImpl(this$static.gameWorld.workers); e$iterator.i < e$iterator.this$01_0.size_1();) {
    e = (checkCriticalElement(e$iterator.i < e$iterator.this$01_0.size_1()) , e$iterator.this$01_0.get_0(e$iterator.last = e$iterator.i++));
    id_0 = e.id_0;
    employeeView = new MainUIGroup$EmployeeView(this$static, id_0, root, backgroundIterator.next_0());
    $put_8(this$static.developerViews, valueOf(id_0), employeeView);
    $add_8(this$static, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [employeeView]));
  }
  $setConstraint_0(this$static.gameInteractionArea, ($clinit_AxisLayout() , new AxisLayout$Constraint(true, 2)));
  $add_8(this$static, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [this$static.gameInteractionArea]));
  new MainUIGroup$EmployeeAtWorkSystem(this$static, this$static.gameWorld);
}

function MainUIGroup(gameWorld, iface, root){
  $clinit_MainUIGroup();
  Group.call(this, $gap($offPolicy(($clinit_AxisLayout() , new AxisLayout$Vertical), ($clinit_AxisLayout$Policy() , STRETCH)), 0));
  this.focus_0 = ($clinit_AbstractValue() , new Value(null));
  this.developerViews = ($clinit_Maps() , new TreeMap);
  this.iface = checkNotNull(iface);
  this.gameWorld = checkNotNull(gameWorld);
  this.taskIconFactory = new MainUIGroup$TaskIconFactory(this);
  this.employeeViewUpdateSystem = new MainUIGroup$EmployeeViewUpdateSystem(this, gameWorld);
  this.gameInteractionArea = new GameInteractionArea(gameWorld, iface);
  $configureUI(this, root);
  $addConnection(this.focus_0, new MainUIGroup$1(this));
}

defineClass(791, 20, $intern_48, MainUIGroup);
var BACKGROUNDS, WORKER_X = 0;
var Ledu_bsu_cybersec_core_ui_MainUIGroup_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup', 791, Ltripleplay_ui_Group_2_classLit);
function MainUIGroup$1(this$0){
  this.this$01 = this$0;
}

defineClass(806, 1, {}, MainUIGroup$1);
_.onChange = function onChange_4(newSelection, previousSelection){
  !!previousSelection && $using($in_0($to($from_1($add_17(this.this$01.iface.anim, new Animation$One(new AxisLayoutWeightAnimationValue(previousSelection))), 3), 1), $intern_2), ($clinit_Interpolator() , EASE_OUT));
  !!newSelection && $using($in_0($to($from_1($add_17(this.this$01.iface.anim, new Animation$One(new AxisLayoutWeightAnimationValue(newSelection))), 1), 3), $intern_2), ($clinit_Interpolator() , EASE_OUT));
  !!previousSelection && !newSelection && $using($in_0($to($from_1($add_17(this.this$01.iface.anim, new Animation$One(new AxisLayoutWeightAnimationValue(this.this$01.gameInteractionArea))), 0), 2), $intern_2), ($clinit_Interpolator() , EASE_OUT));
  !previousSelection && !!newSelection && $using($in_0($to($from_1($add_17(this.this$01.iface.anim, new Animation$One(new AxisLayoutWeightAnimationValue(this.this$01.gameInteractionArea))), 2), 0), $intern_2), ($clinit_Interpolator() , EASE_OUT));
}
;
var Ledu_bsu_cybersec_core_ui_MainUIGroup$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup/1', 806, Ljava_lang_Object_2_classLit);
function MainUIGroup$EmployeeAtWorkSystem(this$0, world){
  this.this$01 = this$0;
  System.call(this, world, ($clinit_SystemPriority() , UI_LEVEL).value_0);
}

defineClass(795, 40, {}, MainUIGroup$EmployeeAtWorkSystem);
_.isInterested = function isInterested_19(entity){
  return $containsKey_0(this.this$01.developerViews, valueOf(entity.id_0));
}
;
_.update_1 = function update_22(clock, entities){
  var i, id_0, limit;
  for (i = 0 , limit = entities._size; i < limit; i++) {
    id_0 = entities._elems[i];
    $get_10(this.this$01.developerViews, valueOf(id_0)).atWork.updateAndNotify(($clinit_Boolean() , this.this$01.gameWorld.workHoursSystem.isWorkHours._value.value_0 && $isSet(($clinit_TaskFlags() , BOUND_TO_WORKDAY), $get_14(this.this$01.gameWorld.taskFlags, $get_14(this.this$01.gameWorld.task, id_0)))?TRUE:FALSE), false);
  }
}
;
var Ledu_bsu_cybersec_core_ui_MainUIGroup$EmployeeAtWorkSystem_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup/EmployeeAtWorkSystem', 795, Ltripleplay_entity_System_2_classLit);
function $createControlsAndBioGroup(this$static, root){
  var borderThickness, credential, credential$iterator, employeeDataGroup, nameFont, profile, spaceAroundNameAndTaskArea;
  profile = $get_13(this$static.this$01.gameWorld.profile, this$static.id_0);
  borderThickness = game_0.bounds.bounds.height_0 * $intern_46;
  employeeDataGroup = new Group($offPolicy(($clinit_AxisLayout() , new AxisLayout$Vertical), ($clinit_AxisLayout$Policy() , STRETCH)));
  for (credential$iterator = profile.credentials.iterator_0(); credential$iterator.hasNext();) {
    credential = credential$iterator.next_0();
    $add_8(employeeDataGroup, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$addStyles_0($addStyles_0(new Label_0(credential.name_0 + ' (' + credential.provider + ')'), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , COLOR), valueOf(-1))])), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [TEXT_WRAP.on, HALIGN.left_0]))]));
  }
  $addStyles_0($add_8(employeeDataGroup, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$addStyles_0($addStyles_0(new Label_0(profile.bio), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , COLOR), valueOf(-1))])), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [TEXT_WRAP.on, HALIGN.left_0]))])), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, $inset(new Background$3($intern_60, -5063215, borderThickness), borderThickness * 2))]));
  spaceAroundNameAndTaskArea = game_0.bounds.bounds.height_0 * $intern_62;
  nameFont = $derive((checkState_0(!!instance_1, 'Not yet initialized') , instance_1).REGULAR, game_0.bounds.bounds.height_0 * $intern_62);
  return $add_8(new Group(new AxisLayout$Vertical), initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [new Shim(0, spaceAroundNameAndTaskArea), $addStyles_0($addStyles_0(new Label_0(profile.firstName + ' ' + profile.lastName), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(COLOR, valueOf(-1))])), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(FONT_0, nameFont), new Style$Binding(COLOR, valueOf($intern_56))])), $add_8(new Group(new AxisLayout$Horizontal), initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$addStyles_0(new Label_2($getIcon(this$static.this$01.taskIconFactory, this$static.this$01.gameWorld.developmentTaskId)), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(COLOR, valueOf($intern_56))])), $createSkillLabel(this$static, this$static.developmentSkill), new Shim(game_0.bounds.bounds.height_0 * 0.0010000000474974513, 0), $addStyles_0(new Label_2($getIcon(this$static.this$01.taskIconFactory, this$static.this$01.gameWorld.maintenanceTaskId)), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(COLOR, valueOf($intern_56))])), $createSkillLabel(this$static, this$static.maintenanceSkill)])), new MainUIGroup$TaskSelector(this$static.this$01, root, $entity(this$static.this$01.gameWorld, this$static.id_0)), new Shim(0, spaceAroundNameAndTaskArea), employeeDataGroup, $setConstraint(new Shim(0, 0), (null , UNIFORM_STRETCHED))])).setConstraint(new AxisLayout$Constraint(true, 1));
}

function $createSkillLabel(this$static, skill){
  var updatingLabel;
  updatingLabel = new Label_0('' + skill._value.value_0);
  $addConnection(updatingLabel.text_0, new MainUIGroup$EmployeeView$2(this$static, updatingLabel));
  $addConnection(skill, new MainUIGroup$EmployeeView$3(updatingLabel));
  return updatingLabel;
}

function MainUIGroup$EmployeeView(this$0, id_0, root, background){
  this.this$01 = this$0;
  Group.call(this, $offPolicy(($clinit_AxisLayout() , new AxisLayout$Horizontal), ($clinit_AxisLayout$Policy() , STRETCH)));
  this.developmentSkill = ($clinit_AbstractValue() , new Value(valueOf(0)));
  this.maintenanceSkill = new Value(valueOf(0));
  this.atWork = new Value(($clinit_Boolean() , $clinit_Boolean() , TRUE));
  this.id_0 = id_0;
  checkNotNull(root);
  $addStyles_0(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , BACKGROUND), $withWorkHours(new ExpandableBackground$Builder(background), this$0.gameWorld.workHoursSystem))])).setConstraint((null , UNIFORM_STRETCHED));
  $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [$setConstraint($onClick_0(new TouchableLabel, new MainUIGroup$EmployeeView$1(this)), new AxisLayout$Constraint(true, 1)), $createControlsAndBioGroup(this, root)]));
  $add_13(this.layer, $get_13(this$0.gameWorld.sprite, id_0));
  $setX(this$0.gameWorld.position_0, id_0, ($clinit_MainUIGroup() , WORKER_X));
  $addConnection(this.atWork, new MainUIGroup$EmployeeView$4(this));
}

defineClass(792, 20, $intern_48, MainUIGroup$EmployeeView);
_.id_0 = 0;
var Ledu_bsu_cybersec_core_ui_MainUIGroup$EmployeeView_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup/EmployeeView', 792, Ltripleplay_ui_Group_2_classLit);
function $onEmit_16(this$static){
  var name_0;
  name_0 = $get_13(this$static.this$11.this$01.gameWorld.profile, this$static.this$11.id_0).firstName;
  if (maskUndefined(this$static.this$11.this$01.focus_0._value) !== maskUndefined(this$static.this$11)) {
    $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'expand'), name_0));
    this$static.this$11.this$01.focus_0.updateAndNotify(this$static.this$11, false);
  }
   else {
    $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'collapse'), name_0));
    this$static.this$11.this$01.focus_0.updateAndNotify(null, false);
  }
}

function MainUIGroup$EmployeeView$1(this$1){
  this.this$11 = this$1;
}

defineClass(797, 953, {}, MainUIGroup$EmployeeView$1);
_.onEmit = function onEmit_35(event_0){
  $onEmit_16(this, event_0);
}
;
var Ledu_bsu_cybersec_core_ui_MainUIGroup$EmployeeView$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup/EmployeeView/1', 797, Lreact_Slot_2_classLit);
function $onChange_3(this$static){
  $using($in_0($to($from_1($add_17(this$static.this$11.this$01.iface.anim, new Animation$One(new LabelColorHighlightAmount(this$static.val$updatingLabel2))), 1), 0), 850), ($clinit_Interpolator() , EASE_IN));
}

function MainUIGroup$EmployeeView$2(this$1, val$updatingLabel){
  this.this$11 = this$1;
  this.val$updatingLabel2 = val$updatingLabel;
}

defineClass(798, 1, {}, MainUIGroup$EmployeeView$2);
_.onChange = function onChange_5(value_0, oldValue){
  $onChange_3(this, oldValue);
}
;
var Ledu_bsu_cybersec_core_ui_MainUIGroup$EmployeeView$2_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup/EmployeeView/2', 798, Ljava_lang_Object_2_classLit);
function $onChange_4(this$static, value_0){
  this$static.val$updatingLabel2.text_0.updateAndNotify('' + value_0.value_0, false);
}

function MainUIGroup$EmployeeView$3(val$updatingLabel){
  this.val$updatingLabel2 = val$updatingLabel;
}

defineClass(799, 1, {}, MainUIGroup$EmployeeView$3);
_.onChange = function onChange_6(value_0, oldValue){
  $onChange_4(this, value_0, oldValue);
}
;
var Ledu_bsu_cybersec_core_ui_MainUIGroup$EmployeeView$3_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup/EmployeeView/3', 799, Ljava_lang_Object_2_classLit);
function MainUIGroup$EmployeeView$4(this$1){
  this.this$11 = this$1;
}

defineClass(800, 953, {}, MainUIGroup$EmployeeView$4);
_.onEmit = function onEmit_36(aBoolean){
  var sign;
  sign = aBoolean.value_0?1:-1;
  $using($in_0($to($add_17(this.this$11.this$01.iface.anim, new Animation$One(new MainUIGroup$EmployeeView$4$1(this))), sign * ($clinit_MainUIGroup() , WORKER_X)), 500), ($clinit_Interpolator() , EASE_INOUT));
}
;
var Ledu_bsu_cybersec_core_ui_MainUIGroup$EmployeeView$4_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup/EmployeeView/4', 800, Lreact_Slot_2_classLit);
function MainUIGroup$EmployeeView$4$1(this$2){
  this.this$21 = this$2;
}

defineClass(801, 1, {}, MainUIGroup$EmployeeView$4$1);
_.initial = function initial_1(){
  return $getX(this.this$21.this$11.this$01.gameWorld.position_0, this.this$21.this$11.id_0);
}
;
_.set_1 = function set_3(value_0){
  $setX(this.this$21.this$11.this$01.gameWorld.position_0, this.this$21.this$11.id_0, value_0);
}
;
var Ledu_bsu_cybersec_core_ui_MainUIGroup$EmployeeView$4$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup/EmployeeView/4/1', 801, Ljava_lang_Object_2_classLit);
function $track(this$static, id_0, selector){
  checkArgument(!this$static.map_0.containsKey(valueOf(id_0)));
  checkArgument(!this$static.map_0.containsValue(selector));
  this$static.map_0.put(valueOf(id_0), selector);
}

function MainUIGroup$EmployeeViewUpdateSystem(this$0, world){
  this.this$01 = this$0;
  System.call(this, world, ($clinit_SystemPriority() , UI_LEVEL).value_0);
  this.map_0 = ($clinit_Maps() , new HashMap);
  this.world = checkNotNull(world);
}

defineClass(794, 40, {}, MainUIGroup$EmployeeViewUpdateSystem);
_.isInterested = function isInterested_20(entity){
  return this.map_0.containsKey(valueOf(entity.id_0));
}
;
_.update_1 = function update_23(clock, entities){
  var i, id_0, limit, sel, taskId, view, displayedDevelopmentSkill, displayedMaintenanceSkill;
  for (i = 0 , limit = entities._size; i < limit; i++) {
    id_0 = entities._elems[i];
    sel = this.map_0.get_1(valueOf(id_0));
    taskId = $get_14(this.world.task, id_0);
    sel.selectedTaskId != taskId && $select(sel, taskId);
    view = checkNotNull_0($get_10(this.this$01.developerViews, valueOf(id_0)), 'Missing developer');
    displayedDevelopmentSkill = round_int($get_12(view.this$01.gameWorld.developmentSkill, view.id_0));
    view.developmentSkill.updateAndNotify(valueOf(displayedDevelopmentSkill), false);
    displayedMaintenanceSkill = round_int($get_12(view.this$01.gameWorld.maintenanceSkill, view.id_0));
    view.maintenanceSkill.updateAndNotify(valueOf(displayedMaintenanceSkill), false);
    $setY(view.this$01.gameWorld.position_0, view.id_0, view._size.height_0 * $intern_35);
  }
}
;
var Ledu_bsu_cybersec_core_ui_MainUIGroup$EmployeeViewUpdateSystem_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup/EmployeeViewUpdateSystem', 794, Ltripleplay_entity_System_2_classLit);
function $getIcon(this$static, taskId){
  var imageHeight, scale, taskFlags, tile, viewHeight;
  taskFlags = $get_14(this$static.this$01.gameWorld.taskFlags, taskId);
  if ($in(($clinit_TaskFlags() , new TaskFlags$FlagQuery(initValues(getClassLiteralForArray(Ledu_bsu_cybersec_core_TaskFlags_2_classLit, 1), $intern_1, 70, 0, [DEVELOPMENT, MAINTENANCE]))), taskFlags)) {
    tile = $isSet(DEVELOPMENT, taskFlags)?$tile($getImage(game_0.assets, ($clinit_GameAssets$ImageKey() , DEVELOPMENT_0))):$tile($getImage(game_0.assets, ($clinit_GameAssets$ImageKey() , MAINTENANCE_0)));
    imageHeight = tile.displayHeight;
    viewHeight = game_0.bounds.bounds.height_0;
    scale = viewHeight * $intern_38 / imageHeight;
    return new Icons$2(new Icons$1(tile), scale);
  }
   else {
    return null;
  }
}

function MainUIGroup$TaskIconFactory(this$0){
  this.this$01 = this$0;
}

defineClass(796, 1, {}, MainUIGroup$TaskIconFactory);
var Ledu_bsu_cybersec_core_ui_MainUIGroup$TaskIconFactory_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup/TaskIconFactory', 796, Ljava_lang_Object_2_classLit);
function $setRelay(this$static, relay){
  this$static._relay.close_0();
  this$static._relay = relay;
}

function MenuItem(label_0){
  TextWidget.call(this);
  this.text_0 = ($clinit_AbstractValue() , new Value(null));
  this.icon = new Value(null);
  this._relay = ($clinit_Closeable$Util() , NOOP);
  this._preferredSize = new Dimension_0(0, 0);
  this.text_0.updateAndNotify(label_0, false);
  $addConnection(this.text_0, new Element$6(this, true));
  $addConnection(this.icon, new TextWidget$1(this));
  this.icon.updateAndNotify(null, false);
}

defineClass(174, 28, $intern_64);
_.clicked_0 = function clicked_3(){
  return this._behave.clicked;
}
;
_.createBehavior = function createBehavior_3(){
  return new MenuItem$1(this);
}
;
_.createLayoutData = function createLayoutData_2(hintX, hintY){
  return new Element$SizableLayoutData(this, new TextWidget$TextLayoutData(this, hintX, hintY), this._preferredSize);
}
;
_.getStyleClass = function getStyleClass_7(){
  return Ltripleplay_ui_MenuItem_2_classLit;
}
;
_.icon_0 = function icon_3(){
  return this.icon._value;
}
;
_.selected_0 = function selected_2(){
  return this._behave.selected;
}
;
_.text_1 = function text_42(){
  return this.text_0._value;
}
;
var Ltripleplay_ui_MenuItem_2_classLit = createForClass('tripleplay.ui', 'MenuItem', 174, Ltripleplay_ui_TextWidget_2_classLit);
function MainUIGroup$TaskItem(this$0, taskId){
  MenuItem.call(this, $get_13(this$0.gameWorld.name_0, taskId));
  this.taskId = taskId;
  this.icon.updateAndNotify($getIcon(this$0.taskIconFactory, taskId), false);
}

defineClass(339, 174, $intern_64, MainUIGroup$TaskItem);
_.taskId = 0;
var Ledu_bsu_cybersec_core_ui_MainUIGroup$TaskItem_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup/TaskItem', 339, Ltripleplay_ui_MenuItem_2_classLit);
function $select(this$static, taskId){
  var taskIcon;
  if (this$static.selectedTaskId != taskId) {
    this$static.selectedTaskId = taskId;
    $setEnabled(this$static, $isSet(($clinit_TaskFlags() , REASSIGNABLE), $get_14(this$static.this$01.gameWorld.taskFlags, taskId)));
    $setText(this$static, $get_13(this$static.this$01.gameWorld.name_0, taskId));
    taskIcon = $getIcon(this$static.this$01.taskIconFactory, this$static.selectedTaskId);
    this$static.icon.updateAndNotify(taskIcon, false);
  }
}

function MainUIGroup$TaskSelector(this$0, root, worker){
  var menuHost, popUnder, taskNameUpdater;
  this.this$01 = this$0;
  Button.call(this);
  $select(this, $get_14(this$0.gameWorld.task, worker.id_0));
  menuHost = new MenuHost_0(this$0.iface, root);
  popUnder = new BoxPoint_0(0, 1, 0, 2);
  $addStyles_0(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_MenuHost() , TRIGGER_POINT), new MenuHost$1(popUnder))]));
  $onClick(this, new MainUIGroup$TaskSelector$1(this, menuHost, worker));
  $track(this$0.employeeViewUpdateSystem, worker.id_0, this);
  taskNameUpdater = $add_20($create_0(this.this$01.gameWorld), this.this$01.gameWorld.onUpdate);
  $set_9(this.this$01.gameWorld.onUpdate, taskNameUpdater.id_0, new MainUIGroup$TaskSelector$2(this));
}

defineClass(793, 48, $intern_63, MainUIGroup$TaskSelector);
_.selectedTaskId = 0;
var Ledu_bsu_cybersec_core_ui_MainUIGroup$TaskSelector_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup/TaskSelector', 793, Ltripleplay_ui_Button_2_classLit);
function $onEmit_17(this$static, button){
  var pop_0, menu;
  if ($isSet_0(button, ($clinit_Element$Flag() , ENABLED))) {
    this$static.timeEnabledStatus = this$static.gameTimeSystem.enabled;
    $setEnabled_0(this$static.gameTimeSystem, false);
    pop_0 = new MenuHost$Pop(button, (menu = new Menu($gap($offPolicy(($clinit_AxisLayout() , new AxisLayout$Vertical), ($clinit_AxisLayout$Policy() , STRETCH)), 3)) , $add_8(menu, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [new MainUIGroup$TaskItem(this$static.this$11.this$01, this$static.this$11.this$01.gameWorld.developmentTaskId)])) , $add_8(menu, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [new MainUIGroup$TaskItem(this$static.this$11.this$01, this$static.this$11.this$01.gameWorld.maintenanceTaskId)])) , menu));
    $addConnection(pop_0.menu._itemTriggered, new MainUIGroup$TaskSelector$1$2(this$static, button, this$static.val$worker3));
    $addConnection(pop_0.menu._deactivated, new MainUIGroup$TaskSelector$1$1(this$static));
    $popup(this$static.val$menuHost2, pop_0);
  }
}

function $restoreGameTimeSystemToPreviousState(this$static){
  $setEnabled_0(this$static.gameTimeSystem, this$static.timeEnabledStatus);
}

function MainUIGroup$TaskSelector$1(this$1, val$menuHost, val$worker){
  this.this$11 = this$1;
  this.val$menuHost2 = val$menuHost;
  this.val$worker3 = val$worker;
  this.gameTimeSystem = this.this$11.this$01.gameWorld.gameTimeSystem;
}

defineClass(802, 953, {}, MainUIGroup$TaskSelector$1);
_.onEmit = function onEmit_37(button){
  $onEmit_17(this, button);
}
;
_.timeEnabledStatus = false;
var Ledu_bsu_cybersec_core_ui_MainUIGroup$TaskSelector$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup/TaskSelector/1', 802, Lreact_Slot_2_classLit);
function $onEmit_18(this$static){
  $restoreGameTimeSystemToPreviousState(this$static.this$21);
}

function MainUIGroup$TaskSelector$1$1(this$2){
  this.this$21 = this$2;
}

defineClass(803, 953, {}, MainUIGroup$TaskSelector$1$1);
_.onEmit = function onEmit_38(elements){
  $onEmit_18(this, elements);
}
;
var Ledu_bsu_cybersec_core_ui_MainUIGroup$TaskSelector$1$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup/TaskSelector/1/1', 803, Lreact_Slot_2_classLit);
function MainUIGroup$TaskSelector$1$2(this$2, val$button, val$worker){
  this.this$21 = this$2;
  this.val$button2 = val$button;
  this.val$worker3 = val$worker;
}

defineClass(804, 953, {}, MainUIGroup$TaskSelector$1$2);
_.onEmit = function onEmit_39(menuItem){
  var assignedTaskId, name_0, task;
  this.val$button2.text_0.updateAndNotify(menuItem.text_0._value, false);
  assignedTaskId = menuItem.taskId;
  $set_10(this.this$21.this$11.this$01.gameWorld.task, this.val$worker3.id_0, assignedTaskId);
  name_0 = $get_13(this.this$21.this$11.this$01.gameWorld.profile, this.val$worker3.id_0).firstName;
  task = $get_13(this.this$21.this$11.this$01.gameWorld.name_0, assignedTaskId);
  $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'task'), name_0 + ':' + task));
}
;
var Ledu_bsu_cybersec_core_ui_MainUIGroup$TaskSelector$1$2_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup/TaskSelector/1/2', 804, Lreact_Slot_2_classLit);
function MainUIGroup$TaskSelector$2(this$1){
  this.this$11 = this$1;
}

defineClass(805, 1, {}, MainUIGroup$TaskSelector$2);
_.update_0 = function update_24(clock){
  $setText(this.this$11, $get_13(this.this$11.this$01.gameWorld.name_0, this.this$11.selectedTaskId));
}
;
var Ledu_bsu_cybersec_core_ui_MainUIGroup$TaskSelector$2_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MainUIGroup/TaskSelector/2', 805, Ljava_lang_Object_2_classLit);
function initialize_0(assets){
  return !instance_2?(instance_2 = new MusicCache$1(assets)):instance_2;
}

defineClass(541, 1, {});
var instance_2;
var Ledu_bsu_cybersec_core_ui_MusicCache_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MusicCache', 541, Ljava_lang_Object_2_classLit);
function $load(this$static, name_0){
  var sound;
  sound = $getSound(this$static.val$assets1, 'music/' + name_0);
  sound.looping = true;
  !!sound.impl && sound.impl.setLooping_0(true);
  return sound;
}

function MusicCache$1(val$assets){
  this.val$assets1 = val$assets;
  this.GAME_THEME = $load(this, 'ChipperDoodle');
  this.INTRO_THEME = $load(this, 'Pamgaea');
  this.all = ($clinit_ImmutableList() , new RegularImmutableList(nullCheckedList(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [this.GAME_THEME, this.INTRO_THEME]))));
}

defineClass(542, 541, {}, MusicCache$1);
var Ledu_bsu_cybersec_core_ui_MusicCache$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MusicCache/1', 542, Ledu_bsu_cybersec_core_ui_MusicCache_2_classLit);
function $clinit_MuteCheckBox(){
  $clinit_MuteCheckBox = emptyMethod;
  muteImage = $getImage(game_0.assets, ($clinit_GameAssets$ImageKey() , MUTE));
  unmuteImage = $getImage(game_0.assets, UNMUTE);
}

function $updateIcon(this$static){
  this$static.icon.updateAndNotify(this$static.jukebox.muted._value.value_0?this$static.muteIcon:this$static.unmuteIcon, false);
}

function MuteCheckBox(){
  $clinit_MuteCheckBox();
  var desiredWidth, scale;
  Button.call(this);
  this.jukebox = ($clinit_Jukebox() , $clinit_Jukebox() , SINGLETON);
  desiredWidth = game_0.bounds.bounds.height_0 * $intern_62;
  scale = desiredWidth / $width(muteImage);
  this.muteIcon = new Icons$2(new Icons$1(muteImage), scale);
  this.unmuteIcon = new Icons$2(new Icons$1(unmuteImage), scale);
  this.icon.updateAndNotify(this.jukebox.muted._value.value_0?this.muteIcon:this.unmuteIcon, false);
  $onClick(this, new MuteCheckBox$1(this));
  $addConnection(this.jukebox.muted, new MuteCheckBox$2(this));
}

defineClass(679, 48, $intern_63, MuteCheckBox);
var muteImage, unmuteImage;
var Ledu_bsu_cybersec_core_ui_MuteCheckBox_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MuteCheckBox', 679, Ltripleplay_ui_Button_2_classLit);
function $onEmit_19(this$static){
  $toggleMute(this$static.this$01.jukebox);
}

function MuteCheckBox$1(this$0){
  this.this$01 = this$0;
}

defineClass(688, 953, {}, MuteCheckBox$1);
_.onEmit = function onEmit_40(button){
  $onEmit_19(this, button);
}
;
var Ledu_bsu_cybersec_core_ui_MuteCheckBox$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MuteCheckBox/1', 688, Lreact_Slot_2_classLit);
function $onEmit_20(this$static){
  $updateIcon(this$static.this$01);
}

function MuteCheckBox$2(this$0){
  this.this$01 = this$0;
}

defineClass(689, 953, {}, MuteCheckBox$2);
_.onEmit = function onEmit_41(aBoolean){
  $onEmit_20(this, aBoolean);
}
;
var Ledu_bsu_cybersec_core_ui_MuteCheckBox$2_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'MuteCheckBox/2', 689, Lreact_Slot_2_classLit);
function $increment(this$static){
  ++this$static.value_0;
  if (this$static.value_0 > this$static.max_0) {
    $warn(game_0.plat.log_0, 'Value (' + this$static.value_0 + ') exceeds max (' + this$static.max_0 + '); capping.');
    this$static.value_0 = this$static.max_0;
  }
}

function ProgressBar(max_0, width_0, height){
  Layer.call(this);
  checkArgument(max_0 >= 0);
  this.max_0 = max_0;
  this.width_0 = width_0;
  this.height_0 = height;
}

defineClass(649, 21, $intern_59, ProgressBar);
_.height_1 = function height_1(){
  return this.height_0;
}
;
_.paintImpl = function paintImpl_2(surf){
  var percent;
  percent = this.value_0 / this.max_0;
  surf.fillColor = $intern_56;
  $fillRect_0(surf, 0, 0, this.width_0, this.height_0);
  surf.fillColor = -1;
  $fillRect_0(surf, 0, 0, this.width_0 * percent, this.height_0);
}
;
_.width_1 = function width_2(){
  return this.width_0;
}
;
_.height_0 = 0;
_.max_0 = 0;
_.value_0 = 0;
_.width_0 = 0;
var Ledu_bsu_cybersec_core_ui_ProgressBar_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'ProgressBar', 649, Lplayn_scene_Layer_2_classLit);
function initialize_1(assets){
  return !instance_3?(instance_3 = new SfxCache$1(assets)):instance_3;
}

defineClass(545, 1, {});
var instance_3;
var Ledu_bsu_cybersec_core_ui_SfxCache_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'SfxCache', 545, Ljava_lang_Object_2_classLit);
function SfxCache$1(val$assets){
  this.val$assets1 = val$assets;
  this.CLICK = $getSound(this.val$assets1, 'sfx/click');
  this.SUCCESS = $getSound(this.val$assets1, 'sfx/success');
  this.all = ($clinit_ImmutableList() , new RegularImmutableList(nullCheckedList(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [this.CLICK, this.SUCCESS]))));
}

defineClass(546, 545, {}, SfxCache$1);
var Ledu_bsu_cybersec_core_ui_SfxCache$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'SfxCache/1', 546, Ledu_bsu_cybersec_core_ui_SfxCache_2_classLit);
function newSheetBuilder(gfx){
  var butBg, butSelBg, disabledChangeViewButtonBackground, font;
  font = (checkState_0(!!instance_1, 'Not yet initialized') , instance_1).REGULAR;
  butBg = $inset_1(new RoundRectBackground(gfx, $intern_65, 5, $intern_66, 2), 5, 6, 2, 6);
  butSelBg = $inset_1(new RoundRectBackground(gfx, $intern_65, 5, $intern_67, 2), 6, 5, 1, 7);
  disabledChangeViewButtonBackground = $inset_1(new RoundRectBackground(gfx, $intern_60, 5, $intern_66, 2), 5, 6, 2, 6);
  return $add_27($add_27($add_27($add_27($add_27($add_26($add_26($add_27($add_27($add_27($add_26($add_27($add_27($add_26($add_27($add_26($add_27($add_26($add_27($add_27($add_26($add_27(new Stylesheet$Builder, Ltripleplay_ui_Button_2_classLit, make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , BACKGROUND), butBg), new Style$Binding(FONT_0, font)]))), Ltripleplay_ui_Button_2_classLit, 2, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, butSelBg)])), Ltripleplay_ui_Button_2_classLit, make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(ACTION_SOUND, (checkState_0(!!instance_3, 'Must be initialized first') , instance_3).CLICK)]))), Ltripleplay_ui_ToggleButton_2_classLit, make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, butBg)]))), Ltripleplay_ui_ToggleButton_2_classLit, 2, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, butSelBg)])), Ltripleplay_ui_CheckBox_2_classLit, make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, $inset_1(new RoundRectBackground(gfx, $intern_65, 5, $intern_66, 2), 3, 2, 0, 3))]))), Ltripleplay_ui_CheckBox_2_classLit, 2, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, $inset_1(new RoundRectBackground(gfx, $intern_65, 5, $intern_67, 2), 3, 2, 0, 3))])), Ltripleplay_ui_Field_2_classLit, make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, $inset(new Background$2(-1), 5)), HALIGN.left_0]))), Ltripleplay_ui_Field_2_classLit, 1, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, $inset(new Background$2($intern_65), 5))])), Ltripleplay_ui_Menu_2_classLit, make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, $inset(new Background$3(-1, 0, 1), 6))]))), Ltripleplay_ui_MenuItem_2_classLit, make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, new Background$1(-1)), HALIGN.left_0, new Style$Binding(FONT_0, font)]))), Ltripleplay_ui_MenuItem_2_classLit, 2, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, new Background$1($intern_45)), new Style$Binding(COLOR, valueOf(-1))])), Ltripleplay_ui_Tabs_2_classLit, make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Tabs() , HIGHLIGHTER), new Tabs$2)]))), Ltripleplay_ui_Label_2_classLit, make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(FONT_0, font)]))), Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$ChangeViewButton_2_classLit, make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, butBg), new Style$Binding(FONT_0, font)]))), Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$ChangeViewButton_2_classLit, 2, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, butSelBg)])), Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$ChangeViewButton_2_classLit, 1, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, disabledChangeViewButtonBackground)])), Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$ChangeViewButton_2_classLit, make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [TEXT_EFFECT.pixelOutline]))), Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$ChangeViewButton_2_classLit, make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(HIGHLIGHT, valueOf($intern_56))]))), Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$ChangeViewButton_2_classLit, make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(COLOR, valueOf(-1))]))), Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$ChangeViewButton_2_classLit, make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(ACTION_SOUND, (checkState_0(!!instance_3, 'Must be initialized first') , instance_3).CLICK)]))), Ledu_bsu_cybersec_core_ui_GameInteractionArea$ChangeViewControl$CountLabel_2_classLit, make(initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(FONT_0, $derive(font, font.size_0 * $intern_61)), new Style$Binding(COLOR, valueOf(-1)), TEXT_EFFECT.pixelOutline, new Style$Binding(HIGHLIGHT, valueOf($intern_56))])));
}

function $disableButtons(this$static){
  $setEnabled(this$static.playButton, false);
  $setEnabled(this$static.creditsButton, false);
}

function StartingScreen(screenStack){
  var root, iconScaler, iconLogo, buttonFontSize, font, buttons;
  ScreenStack$UIScreen.call(this, game_0.plat);
  this.screenStack = checkNotNull(screenStack);
  root = $setSize_7($createRoot(this.iface, ($clinit_AxisLayout() , new AxisLayout$Vertical), $create_1(newSheetBuilder(game_0.plat.graphics)), this.layer), game_0.plat.graphics.viewSize);
  $getImage(game_0.assets, ($clinit_GameAssets$ImageKey() , LOGO));
  iconScaler = new IconScaler(game_0);
  iconLogo = $scale_0(iconScaler, LOGO, game_0.bounds.bounds.width_0 * $intern_61);
  buttonFontSize = game_0.bounds.bounds.height_0 * $intern_38;
  font = $derive((checkState_0(!!instance_1, 'Not yet initialized') , instance_1).REGULAR, buttonFontSize);
  buttons = initValues(getClassLiteralForArray(Ltripleplay_ui_Button_2_classLit, 1), $intern_1, 48, 0, [this.playButton = $onClick($addStyles_0(new Button_0('Start the Game!'), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(($clinit_Style() , FONT_0), font)])), new StartingScreen$1(this)), this.creditsButton = $onClick($addStyles_0(new Button_0('Credits'), initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(FONT_0, font)])), new StartingScreen$2(this))]);
  $add_8(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [new Label_2(iconLogo), buttons[0], new Shim(0, buttonFontSize / 2), buttons[1]]));
  $setStyles_0(root, initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Binding_2_classLit, 1), $intern_1, 6, 0, [new Style$Binding(BACKGROUND, new Background$1($intern_60))]));
}

defineClass(250, 93, {}, StartingScreen);
_.game_0 = function game_9(){
  return game_0;
}
;
_.wasShown = function wasShown_5(){
  $closeOnHide(this, $addConnection(game_0.update, new Signal$1(this.update)));
  $closeOnHide(this, $addConnection(game_0.paint, new Signal$1(this.paint)));
  $setEnabled(this.playButton, true);
  $setEnabled(this.creditsButton, true);
  $loop(($clinit_Jukebox() , $clinit_Jukebox() , SINGLETON), (checkState_0(!!instance_2, 'Must be initialized first') , instance_2).INTRO_THEME);
}
;
var Ledu_bsu_cybersec_core_ui_StartingScreen_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'StartingScreen', 250, Ltripleplay_game_ScreenStack$UIScreen_2_classLit);
function $onEmit_21(this$static){
  var company, employeePool, intro, assets;
  $emit(game_0.event_0, $label($action(new TrackedEvent$Builder('game'), 'start'), ''));
  $disableButtons(this$static.this$01);
  employeePool = ($clinit_EmployeePool() , new EmployeePool(game_0.assets));
  company = $withEmployees(new Company$Builder(employeePool));
  intro = new Introduction(company);
  $push_0(this$static.this$01.screenStack, new IntroScreen(this$static.this$01.screenStack, (assets = game_0.assets , new Introduction$1(intro, $getTile(assets, ($clinit_GameAssets$TileKey() , NARRATIVE_BACKGROUND_1)))), company), new SlideTransition(this$static.this$01.screenStack));
}

function StartingScreen$1(this$0){
  this.this$01 = this$0;
}

defineClass(718, 953, {}, StartingScreen$1);
_.onEmit = function onEmit_42(button){
  $onEmit_21(this, button);
}
;
var Ledu_bsu_cybersec_core_ui_StartingScreen$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'StartingScreen/1', 718, Lreact_Slot_2_classLit);
function $onEmit_22(this$static){
  $push_0(this$static.this$01.screenStack, new CreditScreen(this$static.this$01.screenStack), new SlideTransition(this$static.this$01.screenStack));
}

function StartingScreen$2(this$0){
  this.this$01 = this$0;
}

defineClass(719, 953, {}, StartingScreen$2);
_.onEmit = function onEmit_43(button){
  $onEmit_22(this, button);
}
;
var Ledu_bsu_cybersec_core_ui_StartingScreen$2_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'StartingScreen/2', 719, Lreact_Slot_2_classLit);
function $onClick_0(this$static, slot){
  $addConnection(this$static.onTouch, slot);
  return this$static;
}

function TouchableLabel(){
  Label_0.call(this, '');
  this.onTouch = ($clinit_AbstractSignal() , new Signal);
}

defineClass(926, 11, $intern_50, TouchableLabel);
_.createBehavior = function createBehavior_4(){
  return new TouchableLabel$1(this, this);
}
;
var Ledu_bsu_cybersec_core_ui_TouchableLabel_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'TouchableLabel', 926, Ltripleplay_ui_Label_2_classLit);
defineClass(975, 953, {});
_.onCancel = function onCancel(iact){
}
;
_.onDrag = function onDrag(iact){
}
;
_.onEmit = function onEmit_44(event_0){
  var iact;
  if (instanceOf(event_0, 223)) {
    iact = event_0;
    switch (iact.event_0.kind.ordinal) {
      case 0:
        this.onStart(iact);
        break;
      case 1:
        this.onDrag(iact);
        break;
      case 2:
        this.onEnd(iact);
        break;
      case 3:
        this.onCancel(iact);
    }
  }
}
;
_.onEnd = function onEnd(iact){
}
;
_.onStart = function onStart(iact){
}
;
var Lplayn_scene_Pointer$Listener_2_classLit = createForClass('playn.scene', 'Pointer/Listener', 975, Lreact_Slot_2_classLit);
function $resolveStyle(this$static, style){
  return resolveStyle(this$static._owner, style);
}

function $updateSelected(this$static, selected){
  var wasSelected;
  wasSelected = $isSet_0(this$static._owner, ($clinit_Element$Flag() , SELECTED));
  if (selected != wasSelected) {
    $set_1(this$static._owner, SELECTED, selected);
    $invalidate(this$static._owner);
  }
  return wasSelected;
}

function Behavior(owner){
  this._owner = owner;
}

defineClass(241, 975, {});
_.layout = function layout_5(){
  this._actionSound = $resolveStyle(this, ($clinit_Style() , ACTION_SOUND));
}
;
_.onDrag = function onDrag_0(iact){
  $isSet_0(this._owner, ($clinit_Element$Flag() , ENABLED)) && this.onHover(iact, $contains_2(this._owner, iact.local.x_0, iact.local.y_0));
}
;
_.onEnd = function onEnd_0(iact){
  this.onRelease(iact) && this.onClick(iact);
}
;
_.onStart = function onStart_0(iact){
  $isSet_0(this._owner, ($clinit_Element$Flag() , ENABLED)) && this.onPress(iact);
}
;
var Ltripleplay_ui_Behavior_2_classLit = createForClass('tripleplay.ui', 'Behavior', 241, Lplayn_scene_Pointer$Listener_2_classLit);
function TouchableLabel$1(this$0, $anonymous0){
  this.this$01 = this$0;
  Behavior.call(this, $anonymous0);
}

defineClass(927, 241, {}, TouchableLabel$1);
_.onClick = function onClick_0(iact){
}
;
_.onHover = function onHover(iact, inBounds){
}
;
_.onPress = function onPress(iact){
  iact.event_0.kind == ($clinit_Pointer$Event$Kind() , START) && $emit(this.this$01.onTouch, this.this$01);
}
;
_.onRelease = function onRelease(iact){
  return false;
}
;
var Ledu_bsu_cybersec_core_ui_TouchableLabel$1_2_classLit = createForClass('edu.bsu.cybersec.core.ui', 'TouchableLabel/1', 927, Ltripleplay_ui_Behavior_2_classLit);
function $configureVisibilityChangeEventMonitoring(instance){
  $doc.addEventListener('visibilitychange', function(){
    console.log('visibility change, hidden: ' + $doc.hidden);
    $doc.hidden?instance.onPageHide():instance.onPageShow();
  }
  );
}

function BackgroundMuter(){
  this.wasMuted = ($clinit_Jukebox() , $clinit_Jukebox() , SINGLETON).muted._value.value_0;
}

defineClass(395, 1, {}, BackgroundMuter);
_.onPageHide = function onPageHide(){
  this.wasMuted = ($clinit_Jukebox() , $clinit_Jukebox() , SINGLETON).muted._value.value_0;
  (null , SINGLETON).muted.updateAndNotify(($clinit_Boolean() , $clinit_Boolean() , TRUE), false);
}
;
_.onPageShow = function onPageShow(){
  ($clinit_Jukebox() , $clinit_Jukebox() , SINGLETON).muted.updateAndNotify(($clinit_Boolean() , this.wasMuted?TRUE:FALSE), false);
}
;
_.wasMuted = false;
var Ledu_bsu_cybersec_html_BackgroundMuter_2_classLit = createForClass('edu.bsu.cybersec.html', 'BackgroundMuter', 395, Ljava_lang_Object_2_classLit);
function $format_0(this$static, ms){
  var javaDate;
  javaDate = new Date_0(ms);
  return $format(this$static.format, javaDate, null);
}

function GWTDateFormatter(){
  this.format = ($clinit_DateTimeFormat_0() , getFormat($getDateTimeFormatInfo(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance_0))));
}

defineClass(535, 1, {}, GWTDateFormatter);
var Ledu_bsu_cybersec_html_GWTDateFormatter_2_classLit = createForClass('edu.bsu.cybersec.html', 'GWTDateFormatter', 535, Ljava_lang_Object_2_classLit);
function HtmlGameConfig(){
  this.formatter = new GWTDateFormatter;
  this.showConsent = getParameter('public') != null;
}

defineClass(391, 963, {}, HtmlGameConfig);
_.showConsent = false;
var Ledu_bsu_cybersec_html_HtmlGameConfig_2_classLit = createForClass('edu.bsu.cybersec.html', 'HtmlGameConfig', 391, Ledu_bsu_cybersec_core_GameConfig$Default_2_classLit);
function SimGameHtml$1(){
}

defineClass(363, 953, {}, SimGameHtml$1);
_.onEmit = function onEmit_45(event_0){
}
;
var Ledu_bsu_cybersec_html_SimGameHtml$1_2_classLit = createForClass('edu.bsu.cybersec.html', 'SimGameHtml/1', 363, Lreact_Slot_2_classLit);
defineClass(981, 1, {});
var Ljava_io_OutputStream_2_classLit = createForClass('java.io', 'OutputStream', 981, Ljava_lang_Object_2_classLit);
defineClass(982, 981, {});
var Ljava_io_FilterOutputStream_2_classLit = createForClass('java.io', 'FilterOutputStream', 982, Ljava_io_OutputStream_2_classLit);
function PrintStream(){
}

defineClass(560, 982, {}, PrintStream);
var Ljava_io_PrintStream_2_classLit = createForClass('java.io', 'PrintStream', 560, Ljava_io_FilterOutputStream_2_classLit);
function $charAt(this$static, index_0){
  return $charAt_0(this$static.string, index_0);
}

function $setLength(this$static, newLength){
  var oldLength;
  oldLength = this$static.string.length;
  newLength < oldLength?(this$static.string = $substring_0(this$static.string, 0, newLength)):newLength > oldLength && (this$static.string += valueOf_1(initDim(C_classLit, $intern_23, 0, newLength - oldLength, 7, 1)));
}

function AbstractStringBuilder(string){
  this.string = string;
}

defineClass(185, 1, {});
_.toString$ = function toString_32(){
  return this.string;
}
;
var Ljava_lang_AbstractStringBuilder_2_classLit = createForClass('java.lang', 'AbstractStringBuilder', 185, Ljava_lang_Object_2_classLit);
function ArithmeticException(){
  RuntimeException_0.call(this, 'divide by zero');
}

defineClass(374, 10, $intern_13, ArithmeticException);
var Ljava_lang_ArithmeticException_2_classLit = createForClass('java.lang', 'ArithmeticException', 374, Ljava_lang_RuntimeException_2_classLit);
function ArrayStoreException(message){
  RuntimeException_0.call(this, message);
}

defineClass(161, 10, $intern_13, ArrayStoreException);
var Ljava_lang_ArrayStoreException_2_classLit = createForClass('java.lang', 'ArrayStoreException', 161, Ljava_lang_RuntimeException_2_classLit);
function $clinit_Boolean(){
  $clinit_Boolean = emptyMethod;
  FALSE = new Boolean_0(false);
  TRUE = new Boolean_0(true);
}

function Boolean_0(value_0){
  this.value_0 = value_0;
}

function compare_1(x_0, y_0){
  return x_0 == y_0?0:x_0?1:-1;
}

defineClass(184, 1, {3:1, 184:1, 9:1}, Boolean_0);
_.compareTo = function compareTo_0(b){
  return compare_1(this.value_0, b.value_0);
}
;
_.equals$ = function equals_16(o){
  return instanceOf(o, 184) && o.value_0 == this.value_0;
}
;
_.hashCode$ = function hashCode_19(){
  return this.value_0?1231:1237;
}
;
_.toString$ = function toString_33(){
  return '' + this.value_0;
}
;
_.value_0 = false;
var FALSE, TRUE;
var Ljava_lang_Boolean_2_classLit = createForClass('java.lang', 'Boolean', 184, Ljava_lang_Object_2_classLit);
function digit(c){
  if (c >= 48 && c < 58) {
    return c - 48;
  }
  if (c >= 97 && c < 97) {
    return c - 97 + 10;
  }
  if (c >= 65 && c < 65) {
    return c - 65 + 10;
  }
  return -1;
}

function __parseAndValidateInt(s){
  var i, isTooLow, length_0, startIndex, toReturn;
  if (s == null) {
    throw new NumberFormatException('null');
  }
  length_0 = s.length;
  startIndex = length_0 > 0 && (s.charCodeAt(0) == 45 || s.charCodeAt(0) == 43)?1:0;
  for (i = startIndex; i < length_0; i++) {
    if (digit(s.charCodeAt(i)) == -1) {
      throw new NumberFormatException('For input string: "' + s + '"');
    }
  }
  toReturn = parseInt(s, 10);
  isTooLow = toReturn < $intern_12;
  if (isNaN(toReturn)) {
    throw new NumberFormatException('For input string: "' + s + '"');
  }
   else if (isTooLow || toReturn > $intern_0) {
    throw new NumberFormatException('For input string: "' + s + '"');
  }
  return toReturn;
}

defineClass(211, 1, {3:1, 211:1});
var Ljava_lang_Number_2_classLit = createForClass('java.lang', 'Number', 211, Ljava_lang_Object_2_classLit);
function compare_2(x_0, y_0){
  if (x_0 < y_0) {
    return -1;
  }
  if (x_0 > y_0) {
    return 1;
  }
  if (x_0 == y_0) {
    return 0;
  }
  return isNaN(x_0)?isNaN(y_0)?0:1:-1;
}

function Float(value_0){
  this.value_0 = value_0;
}

defineClass(31, 211, {3:1, 9:1, 31:1, 211:1}, Float);
_.compareTo = function compareTo_1(b){
  return compare_2(this.value_0, b.value_0);
}
;
_.equals$ = function equals_17(o){
  return instanceOf(o, 31) && o.value_0 == this.value_0;
}
;
_.hashCode$ = function hashCode_20(){
  return round_int(this.value_0);
}
;
_.toString$ = function toString_35(){
  return '' + this.value_0;
}
;
_.value_0 = 0;
var Ljava_lang_Float_2_classLit = createForClass('java.lang', 'Float', 31, Ljava_lang_Number_2_classLit);
function IllegalArgumentException(){
  RuntimeException.call(this);
}

function IllegalArgumentException_0(message){
  RuntimeException_0.call(this, message);
}

defineClass(32, 10, $intern_13, IllegalArgumentException, IllegalArgumentException_0);
var Ljava_lang_IllegalArgumentException_2_classLit = createForClass('java.lang', 'IllegalArgumentException', 32, Ljava_lang_RuntimeException_2_classLit);
function IllegalStateException(){
  RuntimeException.call(this);
}

function IllegalStateException_0(s){
  RuntimeException_0.call(this, s);
}

defineClass(27, 10, $intern_13, IllegalStateException, IllegalStateException_0);
var Ljava_lang_IllegalStateException_2_classLit = createForClass('java.lang', 'IllegalStateException', 27, Ljava_lang_RuntimeException_2_classLit);
function IndexOutOfBoundsException(){
  RuntimeException.call(this);
}

function IndexOutOfBoundsException_0(message){
  RuntimeException_0.call(this, message);
}

defineClass(86, 10, $intern_13, IndexOutOfBoundsException, IndexOutOfBoundsException_0);
var Ljava_lang_IndexOutOfBoundsException_2_classLit = createForClass('java.lang', 'IndexOutOfBoundsException', 86, Ljava_lang_RuntimeException_2_classLit);
function Integer(value_0){
  this.value_0 = value_0;
}

function compare_3(x_0, y_0){
  return x_0 < y_0?-1:x_0 > y_0?1:0;
}

function numberOfLeadingZeros_0(i){
  var m, n, y_0;
  if (i < 0) {
    return 0;
  }
   else if (i == 0) {
    return 32;
  }
   else {
    y_0 = -(i >> 16);
    m = y_0 >> 16 & 16;
    n = 16 - m;
    i = i >> m;
    y_0 = i - 256;
    m = y_0 >> 16 & 8;
    n += m;
    i <<= m;
    y_0 = i - 4096;
    m = y_0 >> 16 & 4;
    n += m;
    i <<= m;
    y_0 = i - 16384;
    m = y_0 >> 16 & 2;
    n += m;
    i <<= m;
    y_0 = i >> 14;
    m = y_0 & ~(y_0 >> 1);
    return n + 2 - m;
  }
}

function numberOfTrailingZeros(i){
  var r, rtn;
  if (i == 0) {
    return 32;
  }
   else {
    rtn = 0;
    for (r = 1; (r & i) == 0; r <<= 1) {
      ++rtn;
    }
    return rtn;
  }
}

function toUnsignedRadixString(value_0, radix){
  return (value_0 >>> 0).toString(radix);
}

function valueOf(i){
  var rebase, result;
  if (i > -129 && i < 128) {
    rebase = i + 128;
    result = ($clinit_Integer$BoxedValues() , boxedValues_0)[rebase];
    !result && (result = boxedValues_0[rebase] = new Integer(i));
    return result;
  }
  return new Integer(i);
}

defineClass(162, 211, {3:1, 9:1, 162:1, 211:1}, Integer);
_.compareTo = function compareTo_2(b){
  return compare_3(this.value_0, b.value_0);
}
;
_.equals$ = function equals_18(o){
  return instanceOf(o, 162) && o.value_0 == this.value_0;
}
;
_.hashCode$ = function hashCode_21(){
  return this.value_0;
}
;
_.toString$ = function toString_36(){
  return '' + this.value_0;
}
;
_.value_0 = 0;
var Ljava_lang_Integer_2_classLit = createForClass('java.lang', 'Integer', 162, Ljava_lang_Number_2_classLit);
function $clinit_Integer$BoxedValues(){
  $clinit_Integer$BoxedValues = emptyMethod;
  boxedValues_0 = initDim(Ljava_lang_Integer_2_classLit, $intern_1, 162, 256, 0, 1);
}

var boxedValues_0;
function compare_4(x_0, y_0){
  return lt(x_0, y_0)?-1:gt(x_0, y_0)?1:0;
}

function abs_0(x_0){
  return x_0 <= 0?0 - x_0:x_0;
}

function ceil_0(x_0){
  return Math.ceil(x_0);
}

function cos_0(x_0){
  return Math.cos(x_0);
}

function floor_0(x_0){
  return Math.floor(x_0);
}

function max_1(x_0, y_0){
  return x_0 > y_0?x_0:y_0;
}

function max_2(x_0, y_0){
  return x_0 > y_0?x_0:y_0;
}

function min_0(x_0, y_0){
  return x_0 < y_0?x_0:y_0;
}

function min_1(x_0, y_0){
  return x_0 < y_0?x_0:y_0;
}

function pow_0(x_0, exp_0){
  return Math.pow(x_0, exp_0);
}

function round_0(x_0){
  return Math.round(x_0);
}

function signum(f){
  return f > 0?1:f < 0?-1:0;
}

function sin_0(x_0){
  return Math.sin(x_0);
}

function sqrt_0(x_0){
  return Math.sqrt(x_0);
}

function NullPointerException(){
  RuntimeException.call(this);
}

function NullPointerException_0(message){
  RuntimeException_0.call(this, message);
}

defineClass(44, 10, {3:1, 18:1, 44:1, 10:1, 12:1}, NullPointerException, NullPointerException_0);
var Ljava_lang_NullPointerException_2_classLit = createForClass('java.lang', 'NullPointerException', 44, Ljava_lang_RuntimeException_2_classLit);
function NumberFormatException(message){
  IllegalArgumentException_0.call(this, message);
}

defineClass(203, 32, $intern_13, NumberFormatException);
var Ljava_lang_NumberFormatException_2_classLit = createForClass('java.lang', 'NumberFormatException', 203, Ljava_lang_IllegalArgumentException_2_classLit);
function StackTraceElement(methodName, fileName, lineNumber){
  this.className = 'Unknown';
  this.methodName = methodName;
  this.fileName = fileName;
  this.lineNumber = lineNumber;
}

defineClass(122, 1, {3:1, 122:1}, StackTraceElement);
_.equals$ = function equals_19(other){
  var st;
  if (instanceOf(other, 122)) {
    st = other;
    return this.lineNumber == st.lineNumber && equals_32(this.methodName, st.methodName) && equals_32(this.className, st.className) && equals_32(this.fileName, st.fileName);
  }
  return false;
}
;
_.hashCode$ = function hashCode_22(){
  return hashCode_28(initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [valueOf(this.lineNumber), this.className, this.methodName, this.fileName]));
}
;
_.toString$ = function toString_37(){
  return this.className + '.' + this.methodName + '(' + (this.fileName != null?this.fileName:'Unknown Source') + (this.lineNumber >= 0?':' + this.lineNumber:'') + ')';
}
;
_.lineNumber = 0;
var Ljava_lang_StackTraceElement_2_classLit = createForClass('java.lang', 'StackTraceElement', 122, Ljava_lang_Object_2_classLit);
function $charAt_0(this$static, index_0){
  return this$static.charCodeAt(index_0);
}

function $equals(this$static, other){
  return this$static === other;
}

function $equalsIgnoreCase(this$static, other){
  if (other == null) {
    return false;
  }
  if (this$static == other) {
    return true;
  }
  return this$static.length == other.length && this$static.toLowerCase() == other.toLowerCase();
}

function $indexOf_2(this$static, str){
  return this$static.indexOf(str);
}

function $lastIndexOf(this$static, str){
  return this$static.lastIndexOf(str);
}

function $lastIndexOf_0(this$static, str, start_0){
  return this$static.lastIndexOf(str, start_0);
}

function $replace(this$static, from, to){
  var hex = toUnsignedRadixString(from, 16);
  var regex = '\\u' + '0000'.substring(hex.length) + hex;
  return this$static.replace(RegExp(regex, 'g'), String.fromCharCode(to));
}

function $replace_0(this$static, from, to){
  var regex, replacement;
  regex = $replaceAll(from, '([/\\\\\\.\\*\\+\\?\\|\\(\\)\\[\\]\\{\\}$^])', '\\\\$1');
  replacement = $replaceAll($replaceAll(to, '\\\\', '\\\\\\\\'), '\\$', '\\\\$');
  return $replaceAll(this$static, regex, replacement);
}

function $replaceAll(this$static, regex, replace){
  replace = __translateReplaceString(replace);
  return this$static.replace(RegExp(regex, 'g'), replace);
}

function $replaceFirst(this$static, regex, replace){
  replace = __translateReplaceString(replace);
  return this$static.replace(RegExp(regex), replace);
}

function $split(this$static, regex, maxMatch){
  var compiled = new RegExp(regex, 'g');
  var out = [];
  var count = 0;
  var trail = this$static;
  var lastTrail = null;
  while (true) {
    var matchObj = compiled.exec(trail);
    if (matchObj == null || trail == '' || count == maxMatch - 1 && maxMatch > 0) {
      out[count] = trail;
      break;
    }
     else {
      out[count] = trail.substring(0, matchObj.index);
      trail = trail.substring(matchObj.index + matchObj[0].length, trail.length);
      compiled.lastIndex = 0;
      if (lastTrail == trail) {
        out[count] = trail.substring(0, 1);
        trail = trail.substring(1);
      }
      lastTrail = trail;
      count++;
    }
  }
  if (maxMatch == 0 && this$static.length > 0) {
    var lastNonEmpty = out.length;
    while (lastNonEmpty > 0 && out[lastNonEmpty - 1] == '') {
      --lastNonEmpty;
    }
    lastNonEmpty < out.length && out.splice(lastNonEmpty, out.length - lastNonEmpty);
  }
  var jr = __createArray(out.length);
  for (var i = 0; i < out.length; ++i) {
    jr[i] = out[i];
  }
  return jr;
}

function $substring(this$static, beginIndex){
  return __substr(this$static, beginIndex, this$static.length - beginIndex);
}

function $substring_0(this$static, beginIndex, endIndex){
  return this$static.substr(beginIndex, endIndex - beginIndex);
}

function $trim(this$static){
  if (this$static.length == 0 || this$static[0] > ' ' && this$static[this$static.length - 1] > ' ') {
    return this$static;
  }
  return this$static.replace(/^[\u0000-\u0020]*|[\u0000-\u0020]*$/g, '');
}

function __createArray(numElements){
  return initDim(Ljava_lang_String_2_classLit, $intern_1, 2, numElements, 4, 1);
}

function __substr(str, beginIndex, len){
  return str.substr(beginIndex, len);
}

function __translateReplaceString(replaceStr){
  var pos;
  pos = 0;
  while (0 <= (pos = replaceStr.indexOf('\\', pos))) {
    replaceStr.charCodeAt(pos + 1) == 36?(replaceStr = replaceStr.substr(0, pos) + '$' + $substring(replaceStr, ++pos)):(replaceStr = replaceStr.substr(0, pos) + $substring(replaceStr, ++pos));
  }
  return replaceStr;
}

function __valueOf(x_0, start_0, end){
  var s = '';
  for (var batchStart = start_0; batchStart < end;) {
    var batchEnd = Math.min(batchStart + 10000, end);
    s += String.fromCharCode.apply(null, x_0.slice(batchStart, batchEnd));
    batchStart = batchEnd;
  }
  return s;
}

function compareTo_3(thisStr, otherStr){
  if (thisStr == otherStr) {
    return 0;
  }
  return thisStr < otherStr?-1:1;
}

function fromCodePoint(codePoint){
  var hiSurrogate, loSurrogate;
  if (codePoint >= $intern_30) {
    hiSurrogate = 55296 + (codePoint - $intern_30 >> 10 & 1023) & $intern_22;
    loSurrogate = 56320 + (codePoint - $intern_30 & 1023) & $intern_22;
    return valueOf_0(hiSurrogate) + valueOf_0(loSurrogate);
  }
   else {
    return String.fromCharCode(codePoint & $intern_22);
  }
}

function valueOf_0(x_0){
  return String.fromCharCode(x_0);
}

function valueOf_1(x_0){
  return __valueOf(x_0, 0, x_0.length);
}

var Ljava_lang_String_2_classLit = createForClass('java.lang', 'String', 2, Ljava_lang_Object_2_classLit);
function $clinit_String$HashCache(){
  $clinit_String$HashCache = emptyMethod;
  back_0 = {};
  front = {};
}

function compute(str){
  var hashCode, i, n, nBatch;
  hashCode = 0;
  n = str.length;
  nBatch = n - 4;
  i = 0;
  while (i < nBatch) {
    hashCode = str.charCodeAt(i + 3) + 31 * (str.charCodeAt(i + 2) + 31 * (str.charCodeAt(i + 1) + 31 * (str.charCodeAt(i) + 31 * hashCode)));
    hashCode = ~~hashCode;
    i += 4;
  }
  while (i < n) {
    hashCode = hashCode * 31 + $charAt_0(str, i++);
  }
  hashCode = ~~hashCode;
  return hashCode;
}

function getHashCode_0(str){
  $clinit_String$HashCache();
  var key = ':' + str;
  var result = front[key];
  if (result != null) {
    return result;
  }
  result = back_0[key];
  result == null && (result = compute(str));
  increment();
  return front[key] = result;
}

function increment(){
  if (count_0 == 256) {
    back_0 = front;
    front = {};
    count_0 = 0;
  }
  ++count_0;
}

var back_0, count_0 = 0, front;
function $append(this$static, x_0){
  this$static.string += x_0;
  return this$static;
}

function $append_0(this$static, x_0){
  this$static.string += x_0;
  return this$static;
}

function StringBuffer(){
  AbstractStringBuilder.call(this, '');
}

defineClass(196, 185, {362:1}, StringBuffer);
var Ljava_lang_StringBuffer_2_classLit = createForClass('java.lang', 'StringBuffer', 196, Ljava_lang_AbstractStringBuilder_2_classLit);
function $append_1(this$static, x_0){
  this$static.string += charToString(x_0);
  return this$static;
}

function $append_2(this$static, x_0){
  this$static.string += x_0;
  return this$static;
}

function $append_3(this$static, x_0){
  this$static.string += x_0;
  return this$static;
}

function $append_4(this$static, x_0){
  this$static.string += x_0;
  return this$static;
}

function $append_5(this$static, x_0){
  return this$static.string += x_0 , this$static;
}

function $append_6(this$static, x_0){
  this$static.string += x_0;
  return this$static;
}

function $append_7(this$static, x_0){
  this$static.string += x_0;
  return this$static;
}

function $append_8(this$static, x_0){
  this$static.string += x_0;
  return this$static;
}

function $insert_0(this$static, x_0){
  this$static.string = $substring_0(this$static.string, 0, 0) + x_0 + $substring(this$static.string, 0);
  return this$static;
}

function StringBuilder(){
  AbstractStringBuilder.call(this, '');
}

function StringBuilder_0(){
  AbstractStringBuilder.call(this, '');
}

function StringBuilder_1(s){
  AbstractStringBuilder.call(this, s);
}

defineClass(19, 185, {362:1}, StringBuilder, StringBuilder_0, StringBuilder_1);
var Ljava_lang_StringBuilder_2_classLit = createForClass('java.lang', 'StringBuilder', 19, Ljava_lang_AbstractStringBuilder_2_classLit);
function $clinit_System(){
  $clinit_System = emptyMethod;
  out_0 = new PrintStream;
}

function arraycopy(src_0, srcOfs, dest, destOfs, len){
  $clinit_System();
  var destArray, destComp, destEnd, destType, destlen, srcArray, srcComp, srcType, srclen;
  checkNotNull_2(src_0, 'src');
  checkNotNull_2(dest, 'dest');
  srcType = getClass__Ljava_lang_Class___devirtual$(src_0);
  destType = getClass__Ljava_lang_Class___devirtual$(dest);
  checkArrayType((srcType.modifiers & 4) != 0, 'srcType is not an array');
  checkArrayType((destType.modifiers & 4) != 0, 'destType is not an array');
  srcComp = srcType.componentType;
  destComp = destType.componentType;
  checkArrayType((srcComp.modifiers & 1) != 0?srcComp == destComp:(destComp.modifiers & 1) == 0, "Array types don't match");
  srclen = src_0.length;
  destlen = dest.length;
  if (srcOfs < 0 || destOfs < 0 || len < 0 || srcOfs + len > srclen || destOfs + len > destlen) {
    throw new IndexOutOfBoundsException;
  }
  if (((srcComp.modifiers & 1) == 0 || (srcComp.modifiers & 4) != 0) && srcType != destType) {
    srcArray = src_0;
    destArray = dest;
    if (maskUndefined(src_0) === maskUndefined(dest) && srcOfs < destOfs) {
      srcOfs += len;
      for (destEnd = destOfs + len; destEnd-- > destOfs;) {
        destArray[destEnd] = srcArray[--srcOfs];
      }
    }
     else {
      for (destEnd = destOfs + len; destOfs < destEnd;) {
        destArray[destOfs++] = srcArray[srcOfs++];
      }
    }
  }
   else 
    len > 0 && nativeArraySplice(src_0, srcOfs, dest, destOfs, len, true);
}

var out_0;
function UnsupportedOperationException(){
  RuntimeException.call(this);
}

function UnsupportedOperationException_0(message){
  RuntimeException_0.call(this, message);
}

defineClass(24, 10, $intern_13, UnsupportedOperationException, UnsupportedOperationException_0);
var Ljava_lang_UnsupportedOperationException_2_classLit = createForClass('java.lang', 'UnsupportedOperationException', 24, Ljava_lang_RuntimeException_2_classLit);
function $clear(this$static){
  this$static.position_0 = 0;
  this$static.mark = -1;
  this$static.limit = this$static.capacity;
  return this$static;
}

function $limit(this$static, newLimit){
  if (newLimit < 0 || newLimit > this$static.capacity) {
    throw new IllegalArgumentException;
  }
  this$static.limit = newLimit;
  this$static.position_0 > newLimit && (this$static.position_0 = newLimit);
  this$static.mark != -1 && this$static.mark > newLimit && (this$static.mark = -1);
  return this$static;
}

function $position(this$static){
  if (0 > this$static.limit) {
    throw new IllegalArgumentException;
  }
  this$static.position_0 = 0;
  this$static.mark != -1 && this$static.mark > this$static.position_0 && (this$static.mark = -1);
  return this$static;
}

function $rewind(this$static){
  this$static.position_0 = 0;
  this$static.mark = -1;
  return this$static;
}

function Buffer(capacity){
  if (capacity < 0) {
    throw new IllegalArgumentException;
  }
  this.capacity = this.limit = capacity;
}

defineClass(171, 1, {});
_.capacity = 0;
_.limit = 0;
_.mark = -1;
_.position_0 = 0;
var Ljava_nio_Buffer_2_classLit = createForClass('java.nio', 'Buffer', 171, Ljava_lang_Object_2_classLit);
function BufferOverflowException(){
  RuntimeException.call(this);
}

defineClass(313, 10, $intern_13, BufferOverflowException);
var Ljava_nio_BufferOverflowException_2_classLit = createForClass('java.nio', 'BufferOverflowException', 313, Ljava_lang_RuntimeException_2_classLit);
function $$init_1(this$static){
  this$static.order = ($clinit_ByteOrder() , BIG_ENDIAN);
}

function $asIntBuffer(this$static){
  if (this$static.order != ($clinit_ByteOrder() , $clinit_ByteOrder() , NATIVE_ORDER)) {
    throw new RuntimeException_0('Native order supported only.');
  }
  return new IntBuffer($slice(this$static));
}

function $asShortBuffer(this$static){
  if (this$static.order != ($clinit_ByteOrder() , $clinit_ByteOrder() , NATIVE_ORDER)) {
    throw new RuntimeException_0('Native order supported only.');
  }
  return new ShortBuffer($slice(this$static));
}

function $compareTo(this$static, otherBuffer){
  var compareRemaining, otherByte, otherPos, thisByte, thisPos;
  compareRemaining = this$static.limit - this$static.position_0 < otherBuffer.limit - otherBuffer.position_0?this$static.limit - this$static.position_0:otherBuffer.limit - otherBuffer.position_0;
  thisPos = this$static.position_0;
  otherPos = otherBuffer.position_0;
  while (compareRemaining > 0) {
    thisByte = this$static.byteArray[thisPos];
    otherByte = otherBuffer.byteArray[otherPos];
    if (thisByte != otherByte) {
      return thisByte < otherByte?-1:1;
    }
    ++thisPos;
    ++otherPos;
    --compareRemaining;
  }
  return this$static.limit - this$static.position_0 - (otherBuffer.limit - otherBuffer.position_0);
}

function $get_6(this$static, index_0){
  return this$static.byteArray[index_0];
}

function $order(this$static, byteOrder){
  this$static.order = byteOrder;
  return this$static;
}

function $slice(this$static){
  var slice_0;
  slice_0 = new ByteBuffer_1(this$static.byteArray.buffer, this$static.limit - this$static.position_0, this$static.byteArray.byteOffset + this$static.position_0);
  slice_0.order = this$static.order;
  return slice_0;
}

function ByteBuffer(capacity){
  ByteBuffer_0.call(this, new ArrayBuffer(capacity));
}

function ByteBuffer_0(buf){
  Buffer.call(this, buf.byteLength);
  $$init_1(this);
  this.byteArray = new Int8Array(buf);
}

function ByteBuffer_1(buffer, capacity, offset){
  Buffer.call(this, capacity);
  $$init_1(this);
  this.byteArray = new Int8Array(buffer, offset, capacity);
}

function allocateDirect(capacity){
  if (capacity < 0) {
    throw new IllegalArgumentException;
  }
  return new ByteBuffer(capacity);
}

defineClass(172, 171, {9:1, 172:1, 277:1}, ByteBuffer, ByteBuffer_1);
_.compareTo = function compareTo_4(otherBuffer){
  return $compareTo(this, otherBuffer);
}
;
_.equals$ = function equals_20(other){
  var equalSoFar, myPosition, otherBuffer, otherPosition;
  if (!instanceOf(other, 172)) {
    return false;
  }
  otherBuffer = other;
  if (this.limit - this.position_0 != otherBuffer.limit - otherBuffer.position_0) {
    return false;
  }
  myPosition = this.position_0;
  otherPosition = otherBuffer.position_0;
  equalSoFar = true;
  while (equalSoFar && myPosition < this.limit) {
    equalSoFar = $get_6(this, myPosition++) == $get_6(otherBuffer, otherPosition++);
  }
  return equalSoFar;
}
;
_.getElementSize = function getElementSize(){
  return 1;
}
;
_.getElementType = function getElementType(){
  return 5120;
}
;
_.getTypedArray = function getTypedArray(){
  return this.byteArray;
}
;
_.hashCode$ = function hashCode_23(){
  var hash, myPosition;
  myPosition = this.position_0;
  hash = 0;
  while (myPosition < this.limit) {
    hash = hash + $get_6(this, myPosition++);
  }
  return hash;
}
;
_.toString$ = function toString_38(){
  var buf;
  buf = new StringBuffer;
  $append_0(buf, ($ensureNamesAreInitialized(Ljava_nio_ByteBuffer_2_classLit) , Ljava_nio_ByteBuffer_2_classLit.typeName));
  buf.string += ', status: capacity=';
  $append(buf, this.capacity);
  buf.string += ' position=';
  $append(buf, this.position_0);
  buf.string += ' limit=';
  $append(buf, this.limit);
  return buf.string;
}
;
var Ljava_nio_ByteBuffer_2_classLit = createForClass('java.nio', 'ByteBuffer', 172, Ljava_nio_Buffer_2_classLit);
function $clinit_ByteOrder(){
  $clinit_ByteOrder = emptyMethod;
  BIG_ENDIAN = new ByteOrder('BIG_ENDIAN');
  LITTLE_ENDIAN = new ByteOrder('LITTLE_ENDIAN');
  NATIVE_ORDER = LITTLE_ENDIAN;
}

function ByteOrder(name_0){
  this.name_0 = name_0;
}

defineClass(312, 1, {}, ByteOrder);
_.toString$ = function toString_39(){
  return this.name_0;
}
;
var BIG_ENDIAN, LITTLE_ENDIAN, NATIVE_ORDER;
var Ljava_nio_ByteOrder_2_classLit = createForClass('java.nio', 'ByteOrder', 312, Ljava_lang_Object_2_classLit);
function $compareTo_0(this$static, otherBuffer){
  var compareRemaining, otherFloat, otherPos, thisFloat, thisPos;
  compareRemaining = this$static.limit - this$static.position_0 < otherBuffer.limit - otherBuffer.position_0?this$static.limit - this$static.position_0:otherBuffer.limit - otherBuffer.position_0;
  thisPos = this$static.position_0;
  otherPos = otherBuffer.position_0;
  while (compareRemaining > 0) {
    thisFloat = this$static.floatArray[thisPos];
    otherFloat = otherBuffer.floatArray[otherPos];
    if (thisFloat != otherFloat && (thisFloat == thisFloat || otherFloat == otherFloat)) {
      return thisFloat < otherFloat?-1:1;
    }
    ++thisPos;
    ++otherPos;
    --compareRemaining;
  }
  return this$static.limit - this$static.position_0 - (otherBuffer.limit - otherBuffer.position_0);
}

function $get_7(this$static, index_0){
  return this$static.floatArray[index_0];
}

function $put_1(this$static, src_0, len){
  var i, length_0;
  length_0 = src_0.length;
  if (len < 0 || gt(fromInt(len), fromInt(length_0))) {
    throw new IndexOutOfBoundsException;
  }
  if (len > this$static.limit - this$static.position_0) {
    throw new BufferOverflowException;
  }
  for (i = 0; i < len; i++) {
    this$static.floatArray[this$static.position_0++] = src_0[i];
  }
  return this$static;
}

function FloatBuffer(byteBuffer){
  Buffer.call(this, byteBuffer.capacity >> 2);
  this.byteBuffer = byteBuffer;
  $clear(this.byteBuffer);
  this.floatArray = create_2(byteBuffer.byteArray.buffer, byteBuffer.byteArray.byteOffset, this.capacity);
}

defineClass(193, 171, {9:1, 193:1, 277:1}, FloatBuffer);
_.compareTo = function compareTo_5(otherBuffer){
  return $compareTo_0(this, otherBuffer);
}
;
_.equals$ = function equals_21(other){
  var equalSoFar, myPosition, otherBuffer, otherPosition;
  if (!instanceOf(other, 193)) {
    return false;
  }
  otherBuffer = other;
  if (this.limit - this.position_0 != otherBuffer.limit - otherBuffer.position_0) {
    return false;
  }
  myPosition = this.position_0;
  otherPosition = otherBuffer.position_0;
  equalSoFar = true;
  while (equalSoFar && myPosition < this.limit) {
    equalSoFar = $get_7(this, myPosition++) == $get_7(otherBuffer, otherPosition++);
  }
  return equalSoFar;
}
;
_.getElementSize = function getElementSize_0(){
  return 4;
}
;
_.getElementType = function getElementType_0(){
  return 5126;
}
;
_.getTypedArray = function getTypedArray_0(){
  return this.floatArray;
}
;
_.toString$ = function toString_40(){
  var buf;
  buf = new StringBuffer;
  $append_0(buf, ($ensureNamesAreInitialized(Ljava_nio_FloatBuffer_2_classLit) , Ljava_nio_FloatBuffer_2_classLit.typeName));
  buf.string += ', status: capacity=';
  $append(buf, this.capacity);
  buf.string += ' position=';
  $append(buf, this.position_0);
  buf.string += ' limit=';
  $append(buf, this.limit);
  return buf.string;
}
;
var Ljava_nio_FloatBuffer_2_classLit = createForClass('java.nio', 'FloatBuffer', 193, Ljava_nio_Buffer_2_classLit);
function $compareTo_1(this$static, otherBuffer){
  var compareRemaining, otherInt, otherPos, thisInt, thisPos;
  compareRemaining = this$static.limit - this$static.position_0 < otherBuffer.limit - otherBuffer.position_0?this$static.limit - this$static.position_0:otherBuffer.limit - otherBuffer.position_0;
  thisPos = this$static.position_0;
  otherPos = otherBuffer.position_0;
  while (compareRemaining > 0) {
    thisInt = this$static.intArray[thisPos];
    otherInt = otherBuffer.intArray[otherPos];
    if (thisInt != otherInt) {
      return thisInt < otherInt?-1:1;
    }
    ++thisPos;
    ++otherPos;
    --compareRemaining;
  }
  return this$static.limit - this$static.position_0 - (otherBuffer.limit - otherBuffer.position_0);
}

function $get_8(this$static, index_0){
  return this$static.intArray[index_0];
}

function $put_2(this$static, c){
  $set_0(this$static.intArray, this$static.position_0++, c);
  return this$static;
}

function IntBuffer(byteBuffer){
  Buffer.call(this, byteBuffer.capacity >> 2);
  this.byteBuffer = byteBuffer;
  $clear(this.byteBuffer);
  this.intArray = create_4(byteBuffer.byteArray.buffer, byteBuffer.byteArray.byteOffset, this.capacity);
}

defineClass(234, 171, {9:1, 234:1, 277:1}, IntBuffer);
_.compareTo = function compareTo_6(otherBuffer){
  return $compareTo_1(this, otherBuffer);
}
;
_.equals$ = function equals_22(other){
  var equalSoFar, myPosition, otherBuffer, otherPosition;
  if (!instanceOf(other, 234)) {
    return false;
  }
  otherBuffer = other;
  if (this.limit - this.position_0 != otherBuffer.limit - otherBuffer.position_0) {
    return false;
  }
  myPosition = this.position_0;
  otherPosition = otherBuffer.position_0;
  equalSoFar = true;
  while (equalSoFar && myPosition < this.limit) {
    equalSoFar = $get_8(this, myPosition++) == $get_8(otherBuffer, otherPosition++);
  }
  return equalSoFar;
}
;
_.getElementSize = function getElementSize_1(){
  return 4;
}
;
_.getElementType = function getElementType_1(){
  return 5124;
}
;
_.getTypedArray = function getTypedArray_1(){
  return this.intArray;
}
;
_.hashCode$ = function hashCode_24(){
  var hash, myPosition;
  myPosition = this.position_0;
  hash = 0;
  while (myPosition < this.limit) {
    hash = hash + $get_8(this, myPosition++);
  }
  return hash;
}
;
_.toString$ = function toString_41(){
  var buf;
  buf = new StringBuffer;
  $append_0(buf, ($ensureNamesAreInitialized(Ljava_nio_IntBuffer_2_classLit) , Ljava_nio_IntBuffer_2_classLit.typeName));
  buf.string += ', status: capacity=';
  $append(buf, this.capacity);
  buf.string += ' position=';
  $append(buf, this.position_0);
  buf.string += ' limit=';
  $append(buf, this.limit);
  return buf.string;
}
;
var Ljava_nio_IntBuffer_2_classLit = createForClass('java.nio', 'IntBuffer', 234, Ljava_nio_Buffer_2_classLit);
function $compareTo_2(this$static, otherBuffer){
  var compareRemaining, otherByte, otherPos, thisByte, thisPos;
  compareRemaining = this$static.limit - this$static.position_0 < otherBuffer.limit - otherBuffer.position_0?this$static.limit - this$static.position_0:otherBuffer.limit - otherBuffer.position_0;
  thisPos = this$static.position_0;
  otherPos = otherBuffer.position_0;
  while (compareRemaining > 0) {
    thisByte = this$static.shortArray[thisPos];
    otherByte = otherBuffer.shortArray[otherPos];
    if (thisByte != otherByte) {
      return thisByte < otherByte?-1:1;
    }
    ++thisPos;
    ++otherPos;
    --compareRemaining;
  }
  return this$static.limit - this$static.position_0 - (otherBuffer.limit - otherBuffer.position_0);
}

function $get_9(this$static, index_0){
  return this$static.shortArray[index_0];
}

function $put_3(this$static, src_0, len){
  var i, length_0;
  length_0 = src_0.length;
  if (len < 0 || gt(fromInt(len), fromInt(length_0))) {
    throw new IndexOutOfBoundsException;
  }
  if (len > this$static.limit - this$static.position_0) {
    throw new BufferOverflowException;
  }
  for (i = 0; i < len; i++) {
    this$static.shortArray[this$static.position_0++] = src_0[i];
  }
  return this$static;
}

function ShortBuffer(byteBuffer){
  Buffer.call(this, byteBuffer.capacity >> 1);
  this.byteBuffer = byteBuffer;
  $clear(this.byteBuffer);
  this.shortArray = create_3(byteBuffer.byteArray.buffer, byteBuffer.byteArray.byteOffset, this.capacity);
}

defineClass(232, 171, {9:1, 232:1, 277:1}, ShortBuffer);
_.compareTo = function compareTo_7(otherBuffer){
  return $compareTo_2(this, otherBuffer);
}
;
_.equals$ = function equals_23(other){
  var equalSoFar, myPosition, otherBuffer, otherPosition;
  if (!instanceOf(other, 232)) {
    return false;
  }
  otherBuffer = other;
  if (this.limit - this.position_0 != otherBuffer.limit - otherBuffer.position_0) {
    return false;
  }
  myPosition = this.position_0;
  otherPosition = otherBuffer.position_0;
  equalSoFar = true;
  while (equalSoFar && myPosition < this.limit) {
    equalSoFar = $get_9(this, myPosition++) == $get_9(otherBuffer, otherPosition++);
  }
  return equalSoFar;
}
;
_.getElementSize = function getElementSize_2(){
  return 2;
}
;
_.getElementType = function getElementType_2(){
  return 5122;
}
;
_.getTypedArray = function getTypedArray_2(){
  return this.shortArray;
}
;
_.hashCode$ = function hashCode_25(){
  var hash, myPosition;
  myPosition = this.position_0;
  hash = 0;
  while (myPosition < this.limit) {
    hash = hash + $get_9(this, myPosition++);
  }
  return hash;
}
;
_.toString$ = function toString_42(){
  var buf;
  buf = new StringBuffer;
  $append_0(buf, ($ensureNamesAreInitialized(Ljava_nio_ShortBuffer_2_classLit) , Ljava_nio_ShortBuffer_2_classLit.typeName));
  buf.string += ', status: capacity=';
  $append(buf, this.capacity);
  buf.string += ' position=';
  $append(buf, this.position_0);
  buf.string += ' limit=';
  $append(buf, this.limit);
  return buf.string;
}
;
var Ljava_nio_ShortBuffer_2_classLit = createForClass('java.nio', 'ShortBuffer', 232, Ljava_nio_Buffer_2_classLit);
function $elementAdded(this$static){
  ++this$static.size_0;
  structureChanged(this$static);
}

function $elementRemoved(this$static){
  --this$static.size_0;
  structureChanged(this$static);
}

function $reset(this$static){
  $clinit_InternalJsMapFactory$BackwardCompatibleJsMapFactory();
  this$static.hashCodeMap = delegate_0.createJsHashCodeMap();
  this$static.hashCodeMap.host = this$static;
  this$static.stringMap = delegate_0.createJsStringMap();
  this$static.stringMap.host = this$static;
  this$static.size_0 = 0;
  structureChanged(this$static);
}

defineClass(212, 959, $intern_29);
_.clear_0 = function clear_0(){
  $reset(this);
}
;
_.containsKey = function containsKey_3(key){
  return isJavaString(key)?key == null?!!$getEntry(this.hashCodeMap, null):!(this.stringMap.get_2(key) === undefined):!!$getEntry(this.hashCodeMap, key);
}
;
_.containsValue = function containsValue(value_0){
  return this.stringMap.containsValue(value_0) || this.hashCodeMap.containsValue(value_0);
}
;
_.entrySet_0 = function entrySet_1(){
  return new AbstractHashMap$EntrySet(this);
}
;
_.get_1 = function get_8(key){
  return isJavaString(key)?key == null?getEntryValueOrNull($getEntry(this.hashCodeMap, null)):this.stringMap.get_2(key):getEntryValueOrNull($getEntry(this.hashCodeMap, key));
}
;
_.put = function put_2(key, value_0){
  return isJavaString(key)?key == null?$put_5(this.hashCodeMap, null, value_0):this.stringMap.put_0(key, value_0):$put_5(this.hashCodeMap, key, value_0);
}
;
_.remove_2 = function remove_17(key){
  return isJavaString(key)?key == null?$remove_13(this.hashCodeMap, null):this.stringMap.remove_5(key):$remove_13(this.hashCodeMap, key);
}
;
_.size_1 = function size_15(){
  return this.size_0;
}
;
_.size_0 = 0;
var Ljava_util_AbstractHashMap_2_classLit = createForClass('java.util', 'AbstractHashMap', 212, Ljava_util_AbstractMap_2_classLit);
function $contains_3(this$static, o){
  if (instanceOf(o, 42)) {
    return $containsEntry(this$static.this$01, o);
  }
  return false;
}

function AbstractHashMap$EntrySet(this$0){
  this.this$01 = this$0;
}

defineClass(371, 961, $intern_8, AbstractHashMap$EntrySet);
_.contains_0 = function contains_13(o){
  return $contains_3(this, o);
}
;
_.iterator = function iterator_20(){
  return new AbstractHashMap$EntrySetIterator(this.this$01);
}
;
_.remove = function remove_18(entry){
  var key;
  if ($contains_3(this, entry)) {
    key = entry.getKey();
    this.this$01.remove_2(key);
    return true;
  }
  return false;
}
;
_.size_1 = function size_16(){
  return this.this$01.size_1();
}
;
var Ljava_util_AbstractHashMap$EntrySet_2_classLit = createForClass('java.util', 'AbstractHashMap/EntrySet', 371, Ljava_util_AbstractSet_2_classLit);
function $hasNext_0(this$static){
  if (this$static.current.hasNext()) {
    return true;
  }
  if (this$static.current != this$static.stringMapEntries) {
    return false;
  }
  this$static.current = this$static.this$01.hashCodeMap.entries_0();
  return this$static.current.hasNext();
}

function AbstractHashMap$EntrySetIterator(this$0){
  this.this$01 = this$0;
  this.stringMapEntries = this.this$01.stringMap.entries_0();
  this.current = this.stringMapEntries;
  setModCount(this, this$0._gwt_modCount);
}

defineClass(372, 1, {}, AbstractHashMap$EntrySetIterator);
_.hasNext = function hasNext_10(){
  return $hasNext_0(this);
}
;
_.next_0 = function next_11(){
  return checkStructuralChange(this.this$01, this) , checkCriticalElement($hasNext_0(this)) , this.last = this.current , this.current.next_0();
}
;
_.remove_1 = function remove_19(){
  checkState_1(!!this.last);
  checkStructuralChange(this.this$01, this);
  this.last.remove_1();
  this.last = null;
  recordLastKnownStructure(this.this$01, this);
}
;
var Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit = createForClass('java.util', 'AbstractHashMap/EntrySetIterator', 372, Ljava_lang_Object_2_classLit);
function $next_2(this$static){
  checkCriticalElement(this$static.i < this$static.this$01_0.size_1());
  return this$static.this$01_0.get_0(this$static.last = this$static.i++);
}

function $remove_7(this$static){
  checkState_1(this$static.last != -1);
  this$static.this$01_0.remove_0(this$static.last);
  this$static.i = this$static.last;
  this$static.last = -1;
}

function AbstractList$IteratorImpl(this$0){
  this.this$01_0 = this$0;
}

defineClass(45, 1, {}, AbstractList$IteratorImpl);
_.hasNext = function hasNext_11(){
  return this.i < this.this$01_0.size_1();
}
;
_.next_0 = function next_12(){
  return $next_2(this);
}
;
_.remove_1 = function remove_20(){
  $remove_7(this);
}
;
_.i = 0;
_.last = -1;
var Ljava_util_AbstractList$IteratorImpl_2_classLit = createForClass('java.util', 'AbstractList/IteratorImpl', 45, Ljava_lang_Object_2_classLit);
function AbstractList$ListIteratorImpl(this$0, start_0){
  this.this$01 = this$0;
  AbstractList$IteratorImpl.call(this, this$0);
  checkPositionIndex_0(start_0, this$0.size_1());
  this.i = start_0;
}

defineClass(285, 45, {}, AbstractList$ListIteratorImpl);
_.hasPrevious = function hasPrevious_0(){
  return this.i > 0;
}
;
_.previous_0 = function previous_1(){
  checkCriticalElement(this.i > 0);
  return this.this$01.get_0(this.last = --this.i);
}
;
var Ljava_util_AbstractList$ListIteratorImpl_2_classLit = createForClass('java.util', 'AbstractList/ListIteratorImpl', 285, Ljava_util_AbstractList$IteratorImpl_2_classLit);
function $iterator_0(this$static){
  var outerIter;
  outerIter = this$static.this$01.entrySet_0().iterator();
  return new AbstractMap$1$1(outerIter);
}

function AbstractMap$1(this$0){
  this.this$01 = this$0;
}

defineClass(124, 961, $intern_8, AbstractMap$1);
_.contains_0 = function contains_14(key){
  return this.this$01.containsKey(key);
}
;
_.iterator = function iterator_21(){
  return $iterator_0(this);
}
;
_.remove = function remove_21(key){
  if (this.this$01.containsKey(key)) {
    this.this$01.remove_2(key);
    return true;
  }
  return false;
}
;
_.size_1 = function size_17(){
  return this.this$01.size_1();
}
;
var Ljava_util_AbstractMap$1_2_classLit = createForClass('java.util', 'AbstractMap/1', 124, Ljava_util_AbstractSet_2_classLit);
function $next_3(this$static){
  var entry;
  entry = this$static.val$outerIter2.next_0();
  return entry.getKey();
}

function AbstractMap$1$1(val$outerIter){
  this.val$outerIter2 = val$outerIter;
}

defineClass(373, 1, {}, AbstractMap$1$1);
_.hasNext = function hasNext_12(){
  return this.val$outerIter2.hasNext();
}
;
_.next_0 = function next_13(){
  return $next_3(this);
}
;
_.remove_1 = function remove_22(){
  this.val$outerIter2.remove_1();
}
;
var Ljava_util_AbstractMap$1$1_2_classLit = createForClass('java.util', 'AbstractMap/1/1', 373, Ljava_lang_Object_2_classLit);
function $setValue(this$static, value_0){
  var oldValue;
  oldValue = this$static.value_0;
  this$static.value_0 = value_0;
  return oldValue;
}

defineClass(163, 1, {163:1, 42:1});
_.equals$ = function equals_24(other){
  var entry;
  if (!instanceOf(other, 42)) {
    return false;
  }
  entry = other;
  return equals_32(this.key_0, entry.getKey()) && equals_32(this.value_0, entry.getValue());
}
;
_.getKey = function getKey_1(){
  return this.key_0;
}
;
_.getValue = function getValue_1(){
  return this.value_0;
}
;
_.hashCode$ = function hashCode_26(){
  return hashCode_36(this.key_0) ^ hashCode_36(this.value_0);
}
;
_.setValue = function setValue_2(value_0){
  return $setValue(this, value_0);
}
;
_.toString$ = function toString_43(){
  return this.key_0 + '=' + this.value_0;
}
;
var Ljava_util_AbstractMap$AbstractEntry_2_classLit = createForClass('java.util', 'AbstractMap/AbstractEntry', 163, Ljava_lang_Object_2_classLit);
function AbstractMap$SimpleEntry(key, value_0){
  this.key_0 = key;
  this.value_0 = value_0;
}

defineClass(123, 163, $intern_68, AbstractMap$SimpleEntry);
var Ljava_util_AbstractMap$SimpleEntry_2_classLit = createForClass('java.util', 'AbstractMap/SimpleEntry', 123, Ljava_util_AbstractMap$AbstractEntry_2_classLit);
defineClass(967, 1, $intern_5);
_.equals$ = function equals_25(other){
  var entry;
  if (!instanceOf(other, 42)) {
    return false;
  }
  entry = other;
  return equals_32(this.getKey(), entry.getKey()) && equals_32(this.getValue(), entry.getValue());
}
;
_.hashCode$ = function hashCode_27(){
  return hashCode_36(this.getKey()) ^ hashCode_36(this.getValue());
}
;
_.toString$ = function toString_44(){
  return this.getKey() + '=' + this.getValue();
}
;
var Ljava_util_AbstractMapEntry_2_classLit = createForClass('java.util', 'AbstractMapEntry', 967, Ljava_lang_Object_2_classLit);
function $containsEntry_0(this$static, entry){
  var key, lookupEntry;
  key = entry.getKey();
  lookupEntry = $getEntry_0(this$static, key);
  return !!lookupEntry && equals_32(lookupEntry.value_0, entry.getValue());
}

function $containsKey_0(this$static, k){
  return !!$getEntry_0(this$static, k);
}

function $get_10(this$static, k){
  return getEntryValueOrNull($getEntry_0(this$static, k));
}

defineClass(1019, 959, $intern_29);
_.containsEntry = function containsEntry_0(entry){
  return $containsEntry_0(this, entry);
}
;
_.containsKey = function containsKey_4(k){
  return $containsKey_0(this, k);
}
;
_.entrySet_0 = function entrySet_2(){
  return new AbstractNavigableMap$EntrySet(this);
}
;
_.get_1 = function get_9(k){
  return $get_10(this, k);
}
;
_.keySet_0 = function keySet_1(){
  return new AbstractNavigableMap$NavigableKeySet(this);
}
;
var Ljava_util_AbstractNavigableMap_2_classLit = createForClass('java.util', 'AbstractNavigableMap', 1019, Ljava_util_AbstractMap_2_classLit);
function AbstractNavigableMap$EntrySet(this$0){
  this.this$01 = this$0;
}

defineClass(353, 961, $intern_8, AbstractNavigableMap$EntrySet);
_.contains_0 = function contains_15(o){
  return instanceOf(o, 42) && $containsEntry_0(this.this$01, o);
}
;
_.iterator = function iterator_22(){
  return new TreeMap$EntryIterator(this.this$01);
}
;
_.remove = function remove_23(o){
  var entry;
  if (instanceOf(o, 42)) {
    entry = o;
    return $removeEntry(this.this$01, entry);
  }
  return false;
}
;
_.size_1 = function size_18(){
  return this.this$01.size_0;
}
;
var Ljava_util_AbstractNavigableMap$EntrySet_2_classLit = createForClass('java.util', 'AbstractNavigableMap/EntrySet', 353, Ljava_util_AbstractSet_2_classLit);
function AbstractNavigableMap$NavigableKeySet(map_0){
  this.map_0 = map_0;
}

defineClass(872, 961, $intern_8, AbstractNavigableMap$NavigableKeySet);
_.contains_0 = function contains_16(o){
  return $containsKey_0(this.map_0, o);
}
;
_.iterator = function iterator_23(){
  var entryIterator;
  entryIterator = new TreeMap$EntryIterator((new TreeMap$EntrySet(this.map_0)).this$01);
  return new AbstractNavigableMap$NavigableKeySet$1(entryIterator);
}
;
_.remove = function remove_24(o){
  if ($containsKey_0(this.map_0, o)) {
    $remove_18(this.map_0, o);
    return true;
  }
  return false;
}
;
_.size_1 = function size_19(){
  return this.map_0.size_0;
}
;
var Ljava_util_AbstractNavigableMap$NavigableKeySet_2_classLit = createForClass('java.util', 'AbstractNavigableMap/NavigableKeySet', 872, Ljava_util_AbstractSet_2_classLit);
function AbstractNavigableMap$NavigableKeySet$1(val$entryIterator){
  this.val$entryIterator2 = val$entryIterator;
}

defineClass(873, 1, {}, AbstractNavigableMap$NavigableKeySet$1);
_.hasNext = function hasNext_13(){
  return this.val$entryIterator2.iter.hasNext();
}
;
_.next_0 = function next_14(){
  var entry;
  entry = $next_5(this.val$entryIterator2);
  return entry.getKey();
}
;
_.remove_1 = function remove_25(){
  $remove_19(this.val$entryIterator2);
}
;
var Ljava_util_AbstractNavigableMap$NavigableKeySet$1_2_classLit = createForClass('java.util', 'AbstractNavigableMap/NavigableKeySet/1', 873, Ljava_lang_Object_2_classLit);
function $remove_8(this$static, index_0){
  var iter, old;
  iter = $listIterator_0(this$static, index_0);
  try {
    old = (checkCriticalElement(iter.currentNode != iter.this$01.tail) , iter.lastNode = iter.currentNode , iter.currentNode = iter.currentNode.next , ++iter.currentIndex , iter.lastNode.value_0);
    $remove_17(iter);
    return old;
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 69)) {
      throw new IndexOutOfBoundsException_0("Can't remove element " + index_0);
    }
     else 
      throw unwrap($e0);
  }
}

defineClass(994, 966, {50:1});
_.add_1 = function add_9(index_0, element){
  var iter;
  iter = $listIterator_0(this, index_0);
  $addNode(iter.this$01, element, iter.currentNode.prev, iter.currentNode);
  ++iter.currentIndex;
  iter.lastNode = null;
}
;
_.get_0 = function get_10(index_0){
  var iter;
  iter = $listIterator_0(this, index_0);
  try {
    return checkCriticalElement(iter.currentNode != iter.this$01.tail) , iter.lastNode = iter.currentNode , iter.currentNode = iter.currentNode.next , ++iter.currentIndex , iter.lastNode.value_0;
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 69)) {
      throw new IndexOutOfBoundsException_0("Can't get element " + index_0);
    }
     else 
      throw unwrap($e0);
  }
}
;
_.iterator = function iterator_24(){
  return $listIterator_0(this, 0);
}
;
_.remove_0 = function remove_26(index_0){
  return $remove_8(this, index_0);
}
;
var Ljava_util_AbstractSequentialList_2_classLit = createForClass('java.util', 'AbstractSequentialList', 994, Ljava_util_AbstractList_2_classLit);
function binarySearch(sortedArray, key, comparator){
  var compareResult, high, low, mid, midVal;
  !comparator && ($clinit_Comparators() , $clinit_Comparators() , NATURAL);
  low = 0;
  high = sortedArray.length - 1;
  while (low <= high) {
    mid = low + (high - low >> 1);
    midVal = sortedArray[mid];
    compareResult = $compare(midVal, key);
    if (compareResult < 0) {
      low = mid + 1;
    }
     else if (compareResult > 0) {
      high = mid - 1;
    }
     else {
      return mid;
    }
  }
  return -low - 1;
}

function deepToString(a, arraysIveSeen){
  var b, i, obj, objArray, tempSet;
  if (a == null) {
    return 'null';
  }
  if (arraysIveSeen.map_0.containsKey(a)) {
    return '[...]';
  }
  $add_11(arraysIveSeen, a);
  b = new StringBuilder_1('[');
  for (i = 0; i < a.length; i++) {
    i != 0 && (b.string += ', ' , b);
    obj = a[i];
    if (obj == null) {
      b.string += 'null';
    }
     else if ((getClass__Ljava_lang_Class___devirtual$(obj).modifiers & 4) != 0) {
      if (instanceOf(obj, 4)) {
        if (arraysIveSeen.map_0.containsKey(obj)) {
          b.string += '[...]';
        }
         else {
          objArray = obj;
          tempSet = new HashSet_0(arraysIveSeen);
          $append_7(b, deepToString(objArray, tempSet));
        }
      }
       else 
        instanceOf(obj, 276)?$append_7(b, toString_45(obj)):instanceOf(obj, 278)?$append_7(b, toString_49(obj)):instanceOf(obj, 47)?$append_7(b, toString_48(obj)):instanceOf(obj, 66)?$append_7(b, toString_47(obj)):instanceOf(obj, 941) && $append_7(b, toString_46(obj));
    }
     else {
      b.string += '' + obj;
    }
  }
  b.string += ']';
  return b.string;
}

function hashCode_28(a){
  var e, e$index, e$max, hashCode;
  hashCode = 1;
  for (e$index = 0 , e$max = a.length; e$index < e$max; ++e$index) {
    e = a[e$index];
    hashCode = 31 * hashCode + (e != null?hashCode__I__devirtual$(e):0);
    hashCode = ~~hashCode;
  }
  return hashCode;
}

function insertionSort(array, low, high){
  var i, j, t;
  for (i = low + 1; i < high; ++i) {
    for (j = i; j > low && $compare(array[j - 1], array[j]) > 0; --j) {
      t = array[j];
      array[j] = array[j - 1];
      array[j - 1] = t;
    }
  }
}

function merge(src_0, srcLow, srcMid, srcHigh, dest, destLow, destHigh){
  var topIdx;
  topIdx = srcMid;
  while (destLow < destHigh) {
    topIdx >= srcHigh || srcLow < srcMid && $compare(src_0[srcLow], src_0[topIdx]) <= 0?(dest[destLow++] = src_0[srcLow++]):(dest[destLow++] = src_0[topIdx++]);
  }
}

function mergeSort(x_0, fromIndex, toIndex, comp){
  var temp, newLength, length_0, copy;
  !comp && ($clinit_Comparators() , $clinit_Comparators() , NATURAL);
  temp = (newLength = (length_0 = toIndex - fromIndex , checkCriticalArgument_1(length_0 >= 0, initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [valueOf(fromIndex), valueOf(toIndex)])) , length_0) , copy = createFrom(x_0, newLength) , arraycopy(x_0, fromIndex, copy, 0, min_1(x_0.length - fromIndex, newLength)) , copy);
  mergeSort_0(temp, x_0, fromIndex, toIndex, -fromIndex);
}

function mergeSort_0(temp, array, low, high, ofs){
  var length_0, tempHigh, tempLow, tempMid;
  length_0 = high - low;
  if (length_0 < 7) {
    insertionSort(array, low, high);
    return;
  }
  tempLow = low + ofs;
  tempHigh = high + ofs;
  tempMid = tempLow + (tempHigh - tempLow >> 1);
  mergeSort_0(array, temp, tempLow, tempMid, -ofs);
  mergeSort_0(array, temp, tempMid, tempHigh, -ofs);
  if ($compare(temp[tempMid - 1], temp[tempMid]) <= 0) {
    while (low < high) {
      array[low++] = temp[tempLow++];
    }
    return;
  }
  merge(temp, tempLow, tempMid, tempHigh, array, low, high);
}

function toString_45(a){
  var b, i;
  if (a == null) {
    return 'null';
  }
  b = new StringBuilder_1('[');
  for (i = 0; i < a.length; i++) {
    i != 0 && (b.string += ', ' , b);
    $append_7(b, String.fromCharCode(a[i]));
  }
  b.string += ']';
  return b.string;
}

function toString_46(a){
  var b, i;
  if (a == null) {
    return 'null';
  }
  b = new StringBuilder_1('[');
  for (i = 0; i < a.length; i++) {
    i != 0 && (b.string += ', ' , b);
    $append_7(b, '' + a[i]);
  }
  b.string += ']';
  return b.string;
}

function toString_47(a){
  var b, i;
  if (a == null) {
    return 'null';
  }
  b = new StringBuilder_1('[');
  for (i = 0; i < a.length; i++) {
    i != 0 && (b.string += ', ' , b);
    $append_7(b, '' + a[i]);
  }
  b.string += ']';
  return b.string;
}

function toString_48(a){
  var b, i;
  if (a == null) {
    return 'null';
  }
  b = new StringBuilder_1('[');
  for (i = 0; i < a.length; i++) {
    i != 0 && (b.string += ', ' , b);
    $append_7(b, '' + a[i]);
  }
  b.string += ']';
  return b.string;
}

function toString_49(a){
  var b, i;
  if (a == null) {
    return 'null';
  }
  b = new StringBuilder_1('[');
  for (i = 0; i < a.length; i++) {
    i != 0 && (b.string += ', ' , b);
    $append_7(b, '' + a[i]);
  }
  b.string += ']';
  return b.string;
}

function Arrays$ArrayList(array){
  this.array = array;
}

defineClass(191, 966, $intern_3, Arrays$ArrayList);
_.contains_0 = function contains_17(o){
  return $indexOf(this, o) != -1;
}
;
_.get_0 = function get_11(index_0){
  return checkElementIndex(index_0, this.array.length) , this.array[index_0];
}
;
_.size_1 = function size_20(){
  return this.array.length;
}
;
_.toArray = function toArray_14(){
  return clone(this.array);
}
;
_.toArray_0 = function toArray_15(out){
  var i, size_0;
  size_0 = this.array.length;
  out.length < size_0 && (out = createFrom(out, size_0));
  for (i = 0; i < size_0; ++i) {
    out[i] = this.array[i];
  }
  out.length > size_0 && (out[size_0] = null);
  return out;
}
;
var Ljava_util_Arrays$ArrayList_2_classLit = createForClass('java.util', 'Arrays/ArrayList', 191, Ljava_util_AbstractList_2_classLit);
function $clinit_Collections(){
  $clinit_Collections = emptyMethod;
  EMPTY_LIST = new Collections$EmptyList;
  EMPTY_SET = new Collections$EmptySet;
}

function addAll_1(c, a){
  $clinit_Collections();
  var e, e$index, e$max, result;
  result = false;
  for (e$index = 0 , e$max = a.length; e$index < e$max; ++e$index) {
    e = a[e$index];
    result = result | (c.array[c.array.length] = e , true);
  }
  return result;
}

function hashCode_29(collection){
  $clinit_Collections();
  var e, e$iterator, hashCode;
  hashCode = 0;
  for (e$iterator = collection.iterator(); e$iterator.hasNext();) {
    e = e$iterator.next_0();
    hashCode = hashCode + (e != null?hashCode__I__devirtual$(e):0);
    hashCode = ~~hashCode;
  }
  return hashCode;
}

function hashCode_30(list){
  $clinit_Collections();
  var e, e$iterator, hashCode;
  hashCode = 1;
  for (e$iterator = list.iterator(); e$iterator.hasNext();) {
    e = e$iterator.next_0();
    hashCode = 31 * hashCode + (e != null?hashCode__I__devirtual$(e):0);
    hashCode = ~~hashCode;
  }
  return hashCode;
}

function singletonMap(key, value_0){
  $clinit_Collections();
  var map_0;
  map_0 = new HashMap_0(1);
  map_0.put(key, value_0);
  return new Collections$UnmodifiableMap(map_0);
}

function swapImpl(list, i, j){
  $clinit_Collections();
  var t;
  t = (checkElementIndex(i, list.array.length) , list.array[i]);
  $set(list, i, (checkElementIndex(j, list.array.length) , list.array[j]));
  $set(list, j, t);
}

function unmodifiableList(list){
  $clinit_Collections();
  return instanceOf(list, 60)?new Collections$UnmodifiableRandomAccessList(list):new Collections$UnmodifiableList(list);
}

var EMPTY_LIST, EMPTY_SET;
function Collections$EmptyList(){
}

defineClass(396, 966, $intern_3, Collections$EmptyList);
_.contains_0 = function contains_18(object){
  return false;
}
;
_.get_0 = function get_12(location_0){
  checkElementIndex(location_0, 0);
  return null;
}
;
_.iterator = function iterator_25(){
  return $clinit_Collections() , $clinit_Collections$EmptyListIterator() , INSTANCE_0;
}
;
_.listIterator = function listIterator_5(){
  return $clinit_Collections() , $clinit_Collections$EmptyListIterator() , INSTANCE_0;
}
;
_.size_1 = function size_21(){
  return 0;
}
;
var Ljava_util_Collections$EmptyList_2_classLit = createForClass('java.util', 'Collections/EmptyList', 396, Ljava_util_AbstractList_2_classLit);
function $clinit_Collections$EmptyListIterator(){
  $clinit_Collections$EmptyListIterator = emptyMethod;
  INSTANCE_0 = new Collections$EmptyListIterator;
}

function Collections$EmptyListIterator(){
}

defineClass(397, 1, {}, Collections$EmptyListIterator);
_.hasNext = function hasNext_14(){
  return false;
}
;
_.hasPrevious = function hasPrevious_1(){
  return false;
}
;
_.next_0 = function next_15(){
  throw new NoSuchElementException;
}
;
_.previous_0 = function previous_2(){
  throw new NoSuchElementException;
}
;
_.remove_1 = function remove_27(){
  throw new IllegalStateException;
}
;
var INSTANCE_0;
var Ljava_util_Collections$EmptyListIterator_2_classLit = createForClass('java.util', 'Collections/EmptyListIterator', 397, Ljava_lang_Object_2_classLit);
function Collections$EmptySet(){
}

defineClass(398, 961, {3:1, 38:1}, Collections$EmptySet);
_.contains_0 = function contains_19(object){
  return false;
}
;
_.iterator = function iterator_26(){
  return $clinit_Collections() , $clinit_Collections$EmptyListIterator() , INSTANCE_0;
}
;
_.size_1 = function size_22(){
  return 0;
}
;
var Ljava_util_Collections$EmptySet_2_classLit = createForClass('java.util', 'Collections/EmptySet', 398, Ljava_util_AbstractSet_2_classLit);
function Collections$SingletonList(element){
  this.element = element;
}

defineClass(399, 966, {3:1, 50:1}, Collections$SingletonList);
_.contains_0 = function contains_20(item_0){
  return equals_32(this.element, item_0);
}
;
_.get_0 = function get_13(index_0){
  checkElementIndex(index_0, 1);
  return this.element;
}
;
_.size_1 = function size_23(){
  return 1;
}
;
var Ljava_util_Collections$SingletonList_2_classLit = createForClass('java.util', 'Collections/SingletonList', 399, Ljava_util_AbstractList_2_classLit);
function $add_9(){
  throw new UnsupportedOperationException;
}

function $remove_9(){
  throw new UnsupportedOperationException;
}

function Collections$UnmodifiableCollection(coll){
  this.coll = coll;
}

defineClass(280, 1, {});
_.add_0 = function add_10(o){
  return $add_9();
}
;
_.contains_0 = function contains_21(o){
  return this.coll.contains_0(o);
}
;
_.containsAll = function containsAll_5(c){
  return this.coll.containsAll(c);
}
;
_.isEmpty = function isEmpty_10(){
  return this.coll.isEmpty();
}
;
_.iterator = function iterator_27(){
  return new Collections$UnmodifiableCollectionIterator(this.coll.iterator());
}
;
_.remove = function remove_28(o){
  return $remove_9();
}
;
_.size_1 = function size_24(){
  return this.coll.size_1();
}
;
_.toArray = function toArray_16(){
  return this.coll.toArray();
}
;
_.toArray_0 = function toArray_17(a){
  return this.coll.toArray_0(a);
}
;
_.toString$ = function toString_50(){
  return this.coll.toString$();
}
;
var Ljava_util_Collections$UnmodifiableCollection_2_classLit = createForClass('java.util', 'Collections/UnmodifiableCollection', 280, Ljava_lang_Object_2_classLit);
function Collections$UnmodifiableCollectionIterator(it){
  this.it = it;
}

defineClass(283, 1, {}, Collections$UnmodifiableCollectionIterator);
_.hasNext = function hasNext_15(){
  return this.it.hasNext();
}
;
_.next_0 = function next_16(){
  return this.it.next_0();
}
;
_.remove_1 = function remove_29(){
  throw new UnsupportedOperationException;
}
;
var Ljava_util_Collections$UnmodifiableCollectionIterator_2_classLit = createForClass('java.util', 'Collections/UnmodifiableCollectionIterator', 283, Ljava_lang_Object_2_classLit);
function Collections$UnmodifiableList(list){
  Collections$UnmodifiableCollection.call(this, list);
  this.list = list;
}

defineClass(215, 280, {50:1}, Collections$UnmodifiableList);
_.equals$ = function equals_26(o){
  return this.list.equals$(o);
}
;
_.get_0 = function get_14(index_0){
  return this.list.get_0(index_0);
}
;
_.hashCode$ = function hashCode_31(){
  return this.list.hashCode$();
}
;
_.isEmpty = function isEmpty_11(){
  return this.list.isEmpty();
}
;
_.listIterator = function listIterator_6(){
  return new Collections$UnmodifiableListIterator(this.list.listIterator_0(0));
}
;
_.listIterator_0 = function listIterator_7(from){
  return new Collections$UnmodifiableListIterator(this.list.listIterator_0(from));
}
;
var Ljava_util_Collections$UnmodifiableList_2_classLit = createForClass('java.util', 'Collections/UnmodifiableList', 215, Ljava_util_Collections$UnmodifiableCollection_2_classLit);
function Collections$UnmodifiableListIterator(lit){
  Collections$UnmodifiableCollectionIterator.call(this, lit);
  this.lit = lit;
}

defineClass(284, 283, {}, Collections$UnmodifiableListIterator);
_.hasPrevious = function hasPrevious_2(){
  return this.lit.hasPrevious();
}
;
_.previous_0 = function previous_3(){
  return this.lit.previous_0();
}
;
var Ljava_util_Collections$UnmodifiableListIterator_2_classLit = createForClass('java.util', 'Collections/UnmodifiableListIterator', 284, Ljava_util_Collections$UnmodifiableCollectionIterator_2_classLit);
function $entrySet_0(this$static){
  !this$static.entrySet && (this$static.entrySet = new Collections$UnmodifiableMap$UnmodifiableEntrySet(this$static.map_0.entrySet_0()));
  return this$static.entrySet;
}

function $equals_0(this$static, o){
  return this$static.map_0.equals$(o);
}

function $keySet_0(this$static){
  !this$static.keySet && (this$static.keySet = new Collections$UnmodifiableSet(this$static.map_0.keySet_0()));
  return this$static.keySet;
}

function Collections$UnmodifiableMap(map_0){
  this.map_0 = map_0;
}

defineClass(186, 1, $intern_29, Collections$UnmodifiableMap);
_.containsKey = function containsKey_5(key){
  return this.map_0.containsKey(key);
}
;
_.entrySet_0 = function entrySet_3(){
  return $entrySet_0(this);
}
;
_.equals$ = function equals_27(o){
  return $equals_0(this, o);
}
;
_.get_1 = function get_15(key){
  return this.map_0.get_1(key);
}
;
_.hashCode$ = function hashCode_32(){
  return this.map_0.hashCode$();
}
;
_.isEmpty = function isEmpty_12(){
  return this.map_0.isEmpty();
}
;
_.keySet_0 = function keySet_2(){
  return $keySet_0(this);
}
;
_.put = function put_3(key, value_0){
  throw new UnsupportedOperationException;
}
;
_.remove_2 = function remove_30(key){
  throw new UnsupportedOperationException;
}
;
_.size_1 = function size_25(){
  return this.map_0.size_1();
}
;
_.toString$ = function toString_51(){
  return this.map_0.toString$();
}
;
var Ljava_util_Collections$UnmodifiableMap_2_classLit = createForClass('java.util', 'Collections/UnmodifiableMap', 186, Ljava_lang_Object_2_classLit);
function $equals_1(this$static, o){
  return this$static.coll.equals$(o);
}

function Collections$UnmodifiableSet(set_0){
  Collections$UnmodifiableCollection.call(this, set_0);
}

defineClass(216, 280, $intern_8, Collections$UnmodifiableSet);
_.equals$ = function equals_28(o){
  return $equals_1(this, o);
}
;
_.hashCode$ = function hashCode_33(){
  return this.coll.hashCode$();
}
;
var Ljava_util_Collections$UnmodifiableSet_2_classLit = createForClass('java.util', 'Collections/UnmodifiableSet', 216, Ljava_util_Collections$UnmodifiableCollection_2_classLit);
function $contains_4(this$static, o){
  return this$static.coll.contains_0(o);
}

function $containsAll_0(this$static, o){
  return this$static.coll.containsAll(o);
}

function $iterator_1(this$static){
  var it;
  it = this$static.coll.iterator();
  return new Collections$UnmodifiableMap$UnmodifiableEntrySet$1(it);
}

function $toArray_3(this$static){
  var array;
  array = this$static.coll.toArray();
  $wrap(array, array.length);
  return array;
}

function $toArray_4(this$static, a){
  var result;
  result = this$static.coll.toArray_0(a);
  $wrap(result, this$static.coll.size_1());
  return result;
}

function $wrap(array, size_0){
  var i;
  for (i = 0; i < size_0; ++i) {
    array[i] = new Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(array[i]);
  }
}

function Collections$UnmodifiableMap$UnmodifiableEntrySet(s){
  Collections$UnmodifiableSet.call(this, s);
}

defineClass(400, 216, $intern_8, Collections$UnmodifiableMap$UnmodifiableEntrySet);
_.contains_0 = function contains_22(o){
  return $contains_4(this, o);
}
;
_.containsAll = function containsAll_6(o){
  return $containsAll_0(this, o);
}
;
_.iterator = function iterator_28(){
  return $iterator_1(this);
}
;
_.toArray = function toArray_18(){
  return $toArray_3(this);
}
;
_.toArray_0 = function toArray_19(a){
  return $toArray_4(this, a);
}
;
var Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet_2_classLit = createForClass('java.util', 'Collections/UnmodifiableMap/UnmodifiableEntrySet', 400, Ljava_util_Collections$UnmodifiableSet_2_classLit);
function Collections$UnmodifiableMap$UnmodifiableEntrySet$1(val$it){
  this.val$it2 = val$it;
}

defineClass(401, 1, {}, Collections$UnmodifiableMap$UnmodifiableEntrySet$1);
_.hasNext = function hasNext_16(){
  return this.val$it2.hasNext();
}
;
_.next_0 = function next_17(){
  return new Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(this.val$it2.next_0());
}
;
_.remove_1 = function remove_31(){
  throw new UnsupportedOperationException;
}
;
var Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet$1_2_classLit = createForClass('java.util', 'Collections/UnmodifiableMap/UnmodifiableEntrySet/1', 401, Ljava_lang_Object_2_classLit);
function Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(entry){
  this.entry = entry;
}

defineClass(281, 1, $intern_5, Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry);
_.equals$ = function equals_29(o){
  return this.entry.equals$(o);
}
;
_.getKey = function getKey_2(){
  return this.entry.getKey();
}
;
_.getValue = function getValue_2(){
  return this.entry.getValue();
}
;
_.hashCode$ = function hashCode_34(){
  return this.entry.hashCode$();
}
;
_.setValue = function setValue_3(value_0){
  throw new UnsupportedOperationException;
}
;
_.toString$ = function toString_52(){
  return this.entry.toString$();
}
;
var Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry_2_classLit = createForClass('java.util', 'Collections/UnmodifiableMap/UnmodifiableEntrySet/UnmodifiableEntry', 281, Ljava_lang_Object_2_classLit);
function Collections$UnmodifiableRandomAccessList(list){
  Collections$UnmodifiableList.call(this, list);
}

defineClass(282, 215, {50:1, 60:1}, Collections$UnmodifiableRandomAccessList);
var Ljava_util_Collections$UnmodifiableRandomAccessList_2_classLit = createForClass('java.util', 'Collections/UnmodifiableRandomAccessList', 282, Ljava_util_Collections$UnmodifiableList_2_classLit);
function $clinit_Comparators(){
  $clinit_Comparators = emptyMethod;
  NATURAL = new Comparators$1;
}

var NATURAL;
function $compare(o1, o2){
  checkNotNull_1(o1);
  checkNotNull_1(o2);
  return isJavaString(o1)?compareTo_3(o1, o2):o1.compareTo(o2);
}

function Comparators$1(){
}

defineClass(703, 1, {}, Comparators$1);
var Ljava_util_Comparators$1_2_classLit = createForClass('java.util', 'Comparators/1', 703, Ljava_lang_Object_2_classLit);
function checkStructuralChange(host, iterator){
  if (iterator._gwt_modCount != host._gwt_modCount) {
    throw new ConcurrentModificationException;
  }
}

function recordLastKnownStructure(host, iterator){
  setModCount(iterator, host._gwt_modCount);
}

function setModCount(o, modCount){
  o._gwt_modCount = modCount;
}

function structureChanged(map_0){
  var modCount;
  modCount = map_0._gwt_modCount | 0;
  setModCount(map_0, modCount + 1);
}

function ConcurrentModificationException(){
  RuntimeException.call(this);
}

defineClass(602, 10, $intern_13, ConcurrentModificationException);
var Ljava_util_ConcurrentModificationException_2_classLit = createForClass('java.util', 'ConcurrentModificationException', 602, Ljava_lang_RuntimeException_2_classLit);
function Date_0(date){
  this.jsdate = create(toDouble(date));
}

function padTwo(number){
  return number < 10?'0' + number:'' + number;
}

defineClass(183, 1, {3:1, 9:1, 183:1}, Date_0);
_.compareTo = function compareTo_8(other){
  return compare_4(fromDouble(this.jsdate.getTime()), fromDouble(other.jsdate.getTime()));
}
;
_.equals$ = function equals_30(obj){
  return instanceOf(obj, 183) && eq(fromDouble(this.jsdate.getTime()), fromDouble(obj.jsdate.getTime()));
}
;
_.hashCode$ = function hashCode_35(){
  var time;
  time = fromDouble(this.jsdate.getTime());
  return toInt(xor(time, shru(time, 32)));
}
;
_.toString$ = function toString_53(){
  var hourOffset, minuteOffset, offset;
  offset = -this.jsdate.getTimezoneOffset();
  hourOffset = (offset >= 0?'+':'') + ~~(offset / 60);
  minuteOffset = (offset < 0?-offset:offset) % 60 < 10?'0' + (offset < 0?-offset:offset) % 60:'' + (offset < 0?-offset:offset) % 60;
  return ($clinit_Date$StringData() , DAYS)[this.jsdate.getDay()] + ' ' + MONTHS[this.jsdate.getMonth()] + ' ' + padTwo(this.jsdate.getDate()) + ' ' + padTwo(this.jsdate.getHours()) + ':' + padTwo(this.jsdate.getMinutes()) + ':' + padTwo(this.jsdate.getSeconds()) + ' GMT' + hourOffset + minuteOffset + ' ' + this.jsdate.getFullYear();
}
;
var Ljava_util_Date_2_classLit = createForClass('java.util', 'Date', 183, Ljava_lang_Object_2_classLit);
function $clinit_Date$StringData(){
  $clinit_Date$StringData = emptyMethod;
  DAYS = initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']);
  MONTHS = initValues(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_1, 2, 4, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);
}

var DAYS, MONTHS;
function $get_11(this$static, k){
  return $contains_6(this$static.keySet, k)?this$static.values[k.ordinal]:null;
}

function $put_4(this$static, key, value_0){
  return $add_10(this$static.keySet, key) , $set_2(this$static, key.ordinal, value_0);
}

function $remove_10(this$static, key){
  return $remove_11(this$static.keySet, key)?$set_2(this$static, key.ordinal, null):null;
}

function $set_2(this$static, ordinal, value_0){
  var was;
  was = this$static.values[ordinal];
  this$static.values[ordinal] = value_0;
  return was;
}

function EnumMap(type_0){
  var all;
  this.keySet = (all = type_0.enumConstantsFunc && type_0.enumConstantsFunc() , new EnumSet$EnumSetImpl(all, createFrom(all, all.length)));
  this.values = initDim(Ljava_lang_Object_2_classLit, $intern_1, 1, this.keySet.all.length, 3, 1);
}

defineClass(298, 959, $intern_29, EnumMap);
_.containsKey = function containsKey_6(key){
  return $contains_6(this.keySet, key);
}
;
_.entrySet_0 = function entrySet_4(){
  return new EnumMap$EntrySet(this);
}
;
_.get_1 = function get_16(k){
  return $get_11(this, k);
}
;
_.put = function put_4(key, value_0){
  return $put_4(this, key, value_0);
}
;
_.remove_2 = function remove_32(key){
  return $remove_10(this, key);
}
;
_.size_1 = function size_26(){
  return this.keySet.size_0;
}
;
var Ljava_util_EnumMap_2_classLit = createForClass('java.util', 'EnumMap', 298, Ljava_util_AbstractMap_2_classLit);
function $contains_5(this$static, o){
  if (instanceOf(o, 42)) {
    return $containsEntry(this$static.this$01, o);
  }
  return false;
}

function EnumMap$EntrySet(this$0){
  this.this$01 = this$0;
}

defineClass(566, 961, $intern_8, EnumMap$EntrySet);
_.contains_0 = function contains_23(o){
  return $contains_5(this, o);
}
;
_.iterator = function iterator_29(){
  return new EnumMap$EntrySetIterator(this.this$01);
}
;
_.remove = function remove_33(entry){
  var key;
  if ($contains_5(this, entry)) {
    key = entry.getKey();
    $remove_10(this.this$01, key);
    return true;
  }
  return false;
}
;
_.size_1 = function size_27(){
  return this.this$01.keySet.size_0;
}
;
var Ljava_util_EnumMap$EntrySet_2_classLit = createForClass('java.util', 'EnumMap/EntrySet', 566, Ljava_util_AbstractSet_2_classLit);
function EnumMap$EntrySetIterator(this$0){
  this.this$01 = this$0;
  this.it = new EnumSet$EnumSetImpl$IteratorImpl(this.this$01.keySet);
}

defineClass(567, 1, {}, EnumMap$EntrySetIterator);
_.hasNext = function hasNext_17(){
  return $hasNext_1(this.it);
}
;
_.next_0 = function next_18(){
  return this.key_0 = $next_4(this.it) , new EnumMap$MapEntry(this.this$01, this.key_0);
}
;
_.remove_1 = function remove_34(){
  checkState_1(!!this.key_0);
  $remove_10(this.this$01, this.key_0);
  this.key_0 = null;
}
;
var Ljava_util_EnumMap$EntrySetIterator_2_classLit = createForClass('java.util', 'EnumMap/EntrySetIterator', 567, Ljava_lang_Object_2_classLit);
function EnumMap$MapEntry(this$0, key){
  this.this$01 = this$0;
  this.key_0 = key;
}

defineClass(568, 967, $intern_5, EnumMap$MapEntry);
_.getKey = function getKey_3(){
  return this.key_0;
}
;
_.getValue = function getValue_3(){
  return this.this$01.values[this.key_0.ordinal];
}
;
_.setValue = function setValue_4(value_0){
  return $set_2(this.this$01, this.key_0.ordinal, value_0);
}
;
var Ljava_util_EnumMap$MapEntry_2_classLit = createForClass('java.util', 'EnumMap/MapEntry', 568, Ljava_util_AbstractMapEntry_2_classLit);
defineClass(996, 961, $intern_8);
var Ljava_util_EnumSet_2_classLit = createForClass('java.util', 'EnumSet', 996, Ljava_util_AbstractSet_2_classLit);
function $add_10(this$static, e){
  var ordinal;
  checkNotNull_1(e);
  ordinal = e.ordinal;
  if (!this$static.set_0[ordinal]) {
    this$static.set_0[ordinal] = e;
    ++this$static.size_0;
    return true;
  }
  return false;
}

function $contains_6(this$static, o){
  return instanceOf(o, 7) && !!o && this$static.set_0[o.ordinal] == o;
}

function $remove_11(this$static, o){
  return instanceOf(o, 7) && $removeEnum(this$static, o);
}

function $removeEnum(this$static, e){
  if (!!e && this$static.set_0[e.ordinal] == e) {
    this$static.set_0[e.ordinal] = null;
    --this$static.size_0;
    return true;
  }
  return false;
}

function EnumSet$EnumSetImpl(all, set_0){
  this.all = all;
  this.set_0 = set_0;
  this.size_0 = 0;
}

defineClass(599, 996, $intern_8, EnumSet$EnumSetImpl);
_.add_0 = function add_11(e){
  return $add_10(this, e);
}
;
_.contains_0 = function contains_24(o){
  return $contains_6(this, o);
}
;
_.iterator = function iterator_30(){
  return new EnumSet$EnumSetImpl$IteratorImpl(this);
}
;
_.remove = function remove_35(o){
  return $remove_11(this, o);
}
;
_.size_1 = function size_28(){
  return this.size_0;
}
;
_.size_0 = 0;
var Ljava_util_EnumSet$EnumSetImpl_2_classLit = createForClass('java.util', 'EnumSet/EnumSetImpl', 599, Ljava_util_EnumSet_2_classLit);
function $findNext(this$static){
  var c;
  ++this$static.i;
  for (c = this$static.this$11.all.length; this$static.i < c; ++this$static.i) {
    if (this$static.this$11.set_0[this$static.i]) {
      return;
    }
  }
}

function $hasNext_1(this$static){
  return this$static.i < this$static.this$11.all.length;
}

function $next_4(this$static){
  return checkCriticalElement(this$static.i < this$static.this$11.all.length) , this$static.last = this$static.i , $findNext(this$static) , this$static.this$11.set_0[this$static.last];
}

function EnumSet$EnumSetImpl$IteratorImpl(this$1){
  this.this$11 = this$1;
  $findNext(this);
}

defineClass(311, 1, {}, EnumSet$EnumSetImpl$IteratorImpl);
_.hasNext = function hasNext_18(){
  return $hasNext_1(this);
}
;
_.next_0 = function next_19(){
  return $next_4(this);
}
;
_.remove_1 = function remove_36(){
  checkState_1(this.last != -1);
  this.this$11.set_0[this.last] = null;
  --this.this$11.size_0;
  this.last = -1;
}
;
_.i = -1;
_.last = -1;
var Ljava_util_EnumSet$EnumSetImpl$IteratorImpl_2_classLit = createForClass('java.util', 'EnumSet/EnumSetImpl/IteratorImpl', 311, Ljava_lang_Object_2_classLit);
function HashMap(){
  $reset(this);
}

function HashMap_0(ignored){
  checkCriticalArgument_0(ignored >= 0, 'Negative initial capacity');
  checkCriticalArgument_0(true, 'Non-positive load factor');
  $reset(this);
}

defineClass(29, 212, $intern_7, HashMap, HashMap_0);
_.equals = function equals_31(value1, value2){
  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals_Ljava_lang_Object__Z__devirtual$(value1, value2);
}
;
_.getHashCode = function getHashCode_1(key){
  var hashCode;
  hashCode = hashCode__I__devirtual$(key);
  return ~~hashCode;
}
;
var Ljava_util_HashMap_2_classLit = createForClass('java.util', 'HashMap', 29, Ljava_util_AbstractHashMap_2_classLit);
function $add_11(this$static, o){
  var old;
  old = this$static.map_0.put(o, this$static);
  return old == null;
}

function $contains_7(this$static, o){
  return this$static.map_0.containsKey(o);
}

function $remove_12(this$static, o){
  return this$static.map_0.remove_2(o) != null;
}

function HashSet(){
  this.map_0 = new HashMap;
}

function HashSet_0(c){
  this.map_0 = new HashMap_0(c.map_0.size_1());
  $addAll(this, c);
}

defineClass(127, 961, {3:1, 38:1}, HashSet, HashSet_0);
_.add_0 = function add_12(o){
  return $add_11(this, o);
}
;
_.contains_0 = function contains_25(o){
  return $contains_7(this, o);
}
;
_.isEmpty = function isEmpty_13(){
  return this.map_0.size_1() == 0;
}
;
_.iterator = function iterator_31(){
  return $iterator_0(new AbstractMap$1(this.map_0));
}
;
_.remove = function remove_37(o){
  return $remove_12(this, o);
}
;
_.size_1 = function size_29(){
  return this.map_0.size_1();
}
;
_.toString$ = function toString_54(){
  return $toString_0(new AbstractMap$1(this.map_0));
}
;
var Ljava_util_HashSet_2_classLit = createForClass('java.util', 'HashSet', 127, Ljava_util_AbstractSet_2_classLit);
function $ensureChain(this$static, hashCode){
  var map_0 = this$static.backingMap;
  return map_0[hashCode] || (map_0[hashCode] = []);
}

function $getChain(this$static, hashCode){
  return this$static.backingMap[hashCode];
}

function $getChainOrEmpty(this$static, hashCode){
  return this$static.backingMap[hashCode] || [];
}

function $getEntry(this$static, key){
  var entry, entry$array, entry$index, entry$max;
  for (entry$array = $getChainOrEmpty(this$static, key == null?'0':'' + this$static.host.getHashCode(key)) , entry$index = 0 , entry$max = entry$array.length; entry$index < entry$max; ++entry$index) {
    entry = entry$array[entry$index];
    if (this$static.host.equals(key, entry.getKey())) {
      return entry;
    }
  }
  return null;
}

function $keys(this$static){
  return Object.getOwnPropertyNames(this$static.backingMap);
}

function $put_5(this$static, key, value_0){
  var chain, entry, entry$index, entry$max;
  chain = $ensureChain(this$static, key == null?'0':'' + this$static.host.getHashCode(key));
  for (entry$index = 0 , entry$max = chain.length; entry$index < entry$max; ++entry$index) {
    entry = chain[entry$index];
    if (this$static.host.equals(key, entry.getKey())) {
      return entry.setValue(value_0);
    }
  }
  chain[chain.length] = new AbstractMap$SimpleEntry(key, value_0);
  $elementAdded(this$static.host);
  return null;
}

function $remove_13(this$static, key){
  var chain, entry, hashCode, i;
  hashCode = key == null?'0':'' + this$static.host.getHashCode(key);
  chain = $getChainOrEmpty(this$static, hashCode);
  for (i = 0; i < chain.length; i++) {
    entry = chain[i];
    if (this$static.host.equals(key, entry.getKey())) {
      chain.length == 1?(delete this$static.backingMap[hashCode] , undefined):(chain.splice(i, 1) , undefined);
      $elementRemoved(this$static.host);
      return entry.getValue();
    }
  }
  return null;
}

function InternalJsHashCodeMap(){
  this.backingMap = this.createMap();
}

defineClass(292, 1, {}, InternalJsHashCodeMap);
_.containsValue = function containsValue_0(value_0){
  var entry, entry$array, entry$index, entry$max, hashCode, hashCode$array, hashCode$index, hashCode$max;
  for (hashCode$array = $keys(this) , hashCode$index = 0 , hashCode$max = hashCode$array.length; hashCode$index < hashCode$max; ++hashCode$index) {
    hashCode = hashCode$array[hashCode$index];
    for (entry$array = this.backingMap[hashCode] , entry$index = 0 , entry$max = entry$array.length; entry$index < entry$max; ++entry$index) {
      entry = entry$array[entry$index];
      if (this.host.equals(value_0, entry.getValue())) {
        return true;
      }
    }
  }
  return false;
}
;
_.createMap = function createMap(){
  return Object.create(null);
}
;
_.entries_0 = function entries_0(){
  return new InternalJsHashCodeMap$1(this);
}
;
var Ljava_util_InternalJsHashCodeMap_2_classLit = createForClass('java.util', 'InternalJsHashCodeMap', 292, Ljava_lang_Object_2_classLit);
function $hasNext_2(this$static){
  if (this$static.itemIndex < this$static.chain.length) {
    return true;
  }
  if (this$static.chainIndex < this$static.keys_0.length - 1) {
    this$static.chain = $getChain(this$static.this$01, this$static.keys_0[++this$static.chainIndex]);
    this$static.itemIndex = 0;
    return true;
  }
  return false;
}

function InternalJsHashCodeMap$1(this$0){
  this.this$01 = this$0;
  this.keys_0 = $keys(this.this$01);
  this.chain = initDim(Ljava_util_Map$Entry_2_classLit, $intern_1, 42, 0, 0, 1);
}

defineClass(479, 1, {}, InternalJsHashCodeMap$1);
_.hasNext = function hasNext_19(){
  return $hasNext_2(this);
}
;
_.next_0 = function next_20(){
  return checkCriticalElement($hasNext_2(this)) , this.lastChain = this.chain , this.lastEntry = this.chain[this.itemIndex++] , this.lastEntry;
}
;
_.remove_1 = function remove_38(){
  checkState_1(!!this.lastEntry);
  $remove_13(this.this$01, this.lastEntry.getKey());
  maskUndefined(this.chain) === maskUndefined(this.lastChain) && this.chain.length != 1 && --this.itemIndex;
  this.lastEntry = null;
}
;
_.chainIndex = -1;
_.itemIndex = 0;
_.lastChain = null;
_.lastEntry = null;
var Ljava_util_InternalJsHashCodeMap$1_2_classLit = createForClass('java.util', 'InternalJsHashCodeMap/1', 479, Ljava_lang_Object_2_classLit);
function InternalJsHashCodeMap$InternalJsHashCodeMapLegacy(){
  InternalJsHashCodeMap.call(this);
}

defineClass(477, 292, {}, InternalJsHashCodeMap$InternalJsHashCodeMapLegacy);
_.containsValue = function containsValue_1(value_0){
  var map_0 = this.backingMap;
  for (var hashCode in map_0) {
    if (hashCode == parseInt(hashCode, 10)) {
      var array = map_0[hashCode];
      for (var i = 0, c = array.length; i < c; ++i) {
        var entry = array[i];
        var entryValue = entry.getValue();
        if (this.equalsBridge(value_0, entryValue)) {
          return true;
        }
      }
    }
  }
  return false;
}
;
_.createMap = function createMap_0(){
  return {};
}
;
_.entries_0 = function entries_1(){
  var list = this.newEntryList();
  var map_0 = this.backingMap;
  for (var hashCode in map_0) {
    if (hashCode == parseInt(hashCode, 10)) {
      var array = map_0[hashCode];
      for (var i = 0, c = array.length; i < c; ++i) {
        list.add_0(array[i]);
      }
    }
  }
  return list.iterator();
}
;
_.equalsBridge = function equalsBridge(value1, value2){
  return this.host.equals(value1, value2);
}
;
_.newEntryList = function newEntryList(){
  return new InternalJsHashCodeMap$InternalJsHashCodeMapLegacy$1(this);
}
;
var Ljava_util_InternalJsHashCodeMap$InternalJsHashCodeMapLegacy_2_classLit = createForClass('java.util', 'InternalJsHashCodeMap/InternalJsHashCodeMapLegacy', 477, Ljava_util_InternalJsHashCodeMap_2_classLit);
function InternalJsHashCodeMap$InternalJsHashCodeMapLegacy$1(this$1){
  this.this$11 = this$1;
  ArrayList.call(this);
}

defineClass(478, 13, $intern_3, InternalJsHashCodeMap$InternalJsHashCodeMapLegacy$1);
_.remove_0 = function remove_39(index_0){
  var removed;
  return removed = $remove(this, index_0) , $remove_13(this.this$11, removed.getKey()) , removed;
}
;
var Ljava_util_InternalJsHashCodeMap$InternalJsHashCodeMapLegacy$1_2_classLit = createForClass('java.util', 'InternalJsHashCodeMap/InternalJsHashCodeMapLegacy/1', 478, Ljava_util_ArrayList_2_classLit);
function InternalJsMapFactory(){
}

defineClass(474, 1, {}, InternalJsMapFactory);
_.createJsHashCodeMap = function createJsHashCodeMap(){
  return new InternalJsHashCodeMap;
}
;
_.createJsStringMap = function createJsStringMap(){
  return new InternalJsStringMap;
}
;
var Ljava_util_InternalJsMapFactory_2_classLit = createForClass('java.util', 'InternalJsMapFactory', 474, Ljava_lang_Object_2_classLit);
function $clinit_InternalJsMapFactory$BackwardCompatibleJsMapFactory(){
  $clinit_InternalJsMapFactory$BackwardCompatibleJsMapFactory = emptyMethod;
  delegate_0 = createFactory();
}

function canHandleProto(){
  var protoField = '__proto__';
  var map_0 = Object.create(null);
  if (map_0[protoField] !== undefined) {
    return false;
  }
  var keys_0 = Object.getOwnPropertyNames(map_0);
  if (keys_0.length != 0) {
    return false;
  }
  map_0[protoField] = 42;
  if (map_0[protoField] !== 42) {
    return false;
  }
  return true;
}

function createFactory(){
  var map_0;
  if (Object.create && Object.getOwnPropertyNames && canHandleProto()) {
    return (map_0 = Object.create(null) , map_0['__proto__'] = 42 , Object.getOwnPropertyNames(map_0).length == 0)?new InternalJsMapFactory$KeysWorkaroundJsMapFactory:new InternalJsMapFactory;
  }
  return new InternalJsMapFactory$LegacyInternalJsMapFactory;
}

var delegate_0;
function InternalJsMapFactory$KeysWorkaroundJsMapFactory(){
}

defineClass(476, 474, {}, InternalJsMapFactory$KeysWorkaroundJsMapFactory);
_.createJsStringMap = function createJsStringMap_0(){
  return new InternalJsStringMap$InternalJsStringMapWithKeysWorkaround;
}
;
var Ljava_util_InternalJsMapFactory$KeysWorkaroundJsMapFactory_2_classLit = createForClass('java.util', 'InternalJsMapFactory/KeysWorkaroundJsMapFactory', 476, Ljava_util_InternalJsMapFactory_2_classLit);
function InternalJsMapFactory$LegacyInternalJsMapFactory(){
}

defineClass(475, 474, {}, InternalJsMapFactory$LegacyInternalJsMapFactory);
_.createJsHashCodeMap = function createJsHashCodeMap_0(){
  return new InternalJsHashCodeMap$InternalJsHashCodeMapLegacy;
}
;
_.createJsStringMap = function createJsStringMap_1(){
  return new InternalJsStringMap$InternalJsStringMapLegacy;
}
;
var Ljava_util_InternalJsMapFactory$LegacyInternalJsMapFactory_2_classLit = createForClass('java.util', 'InternalJsMapFactory/LegacyInternalJsMapFactory', 475, Ljava_util_InternalJsMapFactory_2_classLit);
function $containsValue(this$static, value_0){
  var map_0 = this$static.backingMap;
  for (var key in map_0) {
    if (this$static.equalsBridge_0(value_0, map_0[key])) {
      return true;
    }
  }
  return false;
}

function $keys_0(this$static){
  return Object.getOwnPropertyNames(this$static.backingMap);
}

function $put_6(this$static, key, value_0){
  var oldValue;
  oldValue = this$static.backingMap[key];
  oldValue === undefined && $elementAdded(this$static.host);
  $set_3(this$static, key, value_0 === undefined?null:value_0);
  return oldValue;
}

function $remove_14(this$static, key){
  var value_0;
  value_0 = this$static.backingMap[key];
  if (!(value_0 === undefined)) {
    delete this$static.backingMap[key];
    $elementRemoved(this$static.host);
  }
  return value_0;
}

function $set_3(this$static, key, value_0){
  this$static.backingMap[key] = value_0;
}

function InternalJsStringMap(){
  this.backingMap = this.createMap_0();
}

defineClass(217, 1, {}, InternalJsStringMap);
_.containsValue = function containsValue_2(value_0){
  return $containsValue(this, value_0);
}
;
_.createMap_0 = function createMap_1(){
  return Object.create(null);
}
;
_.entries_0 = function entries_2(){
  var keys_0;
  keys_0 = this.keys_1();
  return new InternalJsStringMap$1(this, keys_0);
}
;
_.equalsBridge_0 = function equalsBridge_0(value1, value2){
  return this.host.equals(value1, value2);
}
;
_.get_2 = function get_17(key){
  return this.backingMap[key];
}
;
_.keys_1 = function keys_1(){
  return $keys_0(this);
}
;
_.newMapEntry = function newMapEntry(key){
  return new InternalJsStringMap$2(this, key);
}
;
_.put_0 = function put_5(key, value_0){
  return $put_6(this, key, value_0);
}
;
_.remove_5 = function remove_40(key){
  return $remove_14(this, key);
}
;
var Ljava_util_InternalJsStringMap_2_classLit = createForClass('java.util', 'InternalJsStringMap', 217, Ljava_lang_Object_2_classLit);
function InternalJsStringMap$1(this$0, val$keys){
  this.this$01 = this$0;
  this.val$keys2 = val$keys;
}

defineClass(405, 1, {}, InternalJsStringMap$1);
_.hasNext = function hasNext_20(){
  return this.i < this.val$keys2.length;
}
;
_.next_0 = function next_21(){
  return checkCriticalElement(this.i < this.val$keys2.length) , new InternalJsStringMap$2(this.this$01, this.val$keys2[this.last = this.i++]);
}
;
_.remove_1 = function remove_41(){
  checkState_1(this.last != -1);
  this.this$01.remove_5(this.val$keys2[this.last]);
  this.last = -1;
}
;
_.i = 0;
_.last = -1;
var Ljava_util_InternalJsStringMap$1_2_classLit = createForClass('java.util', 'InternalJsStringMap/1', 405, Ljava_lang_Object_2_classLit);
function InternalJsStringMap$2(this$0, val$key){
  this.this$01 = this$0;
  this.val$key2 = val$key;
}

defineClass(286, 967, $intern_5, InternalJsStringMap$2);
_.getKey = function getKey_4(){
  return this.val$key2;
}
;
_.getValue = function getValue_4(){
  return this.this$01.get_2(this.val$key2);
}
;
_.setValue = function setValue_5(object){
  return this.this$01.put_0(this.val$key2, object);
}
;
var Ljava_util_InternalJsStringMap$2_2_classLit = createForClass('java.util', 'InternalJsStringMap/2', 286, Ljava_util_AbstractMapEntry_2_classLit);
function InternalJsStringMap$InternalJsStringMapLegacy(){
  InternalJsStringMap.call(this);
}

defineClass(402, 217, {}, InternalJsStringMap$InternalJsStringMapLegacy);
_.containsValue = function containsValue_3(value_0){
  var map_0 = this.backingMap;
  for (var key in map_0) {
    if (key.charCodeAt(0) == 58) {
      var entryValue = map_0[key];
      if (this.equalsBridge_0(value_0, entryValue)) {
        return true;
      }
    }
  }
  return false;
}
;
_.createMap_0 = function createMap_2(){
  return {};
}
;
_.entries_0 = function entries_3(){
  var list = this.newEntryList_0();
  for (var key in this.backingMap) {
    if (key.charCodeAt(0) == 58) {
      var entry = this.newMapEntry(key.substring(1));
      list.add_0(entry);
    }
  }
  return list.iterator();
}
;
_.get_2 = function get_18(key){
  return this.backingMap[':' + key];
}
;
_.newEntryList_0 = function newEntryList_0(){
  return new InternalJsStringMap$InternalJsStringMapLegacy$1(this);
}
;
_.put_0 = function put_6(key, value_0){
  return $put_6(this, ':' + key, value_0);
}
;
_.remove_5 = function remove_42(key){
  return $remove_14(this, ':' + key);
}
;
var Ljava_util_InternalJsStringMap$InternalJsStringMapLegacy_2_classLit = createForClass('java.util', 'InternalJsStringMap/InternalJsStringMapLegacy', 402, Ljava_util_InternalJsStringMap_2_classLit);
function InternalJsStringMap$InternalJsStringMapLegacy$1(this$1){
  this.this$11 = this$1;
  ArrayList.call(this);
}

defineClass(404, 13, $intern_3, InternalJsStringMap$InternalJsStringMapLegacy$1);
_.remove_0 = function remove_43(index_0){
  var removed;
  return removed = $remove(this, index_0) , $remove_14(this.this$11, ':' + removed.getKey()) , removed;
}
;
var Ljava_util_InternalJsStringMap$InternalJsStringMapLegacy$1_2_classLit = createForClass('java.util', 'InternalJsStringMap/InternalJsStringMapLegacy/1', 404, Ljava_util_ArrayList_2_classLit);
function InternalJsStringMap$InternalJsStringMapWithKeysWorkaround(){
  InternalJsStringMap.call(this);
}

defineClass(403, 217, {}, InternalJsStringMap$InternalJsStringMapWithKeysWorkaround);
_.containsValue = function containsValue_4(value_0){
  var protoValue;
  protoValue = this.backingMap['__proto__'];
  if (!(protoValue === undefined) && this.host.equals(value_0, protoValue)) {
    return true;
  }
  return $containsValue(this, value_0);
}
;
_.keys_1 = function keys_2(){
  var keys_0;
  keys_0 = $keys_0(this);
  !(this.backingMap['__proto__'] === undefined) && (keys_0[keys_0.length] = '__proto__');
  return keys_0;
}
;
var Ljava_util_InternalJsStringMap$InternalJsStringMapWithKeysWorkaround_2_classLit = createForClass('java.util', 'InternalJsStringMap/InternalJsStringMapWithKeysWorkaround', 403, Ljava_util_InternalJsStringMap_2_classLit);
function $put_7(this$static, key, value_0){
  var newEntry, old, oldValue;
  old = this$static.map_0.get_1(key);
  if (!old) {
    newEntry = new LinkedHashMap$ChainEntry_0(this$static, key, value_0);
    this$static.map_0.put(key, newEntry);
    $addToEnd(newEntry);
    return null;
  }
   else {
    oldValue = $setValue(old, value_0);
    $recordAccess(this$static, old);
    return oldValue;
  }
}

function $recordAccess(this$static, entry){
  if (this$static.accessOrder) {
    $remove_16(entry);
    $addToEnd(entry);
  }
}

function $remove_15(this$static, key){
  var entry;
  entry = this$static.map_0.remove_2(key);
  if (entry) {
    $remove_16(entry);
    return entry.value_0;
  }
  return null;
}

function LinkedHashMap(){
  HashMap.call(this);
  this.head = new LinkedHashMap$ChainEntry(this);
  this.map_0 = new HashMap;
  this.head.prev = this.head;
  this.head.next = this.head;
}

defineClass(265, 29, $intern_7, LinkedHashMap);
_.clear_0 = function clear_1(){
  this.map_0.clear_0();
  this.head.prev = this.head;
  this.head.next = this.head;
}
;
_.containsKey = function containsKey_7(key){
  return this.map_0.containsKey(key);
}
;
_.containsValue = function containsValue_5(value_0){
  var node;
  node = this.head.next;
  while (node != this.head) {
    if (equals_32(node.value_0, value_0)) {
      return true;
    }
    node = node.next;
  }
  return false;
}
;
_.entrySet_0 = function entrySet_5(){
  return new LinkedHashMap$EntrySet(this);
}
;
_.get_1 = function get_19(key){
  var entry;
  entry = this.map_0.get_1(key);
  if (entry) {
    $recordAccess(this, entry);
    return entry.value_0;
  }
  return null;
}
;
_.put = function put_7(key, value_0){
  return $put_7(this, key, value_0);
}
;
_.remove_2 = function remove_44(key){
  return $remove_15(this, key);
}
;
_.size_1 = function size_30(){
  return this.map_0.size_1();
}
;
_.accessOrder = false;
var Ljava_util_LinkedHashMap_2_classLit = createForClass('java.util', 'LinkedHashMap', 265, Ljava_util_HashMap_2_classLit);
function $addToEnd(this$static){
  var tail;
  tail = this$static.this$01.head.prev;
  this$static.prev = tail;
  this$static.next = this$static.this$01.head;
  tail.next = this$static.this$01.head.prev = this$static;
}

function $remove_16(this$static){
  this$static.next.prev = this$static.prev;
  this$static.prev.next = this$static.next;
  this$static.next = this$static.prev = null;
}

function LinkedHashMap$ChainEntry(this$0){
  LinkedHashMap$ChainEntry_0.call(this, this$0, null, null);
}

function LinkedHashMap$ChainEntry_0(this$0, key, value_0){
  this.this$01 = this$0;
  AbstractMap$SimpleEntry.call(this, key, value_0);
}

defineClass(266, 123, $intern_68, LinkedHashMap$ChainEntry, LinkedHashMap$ChainEntry_0);
var Ljava_util_LinkedHashMap$ChainEntry_2_classLit = createForClass('java.util', 'LinkedHashMap/ChainEntry', 266, Ljava_util_AbstractMap$SimpleEntry_2_classLit);
function $contains_8(this$static, o){
  if (instanceOf(o, 42)) {
    return $containsEntry(this$static.this$01, o);
  }
  return false;
}

function LinkedHashMap$EntrySet(this$0){
  this.this$01 = this$0;
}

defineClass(267, 961, $intern_8, LinkedHashMap$EntrySet);
_.contains_0 = function contains_26(o){
  return $contains_8(this, o);
}
;
_.iterator = function iterator_32(){
  return new LinkedHashMap$EntrySet$EntryIterator(this);
}
;
_.remove = function remove_45(entry){
  var key;
  if ($contains_8(this, entry)) {
    key = entry.getKey();
    $remove_15(this.this$01, key);
    return true;
  }
  return false;
}
;
_.size_1 = function size_31(){
  return this.this$01.map_0.size_1();
}
;
var Ljava_util_LinkedHashMap$EntrySet_2_classLit = createForClass('java.util', 'LinkedHashMap/EntrySet', 267, Ljava_util_AbstractSet_2_classLit);
function LinkedHashMap$EntrySet$EntryIterator(this$1){
  this.this$11 = this$1;
  this.next = this$1.this$01.head.next;
  recordLastKnownStructure(this$1.this$01.map_0, this);
}

defineClass(268, 1, {}, LinkedHashMap$EntrySet$EntryIterator);
_.hasNext = function hasNext_21(){
  return this.next != this.this$11.this$01.head;
}
;
_.next_0 = function next_22(){
  return checkStructuralChange(this.this$11.this$01.map_0, this) , checkCriticalElement(this.next != this.this$11.this$01.head) , this.last = this.next , this.next = this.next.next , this.last;
}
;
_.remove_1 = function remove_46(){
  checkState_1(!!this.last);
  checkStructuralChange(this.this$11.this$01.map_0, this);
  $remove_16(this.last);
  this.this$11.this$01.map_0.remove_2(this.last.key_0);
  recordLastKnownStructure(this.this$11.this$01.map_0, this);
  this.last = null;
}
;
var Ljava_util_LinkedHashMap$EntrySet$EntryIterator_2_classLit = createForClass('java.util', 'LinkedHashMap/EntrySet/EntryIterator', 268, Ljava_lang_Object_2_classLit);
function $addNode(this$static, o, prev, next){
  var node;
  node = new LinkedList$Node;
  node.value_0 = o;
  node.prev = prev;
  node.next = next;
  next.prev = prev.next = node;
  ++this$static.size_0;
}

function $listIterator_0(this$static, index_0){
  var i, node;
  checkPositionIndex_0(index_0, this$static.size_0);
  if (index_0 >= this$static.size_0 >> 1) {
    node = this$static.tail;
    for (i = this$static.size_0; i > index_0; --i) {
      node = node.prev;
    }
  }
   else {
    node = this$static.header.next;
    for (i = 0; i < index_0; ++i) {
      node = node.next;
    }
  }
  return new LinkedList$ListIteratorImpl(this$static, index_0, node);
}

function $removeNode(this$static, node){
  var oldValue;
  oldValue = node.value_0;
  node.next.prev = node.prev;
  node.prev.next = node.next;
  node.next = node.prev = null;
  node.value_0 = null;
  --this$static.size_0;
  return oldValue;
}

function LinkedList(){
  this.header = new LinkedList$Node;
  this.tail = new LinkedList$Node;
  this.header.next = this.tail;
  this.tail.prev = this.header;
  this.header.prev = this.tail.next = null;
  this.size_0 = 0;
}

defineClass(760, 994, {3:1, 50:1}, LinkedList);
_.add_0 = function add_13(o){
  $addNode(this, o, this.tail.prev, this.tail);
  return true;
}
;
_.listIterator_0 = function listIterator_8(index_0){
  return $listIterator_0(this, index_0);
}
;
_.size_1 = function size_32(){
  return this.size_0;
}
;
_.size_0 = 0;
var Ljava_util_LinkedList_2_classLit = createForClass('java.util', 'LinkedList', 760, Ljava_util_AbstractSequentialList_2_classLit);
function $remove_17(this$static){
  var nextNode;
  checkState_1(!!this$static.lastNode);
  nextNode = this$static.lastNode.next;
  $removeNode(this$static.this$01, this$static.lastNode);
  this$static.currentNode == this$static.lastNode?(this$static.currentNode = nextNode):--this$static.currentIndex;
  this$static.lastNode = null;
}

function LinkedList$ListIteratorImpl(this$0, index_0, startNode){
  this.this$01 = this$0;
  this.currentNode = startNode;
  this.currentIndex = index_0;
}

defineClass(761, 1, {}, LinkedList$ListIteratorImpl);
_.hasNext = function hasNext_22(){
  return this.currentNode != this.this$01.tail;
}
;
_.hasPrevious = function hasPrevious_3(){
  return this.currentNode.prev != this.this$01.header;
}
;
_.next_0 = function next_23(){
  return checkCriticalElement(this.currentNode != this.this$01.tail) , this.lastNode = this.currentNode , this.currentNode = this.currentNode.next , ++this.currentIndex , this.lastNode.value_0;
}
;
_.previous_0 = function previous_4(){
  checkCriticalElement(this.currentNode.prev != this.this$01.header);
  this.lastNode = this.currentNode = this.currentNode.prev;
  --this.currentIndex;
  return this.lastNode.value_0;
}
;
_.remove_1 = function remove_47(){
  $remove_17(this);
}
;
_.currentIndex = 0;
_.lastNode = null;
var Ljava_util_LinkedList$ListIteratorImpl_2_classLit = createForClass('java.util', 'LinkedList/ListIteratorImpl', 761, Ljava_lang_Object_2_classLit);
function LinkedList$Node(){
}

defineClass(254, 1, {}, LinkedList$Node);
var Ljava_util_LinkedList$Node_2_classLit = createForClass('java.util', 'LinkedList/Node', 254, Ljava_lang_Object_2_classLit);
var Ljava_util_Map$Entry_2_classLit = createForInterface('java.util', 'Map/Entry');
function NoSuchElementException(){
  RuntimeException.call(this);
}

defineClass(69, 10, {3:1, 18:1, 10:1, 12:1, 69:1}, NoSuchElementException);
var Ljava_util_NoSuchElementException_2_classLit = createForClass('java.util', 'NoSuchElementException', 69, Ljava_lang_RuntimeException_2_classLit);
function equals_32(a, b){
  return maskUndefined(a) === maskUndefined(b) || a != null && equals_Ljava_lang_Object__Z__devirtual$(a, b);
}

function hashCode_36(o){
  return o != null?hashCode__I__devirtual$(o):0;
}

function $clinit_Random(){
  $clinit_Random = emptyMethod;
  var i, i0, twoToTheXMinus24Tmp, twoToTheXMinus48Tmp;
  twoToTheXMinus24 = initDim(D_classLit, $intern_69, 0, 25, 7, 1);
  twoToTheXMinus48 = initDim(D_classLit, $intern_69, 0, 33, 7, 1);
  twoToTheXMinus48Tmp = 1.52587890625E-5;
  for (i0 = 32; i0 >= 0; i0--) {
    twoToTheXMinus48[i0] = twoToTheXMinus48Tmp;
    twoToTheXMinus48Tmp *= 0.5;
  }
  twoToTheXMinus24Tmp = 1;
  for (i = 24; i >= 0; i--) {
    twoToTheXMinus24[i] = twoToTheXMinus24Tmp;
    twoToTheXMinus24Tmp *= 0.5;
  }
}

function $nextInt_0(this$static, n){
  var bits, val;
  checkCriticalArgument(n > 0);
  if ((n & -n) == n) {
    return round_int(n * $nextInternal(this$static, 31) * 4.6566128730773926E-10);
  }
  do {
    bits = $nextInternal(this$static, 31);
    val = bits % n;
  }
   while (bits - val + (n - 1) < 0);
  return round_int(val);
}

function $nextInternal(this$static, bits){
  var carry, dval, h, hi, l, lo;
  hi = this$static.seedhi * $intern_70 + this$static.seedlo * 1502;
  lo = this$static.seedlo * $intern_70 + 11;
  carry = Math.floor(lo * $intern_54);
  hi += carry;
  lo -= carry * $intern_31;
  hi %= $intern_31;
  this$static.seedhi = hi;
  this$static.seedlo = lo;
  if (bits <= 24) {
    return floor_0(this$static.seedhi * twoToTheXMinus24[bits]);
  }
   else {
    h = this$static.seedhi * (1 << bits - 24);
    l = floor_0(this$static.seedlo * twoToTheXMinus48[bits]);
    dval = h + l;
    dval >= 2147483648 && (dval -= 4294967296);
    return dval;
  }
}

function Random(){
  $clinit_Random();
  var hi, lo, seed;
  seed = uniqueSeed++ + now_1();
  hi = round_int(Math.floor(seed * $intern_54)) & $intern_57;
  lo = round_int(seed - hi * $intern_31);
  this.seedhi = hi ^ 1502;
  this.seedlo = lo ^ $intern_70;
}

defineClass(154, 1, {}, Random);
_.seedhi = 0;
_.seedlo = 0;
var twoToTheXMinus24, twoToTheXMinus48, uniqueSeed = 0;
var Ljava_util_Random_2_classLit = createForClass('java.util', 'Random', 154, Ljava_lang_Object_2_classLit);
function $getEntry_0(this$static, key){
  var c, childNum, tree;
  tree = this$static.root;
  while (tree) {
    c = $compare(key, tree.key_0);
    if (c == 0) {
      return tree;
    }
    childNum = c < 0?0:1;
    tree = tree.child[childNum];
  }
  return null;
}

function $inOrderAdd(this$static, list, type_0, current, fromKey, fromInclusive, toKey, toInclusive){
  var leftNode, rightNode;
  if (!current) {
    return;
  }
  leftNode = current.child[0];
  !!leftNode && $inOrderAdd(this$static, list, type_0, leftNode, fromKey, fromInclusive, toKey, toInclusive);
  $inRange(type_0, current.key_0, fromKey, fromInclusive, toKey, toInclusive) && list.add_0(current);
  rightNode = current.child[1];
  !!rightNode && $inOrderAdd(this$static, list, type_0, rightNode, fromKey, fromInclusive, toKey, toInclusive);
}

function $inRange(type_0, key, fromKey, fromInclusive, toKey, toInclusive){
  var compare, compare_0;
  if (type_0.fromKeyValid() && (compare = $compare(key, fromKey) , compare < 0 || !fromInclusive && compare == 0)) {
    return false;
  }
  if (type_0.toKeyValid() && (compare_0 = $compare(key, toKey) , compare_0 > 0 || !toInclusive && compare_0 == 0)) {
    return false;
  }
  return true;
}

function $insert_1(this$static, tree, newNode, state){
  var c, childNum;
  if (!tree) {
    return newNode;
  }
   else {
    c = $compare(newNode.key_0, tree.key_0);
    if (c == 0) {
      state.value_0 = $setValue(tree, newNode.value_0);
      state.found = true;
      return tree;
    }
    childNum = c < 0?0:1;
    tree.child[childNum] = $insert_1(this$static, tree.child[childNum], newNode, state);
    if ($isRed(tree.child[childNum])) {
      if ($isRed(tree.child[1 - childNum])) {
        tree.isRed = true;
        tree.child[0].isRed = false;
        tree.child[1].isRed = false;
      }
       else {
        $isRed(tree.child[childNum].child[childNum])?(tree = $rotateSingle(tree, 1 - childNum)):$isRed(tree.child[childNum].child[1 - childNum]) && (tree = $rotateDouble(tree, 1 - childNum));
      }
    }
  }
  return tree;
}

function $isRed(node){
  return !!node && node.isRed;
}

function $put_8(this$static, key, value_0){
  var node, state;
  node = new TreeMap$Node(key, value_0);
  state = new TreeMap$State;
  this$static.root = $insert_1(this$static, this$static.root, node, state);
  state.found || ++this$static.size_0;
  this$static.root.isRed = false;
  return state.value_0;
}

function $remove_18(this$static, k){
  var state;
  state = new TreeMap$State;
  $removeWithState(this$static, k, state);
  return state.value_0;
}

function $removeEntry(this$static, entry){
  var state;
  state = new TreeMap$State;
  state.matchValue = true;
  state.value_0 = entry.getValue();
  return $removeWithState(this$static, entry.getKey(), state);
}

function $removeWithState(this$static, key, state){
  var c, dir_0, dir2, found, grandparent, head, last, newNode, node, parent_0, sibling;
  if (!this$static.root) {
    return false;
  }
  found = null;
  parent_0 = null;
  head = new TreeMap$Node(null, null);
  dir_0 = 1;
  head.child[1] = this$static.root;
  node = head;
  while (node.child[dir_0]) {
    last = dir_0;
    grandparent = parent_0;
    parent_0 = node;
    node = node.child[dir_0];
    c = $compare(key, node.key_0);
    dir_0 = c < 0?0:1;
    c == 0 && (!state.matchValue || equals_32(node.value_0, state.value_0)) && (found = node);
    if (!(!!node && node.isRed) && !$isRed(node.child[dir_0])) {
      if ($isRed(node.child[1 - dir_0])) {
        parent_0 = parent_0.child[last] = $rotateSingle(node, dir_0);
      }
       else if (!$isRed(node.child[1 - dir_0])) {
        sibling = parent_0.child[1 - last];
        if (sibling) {
          if (!$isRed(sibling.child[1 - last]) && !$isRed(sibling.child[last])) {
            parent_0.isRed = false;
            sibling.isRed = true;
            node.isRed = true;
          }
           else {
            dir2 = grandparent.child[1] == parent_0?1:0;
            $isRed(sibling.child[last])?(grandparent.child[dir2] = $rotateDouble(parent_0, last)):$isRed(sibling.child[1 - last]) && (grandparent.child[dir2] = $rotateSingle(parent_0, last));
            node.isRed = grandparent.child[dir2].isRed = true;
            grandparent.child[dir2].child[0].isRed = false;
            grandparent.child[dir2].child[1].isRed = false;
          }
        }
      }
    }
  }
  if (found) {
    state.found = true;
    state.value_0 = found.value_0;
    if (node != found) {
      newNode = new TreeMap$Node(node.key_0, node.value_0);
      $replaceNode(head, found, newNode);
      parent_0 == found && (parent_0 = newNode);
    }
    parent_0.child[parent_0.child[1] == node?1:0] = node.child[!node.child[0]?1:0];
    --this$static.size_0;
  }
  this$static.root = head.child[1];
  !!this$static.root && (this$static.root.isRed = false);
  return state.found;
}

function $replaceNode(head, node, newNode){
  var direction, parent_0;
  parent_0 = head;
  direction = parent_0.key_0 == null || $compare(node.key_0, parent_0.key_0) > 0?1:0;
  while (parent_0.child[direction] != node) {
    parent_0 = parent_0.child[direction];
    direction = $compare(node.key_0, parent_0.key_0) > 0?1:0;
  }
  parent_0.child[direction] = newNode;
  newNode.isRed = node.isRed;
  newNode.child[0] = node.child[0];
  newNode.child[1] = node.child[1];
  node.child[0] = null;
  node.child[1] = null;
}

function $rotateDouble(tree, rotateDirection){
  var otherChildDir;
  otherChildDir = 1 - rotateDirection;
  tree.child[otherChildDir] = $rotateSingle(tree.child[otherChildDir], otherChildDir);
  return $rotateSingle(tree, rotateDirection);
}

function $rotateSingle(tree, rotateDirection){
  var otherChildDir, save;
  otherChildDir = 1 - rotateDirection;
  save = tree.child[otherChildDir];
  tree.child[otherChildDir] = save.child[rotateDirection];
  save.child[rotateDirection] = tree;
  tree.isRed = true;
  save.isRed = false;
  return save;
}

function TreeMap(){
  this.root = null;
  $clinit_Comparators();
}

defineClass(352, 1019, $intern_7, TreeMap);
_.entrySet_0 = function entrySet_6(){
  return new TreeMap$EntrySet(this);
}
;
_.put = function put_8(key, value_0){
  return $put_8(this, key, value_0);
}
;
_.remove_2 = function remove_48(k){
  return $remove_18(this, k);
}
;
_.size_1 = function size_33(){
  return this.size_0;
}
;
_.size_0 = 0;
var Ljava_util_TreeMap_2_classLit = createForClass('java.util', 'TreeMap', 352, Ljava_util_AbstractNavigableMap_2_classLit);
function $next_5(this$static){
  return this$static.last = this$static.iter.next_0();
}

function $remove_19(this$static){
  this$static.iter.remove_1();
  $removeEntry(this$static.this$01, this$static.last);
  this$static.last = null;
}

function TreeMap$EntryIterator(this$0){
  TreeMap$EntryIterator_0.call(this, this$0, ($clinit_TreeMap$SubMapType() , All));
}

function TreeMap$EntryIterator_0(this$0, type_0){
  var list;
  this.this$01 = this$0;
  list = new ArrayList;
  $inOrderAdd(this$0, list, type_0, this$0.root, null, false, null, false);
  this.iter = new AbstractList$ListIteratorImpl(list, 0);
}

defineClass(262, 1, {}, TreeMap$EntryIterator);
_.hasNext = function hasNext_23(){
  return this.iter.hasNext();
}
;
_.next_0 = function next_24(){
  return $next_5(this);
}
;
_.remove_1 = function remove_49(){
  $remove_19(this);
}
;
var Ljava_util_TreeMap$EntryIterator_2_classLit = createForClass('java.util', 'TreeMap/EntryIterator', 262, Ljava_lang_Object_2_classLit);
function TreeMap$EntrySet(this$0){
  AbstractNavigableMap$EntrySet.call(this, this$0);
}

defineClass(354, 353, $intern_8, TreeMap$EntrySet);
var Ljava_util_TreeMap$EntrySet_2_classLit = createForClass('java.util', 'TreeMap/EntrySet', 354, Ljava_util_AbstractNavigableMap$EntrySet_2_classLit);
function TreeMap$Node(key, value_0){
  AbstractMap$SimpleEntry.call(this, key, value_0);
  this.child = initDim(Ljava_util_TreeMap$Node_2_classLit, $intern_1, 159, 2, 0, 1);
  this.isRed = true;
}

defineClass(159, 123, {163:1, 123:1, 42:1, 159:1}, TreeMap$Node);
_.isRed = false;
var Ljava_util_TreeMap$Node_2_classLit = createForClass('java.util', 'TreeMap/Node', 159, Ljava_util_AbstractMap$SimpleEntry_2_classLit);
function TreeMap$State(){
}

defineClass(263, 1, {}, TreeMap$State);
_.toString$ = function toString_55(){
  return 'State: mv=' + this.matchValue + ' value=' + this.value_0 + ' done=' + this.done + ' found=' + this.found;
}
;
_.done = false;
_.found = false;
_.matchValue = false;
var Ljava_util_TreeMap$State_2_classLit = createForClass('java.util', 'TreeMap/State', 263, Ljava_lang_Object_2_classLit);
function $clinit_TreeMap$SubMapType(){
  $clinit_TreeMap$SubMapType = emptyMethod;
  All = new TreeMap$SubMapType('All', 0);
  Head = new TreeMap$SubMapType$1;
  Range_0 = new TreeMap$SubMapType$2;
  Tail = new TreeMap$SubMapType$3;
}

function TreeMap$SubMapType(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_19(){
  $clinit_TreeMap$SubMapType();
  return initValues(getClassLiteralForArray(Ljava_util_TreeMap$SubMapType_2_classLit, 1), $intern_1, 101, 0, [All, Head, Range_0, Tail]);
}

defineClass(101, 7, $intern_71, TreeMap$SubMapType);
_.fromKeyValid = function fromKeyValid(){
  return false;
}
;
_.toKeyValid = function toKeyValid(){
  return false;
}
;
var All, Head, Range_0, Tail;
var Ljava_util_TreeMap$SubMapType_2_classLit = createForEnum('java.util', 'TreeMap/SubMapType', 101, Ljava_lang_Enum_2_classLit, values_19);
function TreeMap$SubMapType$1(){
  TreeMap$SubMapType.call(this, 'Head', 1);
}

defineClass(869, 101, $intern_71, TreeMap$SubMapType$1);
_.toKeyValid = function toKeyValid_0(){
  return true;
}
;
var Ljava_util_TreeMap$SubMapType$1_2_classLit = createForEnum('java.util', 'TreeMap/SubMapType/1', 869, Ljava_util_TreeMap$SubMapType_2_classLit, null);
function TreeMap$SubMapType$2(){
  TreeMap$SubMapType.call(this, 'Range', 2);
}

defineClass(870, 101, $intern_71, TreeMap$SubMapType$2);
_.fromKeyValid = function fromKeyValid_0(){
  return true;
}
;
_.toKeyValid = function toKeyValid_1(){
  return true;
}
;
var Ljava_util_TreeMap$SubMapType$2_2_classLit = createForEnum('java.util', 'TreeMap/SubMapType/2', 870, Ljava_util_TreeMap$SubMapType_2_classLit, null);
function TreeMap$SubMapType$3(){
  TreeMap$SubMapType.call(this, 'Tail', 3);
}

defineClass(871, 101, $intern_71, TreeMap$SubMapType$3);
_.fromKeyValid = function fromKeyValid_1(){
  return true;
}
;
var Ljava_util_TreeMap$SubMapType$3_2_classLit = createForEnum('java.util', 'TreeMap/SubMapType/3', 871, Ljava_util_TreeMap$SubMapType_2_classLit, null);
defineClass(962, 1, {});
var Lplayn_core_Assets_2_classLit = createForClass('playn.core', 'Assets', 962, Ljava_lang_Object_2_classLit);
defineClass(969, 1, {});
var Lplayn_core_Audio_2_classLit = createForClass('playn.core', 'Audio', 969, Ljava_lang_Object_2_classLit);
function $draw(this$static, image, x_0, y_0, w, h){
  $draw_1(image, this$static.ctx, x_0, y_0, w, h);
  return this$static;
}

function $toTexture(this$static, config){
  return $createTexture_0(this$static.image, config);
}

function Canvas_0(image){
  this.image = image;
  this.width_0 = $invScaled(image.scale_0, image.pixelWidth);
  this.height_0 = $invScaled(image.scale_0, image.pixelHeight);
  if (this.width_0 <= 0 || this.height_0 <= 0)
    throw new IllegalArgumentException_0('Canvas must be > 0 in width and height: ' + this.width_0 + 'x' + this.height_0);
}

defineClass(572, 1, $intern_72);
_.close_0 = function close_1(){
}
;
_.height_0 = 0;
_.width_0 = 0;
var Lplayn_core_Canvas_2_classLit = createForClass('playn.core', 'Canvas', 572, Ljava_lang_Object_2_classLit);
function $clinit_Canvas$LineCap(){
  $clinit_Canvas$LineCap = emptyMethod;
  BUTT_0 = new Canvas$LineCap('BUTT', 0);
  ROUND_1 = new Canvas$LineCap('ROUND', 1);
  SQUARE_0 = new Canvas$LineCap('SQUARE', 2);
}

function Canvas$LineCap(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_20(){
  $clinit_Canvas$LineCap();
  return initValues(getClassLiteralForArray(Lplayn_core_Canvas$LineCap_2_classLit, 1), $intern_1, 169, 0, [BUTT_0, ROUND_1, SQUARE_0]);
}

defineClass(169, 7, {3:1, 9:1, 7:1, 169:1}, Canvas$LineCap);
var BUTT_0, ROUND_1, SQUARE_0;
var Lplayn_core_Canvas$LineCap_2_classLit = createForEnum('playn.core', 'Canvas/LineCap', 169, Ljava_lang_Enum_2_classLit, values_20);
function $clinit_Canvas$LineJoin(){
  $clinit_Canvas$LineJoin = emptyMethod;
  BEVEL_0 = new Canvas$LineJoin('BEVEL', 0);
  MITER_0 = new Canvas$LineJoin('MITER', 1);
  ROUND_2 = new Canvas$LineJoin('ROUND', 2);
}

function Canvas$LineJoin(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_21(){
  $clinit_Canvas$LineJoin();
  return initValues(getClassLiteralForArray(Lplayn_core_Canvas$LineJoin_2_classLit, 1), $intern_1, 170, 0, [BEVEL_0, MITER_0, ROUND_2]);
}

defineClass(170, 7, {3:1, 9:1, 7:1, 170:1}, Canvas$LineJoin);
var BEVEL_0, MITER_0, ROUND_2;
var Lplayn_core_Canvas$LineJoin_2_classLit = createForEnum('playn.core', 'Canvas/LineJoin', 170, Ljava_lang_Enum_2_classLit, values_21);
function Clock(){
}

defineClass(300, 1, {}, Clock);
_.dt = 0;
_.tick = 0;
var Lplayn_core_Clock_2_classLit = createForClass('playn.core', 'Clock', 300, Ljava_lang_Object_2_classLit);
defineClass(68, 1, {68:1});
var Lplayn_core_Event_2_classLit = createForClass('playn.core', 'Event', 68, Ljava_lang_Object_2_classLit);
function $setFlag_0(this$static, flag){
  this$static.flags |= flag;
}

function Event$Input(flags, time){
  this.flags = flags;
  this.time = time;
}

function modifierFlags(altP, ctrlP, metaP, shiftP){
  var flags;
  flags = 0;
  altP && (flags |= 2);
  ctrlP && (flags |= 4);
  metaP && (flags |= 16);
  shiftP && (flags |= 8);
  return flags;
}

defineClass(63, 68, $intern_73);
_.addFields = function addFields(builder){
  $append_4($append_7($append_2((builder.string += 'time=' , builder), this.time), ', flags='), this.flags);
}
;
_.name_1 = function name_3(){
  return 'Input';
}
;
_.toString$ = function toString_56(){
  var builder;
  builder = $append_1(new StringBuilder_1(this.name_1()), 91);
  this.addFields(builder);
  return (builder.string += ']' , builder).string;
}
;
_.flags = 0;
_.time = 0;
var Lplayn_core_Event$Input_2_classLit = createForClass('playn.core', 'Event/Input', 63, Lplayn_core_Event_2_classLit);
function Event$XY(flags, time, x_0, y_0){
  Event$Input.call(this, flags, time);
  this.x_0 = x_0;
  this.y_0 = y_0;
}

defineClass(77, 63, $intern_74);
_.addFields = function addFields_0(builder){
  $append_4($append_7($append_2((builder.string += 'time=' , builder), this.time), ', flags='), this.flags);
  $append_3($append_7($append_3((builder.string += ', x=' , builder), this.x_0), ', y='), this.y_0);
}
;
_.name_1 = function name_4(){
  return 'XY';
}
;
_.x_1 = function x_1(){
  return this.x_0;
}
;
_.y_1 = function y_1(){
  return this.y_0;
}
;
_.x_0 = 0;
_.y_0 = 0;
var Lplayn_core_Event$XY_2_classLit = createForClass('playn.core', 'Event/XY', 77, Lplayn_core_Event$Input_2_classLit);
defineClass(977, 1, {});
var Lplayn_core_Exec_2_classLit = createForClass('playn.core', 'Exec', 977, Ljava_lang_Object_2_classLit);
function $map(this$static, func){
  return new RFuture($map_0(this$static._result_0, new RFuture$7(func)));
}

function $onComplete(this$static, slot){
  var result;
  result = this$static._result_0.get_3();
  !result?$addConnection(this$static._result_0, new AbstractValue$4(slot)):slot.onEmit(result);
  return this$static;
}

function $onFailure(this$static, slot){
  var result;
  result = this$static._result_0.get_3();
  !result?$addConnection(this$static._result_0, new AbstractValue$4(new RFuture$6(slot))):!result.isSuccess() && slot.onEmit(result.getFailure());
  return this$static;
}

function $onSuccess(this$static, slot){
  var result;
  result = this$static._result_0.get_3();
  !result?$addConnection(this$static._result_0, new AbstractValue$4(new RFuture$5(slot))):result.isSuccess() && slot.onEmit(result.get_3());
  return this$static;
}

function RFuture(result){
  this._result_0 = result;
}

function collect_1(futures){
  var collector, count, future, future$iterator, pseq;
  if (futures.array.length == 0)
    return new RFuture(($clinit_AbstractValue() , new Value(new Try$Success(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)))));
  pseq = new RPromise;
  count = futures.array.length;
  collector = new RFuture$4(count, pseq);
  for (future$iterator = new AbstractList$IteratorImpl(futures); future$iterator.i < future$iterator.this$01_0.size_1();) {
    future = (checkCriticalElement(future$iterator.i < future$iterator.this$01_0.size_1()) , future$iterator.this$01_0.get_0(future$iterator.last = future$iterator.i++));
    $onComplete(future, collector);
  }
  return pseq;
}

function result_0(result){
  return new RFuture(($clinit_AbstractValue() , new Value(result)));
}

defineClass(142, 1, {}, RFuture);
var Lreact_RFuture_2_classLit = createForClass('react', 'RFuture', 142, Ljava_lang_Object_2_classLit);
function RPromise(){
  RPromise_0.call(this, new RPromise$3);
}

function RPromise_0(result){
  RFuture.call(this, result);
  this._result = result;
}

defineClass(105, 142, {}, RPromise);
_.fail = function fail(cause){
  $updateAndNotify_0(this._result, new Try$Failure(cause), false);
}
;
_.succeed = function succeed(value_0){
  $updateAndNotify_0(this._result, new Try$Success(value_0), false);
}
;
var Lreact_RPromise_2_classLit = createForClass('react', 'RPromise', 105, Lreact_RFuture_2_classLit);
function $fail(this$static, cause){
  $invokeLater(this$static.this$01, new Exec$1$2(this$static, cause));
}

function $succeed(this$static, value_0){
  $invokeLater(this$static.this$01, new Exec$1$1(this$static, value_0));
}

function $superFail(this$static, cause){
  $updateAndNotify_0(this$static._result, new Try$Failure(cause), false);
}

function $superSucceed(this$static, value_0){
  $updateAndNotify_0(this$static._result, new Try$Success(value_0), false);
}

function Exec$1(this$0){
  this.this$01 = this$0;
  RPromise.call(this);
}

defineClass(483, 105, {}, Exec$1);
_.fail = function fail_0(cause){
  $fail(this, cause);
}
;
_.succeed = function succeed_0(value_0){
  $succeed(this, value_0);
}
;
var Lplayn_core_Exec$1_2_classLit = createForClass('playn.core', 'Exec/1', 483, Lreact_RPromise_2_classLit);
function Exec$1$1(this$1, val$value){
  this.this$11 = this$1;
  this.val$value2 = val$value;
}

defineClass(484, 1, {}, Exec$1$1);
_.run = function run_29(){
  $superSucceed(this.this$11, this.val$value2);
}
;
var Lplayn_core_Exec$1$1_2_classLit = createForClass('playn.core', 'Exec/1/1', 484, Ljava_lang_Object_2_classLit);
function Exec$1$2(this$1, val$cause){
  this.this$11 = this$1;
  this.val$cause2 = val$cause;
}

defineClass(485, 1, {}, Exec$1$2);
_.run = function run_30(){
  $superFail(this.this$11, this.val$cause2);
}
;
var Lplayn_core_Exec$1$2_2_classLit = createForClass('playn.core', 'Exec/1/2', 485, Ljava_lang_Object_2_classLit);
function $dispatch(this$static){
  var action, e, ii, ll;
  $addAll_0(this$static.running, this$static.pending);
  this$static.pending.array = initDim(Ljava_lang_Object_2_classLit, $intern_1, 1, 0, 3, 1);
  for (ii = 0 , ll = this$static.running.array.length; ii < ll; ii++) {
    action = $get(this$static.running, ii);
    try {
      action.run();
    }
     catch ($e0) {
      $e0 = wrap_0($e0);
      if (instanceOf($e0, 12)) {
        e = $e0;
        $reportError(this$static.plat, 'invokeLater Runnable failed: ' + action, e);
      }
       else 
        throw unwrap($e0);
    }
  }
  this$static.running.array = initDim(Ljava_lang_Object_2_classLit, $intern_1, 1, 0, 3, 1);
}

function $invokeLater(this$static, action){
  $add_0(this$static.pending, action);
}

function Exec$Default(plat){
  this.pending = new ArrayList;
  this.running = new ArrayList;
  this.plat = plat;
  $atPrio($addConnection(plat.frame_0, new Exec$Default$1(this)), 32767);
}

defineClass(481, 977, {}, Exec$Default);
var Lplayn_core_Exec$Default_2_classLit = createForClass('playn.core', 'Exec/Default', 481, Lplayn_core_Exec_2_classLit);
function Exec$Default$1(this$1){
  this.this$11 = this$1;
}

defineClass(482, 953, {}, Exec$Default$1);
_.onEmit = function onEmit_46(unused){
  $dispatch(this.this$11);
}
;
var Lplayn_core_Exec$Default$1_2_classLit = createForClass('playn.core', 'Exec/Default/1', 482, Lreact_Slot_2_classLit);
function $derive(this$static, size_0){
  return new Font_0(this$static.name_0, this$static.style_0, size_0);
}

function $equals_2(this$static, other){
  var ofont;
  if (!instanceOf(other, 128))
    return false;
  ofont = other;
  return $equals(this$static.name_0, ofont.name_0) && this$static.style_0 == ofont.style_0 && this$static.size_0 == ofont.size_0;
}

function $hashCode_0(this$static){
  return getHashCode_0(this$static.name_0) ^ getHashCode(this$static.style_0) ^ round_int(this$static.size_0);
}

function Font(name_0, size_0){
  Font_0.call(this, name_0, ($clinit_Font$Style() , PLAIN), size_0);
}

function Font_0(name_0, style, size_0){
  this.name_0 = name_0;
  this.style_0 = style;
  this.size_0 = size_0;
}

defineClass(128, 1, {128:1}, Font, Font_0);
_.equals$ = function equals_33(other){
  return $equals_2(this, other);
}
;
_.hashCode$ = function hashCode_37(){
  return $hashCode_0(this);
}
;
_.toString$ = function toString_57(){
  return this.name_0 + ' ' + this.style_0 + ' ' + this.size_0 + 'pt';
}
;
_.size_0 = 0;
var Lplayn_core_Font_2_classLit = createForClass('playn.core', 'Font', 128, Ljava_lang_Object_2_classLit);
function $clinit_Font$Style(){
  $clinit_Font$Style = emptyMethod;
  PLAIN = new Font$Style('PLAIN', 0);
  BOLD_0 = new Font$Style('BOLD', 1);
  ITALIC_0 = new Font$Style('ITALIC', 2);
  BOLD_ITALIC = new Font$Style('BOLD_ITALIC', 3);
}

function Font$Style(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_22(){
  $clinit_Font$Style();
  return initValues(getClassLiteralForArray(Lplayn_core_Font$Style_2_classLit, 1), $intern_1, 147, 0, [PLAIN, BOLD_0, ITALIC_0, BOLD_ITALIC]);
}

defineClass(147, 7, {3:1, 9:1, 7:1, 147:1}, Font$Style);
var BOLD_0, BOLD_ITALIC, ITALIC_0, PLAIN;
var Lplayn_core_Font$Style_2_classLit = createForEnum('playn.core', 'Font/Style', 147, Ljava_lang_Enum_2_classLit, values_22);
function $checkError(this$static){
  var reported;
  reported = 0;
  if (this$static.checkErrors) {
    while (this$static.gl.getError() != 0) {
      reported += 1;
      $clinit_System();
    }
  }
  return reported > 0;
}

function $glDeleteFramebuffer(this$static){
  $setIntBuffer(this$static.bufs, 0);
  $glDeleteFramebuffers(this$static, this$static.bufs.intBuffer);
}

function $glDeleteTexture(this$static, id_0){
  $setIntBuffer(this$static.bufs, id_0);
  $glDeleteTextures(this$static, this$static.bufs.intBuffer);
}

function $glGenTexture(this$static){
  $resizeIntBuffer(this$static.bufs);
  $glGenTextures(this$static, this$static.bufs.intBuffer);
  return this$static.bufs.intBuffer.intArray[0];
}

function $glUniform4fv(this$static, location_0, count, v){
  $setFloatBuffer(this$static.bufs, v, 4 * count);
  $glUniform4fv_0(this$static, location_0, count, this$static.bufs.floatBuffer);
}

function GL20(buffers, checkErrors){
  this.bufs = buffers;
  this.checkErrors = checkErrors;
}

defineClass(494, 1, {});
_.checkErrors = false;
var Lplayn_core_GL20_2_classLit = createForClass('playn.core', 'GL20', 494, Ljava_lang_Object_2_classLit);
function $newCap(cap, length_0){
  var newLength;
  newLength = cap << 1;
  while (newLength < length_0) {
    newLength <<= 1;
  }
  return newLength;
}

function $resizeIntBuffer(this$static){
  var cap;
  cap = this$static.intBuffer.capacity;
  cap < 1?(this$static.intBuffer = $asIntBuffer($createByteBuffer($newCap(cap, 1) * 4))):$position(this$static.intBuffer);
  $limit(this$static.intBuffer, 1);
}

function $setFloatBuffer(this$static, source, length_0){
  var cap;
  cap = this$static.floatBuffer.capacity;
  cap < length_0?(this$static.floatBuffer = new FloatBuffer($slice($createByteBuffer($newCap(cap, length_0) * 4)))):$position(this$static.floatBuffer);
  $limit(this$static.floatBuffer, length_0);
  $put_1(this$static.floatBuffer, source, length_0);
  $rewind(this$static.floatBuffer);
}

function $setIntBuffer(this$static, n){
  $position(this$static.intBuffer);
  $put_2(this$static.intBuffer, n);
  $rewind(this$static.intBuffer);
}

function $setShortBuffer(this$static, source, length_0){
  var cap;
  cap = this$static.shortBuffer.capacity;
  cap < length_0?(this$static.shortBuffer = $asShortBuffer($createByteBuffer($newCap(cap, length_0) * 2))):$position(this$static.shortBuffer);
  $limit(this$static.shortBuffer, length_0);
  $put_3(this$static.shortBuffer, source, length_0);
  $rewind(this$static.shortBuffer);
}

defineClass(496, 1, {});
var Lplayn_core_GL20$Buffers_2_classLit = createForClass('playn.core', 'GL20/Buffers', 496, Ljava_lang_Object_2_classLit);
function $begin(this$static){
  if (this$static.begun)
    throw new IllegalStateException_0($getSimpleName(this$static.___clazz$) + ' mismatched begin()');
  this$static.begun = true;
}

function $close_0(this$static){
  if (this$static.begun)
    throw new IllegalStateException_0($getSimpleName(this$static.___clazz$) + ' close() without end()');
}

function $end(this$static){
  if (!this$static.begun)
    throw new IllegalStateException_0($getSimpleName(this$static.___clazz$) + ' mismatched end()');
  try {
    this$static.flush();
  }
   finally {
    this$static.begun = false;
  }
}

function $flush(this$static){
  if (!this$static.begun)
    throw new IllegalStateException_0($getSimpleName(this$static.___clazz$) + ' flush() without begin()');
}

defineClass(980, 1, $intern_72);
_.begin = function begin(fbufWidth, fbufHeight, flip){
  $begin(this);
}
;
_.close_0 = function close_2(){
  $close_0(this);
}
;
_.flush = function flush(){
  $flush(this);
}
;
_.begun = false;
var Lplayn_core_GLBatch_2_classLit = createForClass('playn.core', 'GLBatch', 980, Ljava_lang_Object_2_classLit);
function $activate(this$static){
  $glUseProgram(this$static.gl, this$static.id_0);
}

function $close_1(this$static){
  $glDeleteShader(this$static.gl, this$static.vertexShader);
  $glDeleteShader(this$static.gl, this$static.fragmentShader);
  $glDeleteProgram(this$static.gl, this$static.id_0);
}

function $compileShader_0(this$static, type_0, shaderSource){
  var compiled, log_0, shader;
  shader = $glCreateShader(this$static.gl, type_0);
  if (shader == 0)
    throw new RuntimeException_0('Failed to create shader (' + type_0 + '): ' + this$static.gl.gl.getError());
  $glShaderSource(this$static.gl, shader, shaderSource);
  $glCompileShader(this$static.gl, shader);
  compiled = initDim(I_classLit, $intern_37, 0, 1, 7, 1);
  $glGetShaderiv(this$static.gl, shader, compiled);
  if (compiled[0] == 0) {
    log_0 = $glGetShaderInfoLog(this$static.gl, shader);
    $glDeleteShader(this$static.gl, shader);
    throw new RuntimeException_0('Failed to compile shader (' + type_0 + '): ' + log_0);
  }
  return shader;
}

function $getAttribLocation_0(this$static, name_0){
  var loc;
  loc = $glGetAttribLocation(this$static.gl, this$static.id_0, name_0);
  return loc;
}

function $getUniformLocation_0(this$static, name_0){
  var loc;
  loc = $glGetUniformLocation(this$static.gl, this$static.id_0, name_0);
  return loc;
}

function GLProgram(gl, vertexSource, fragmentSource){
  var fragmentShader, id_0, linkStatus, log_0, vertexShader, program;
  this.gl = gl;
  id_0 = 0;
  vertexShader = 0;
  fragmentShader = 0;
  try {
    id_0 = (program = gl.gl.createProgram() , $add_12(gl.programs, program));
    if (id_0 == 0)
      throw new RuntimeException_0('Failed to create program: ' + gl.gl.getError());
    $checkError(gl);
    vertexShader = $compileShader_0(this, 35633, vertexSource);
    $glAttachShader(gl, id_0, vertexShader);
    $checkError(gl);
    fragmentShader = $compileShader_0(this, 35632, fragmentSource);
    $glAttachShader(gl, id_0, fragmentShader);
    $checkError(gl);
    $linkProgram(gl.gl, gl.programs[id_0]);
    linkStatus = initDim(I_classLit, $intern_37, 0, 1, 7, 1);
    linkStatus[0] = $getProgramParameterb(gl.gl, gl.programs[id_0], 35714)?1:0;
    if (linkStatus[0] == 0) {
      log_0 = $getProgramInfoLog(gl.gl, gl.programs[id_0]);
      $glDeleteProgram(gl, id_0);
      throw new RuntimeException_0('Failed to link program: ' + log_0);
    }
    this.id_0 = id_0;
    this.vertexShader = vertexShader;
    this.fragmentShader = fragmentShader;
    id_0 = vertexShader = fragmentShader = 0;
  }
   finally {
    id_0 != 0 && $glDeleteProgram(gl, id_0);
    vertexShader != 0 && $glDeleteShader(gl, vertexShader);
    fragmentShader != 0 && $glDeleteShader(gl, fragmentShader);
  }
}

defineClass(302, 1, $intern_72, GLProgram);
_.close_0 = function close_3(){
  $close_1(this);
}
;
_.fragmentShader = 0;
_.id_0 = 0;
_.vertexShader = 0;
var Lplayn_core_GLProgram_2_classLit = createForClass('playn.core', 'GLProgram', 302, Ljava_lang_Object_2_classLit);
function $onEmit_23(this$static){
  $onFrame(this$static.this$01);
}

function Game$1(this$0){
  this.this$01 = this$0;
}

defineClass(385, 953, {}, Game$1);
_.onEmit = function onEmit_47(plat){
  $onEmit_23(this, plat);
}
;
var Lplayn_core_Game$1_2_classLit = createForClass('playn.core', 'Game/1', 385, Lreact_Slot_2_classLit);
defineClass(1020, 1, {});
var Lplayn_core_Gradient_2_classLit = createForClass('playn.core', 'Gradient', 1020, Ljava_lang_Object_2_classLit);
defineClass(886, 1, {});
var Lplayn_core_Gradient$Config_2_classLit = createForClass('playn.core', 'Gradient/Config', 886, Ljava_lang_Object_2_classLit);
function Gradient$Linear(y1, colors, positions){
  this.colors = colors;
  this.positions = positions;
  this.x0 = 0;
  this.y0 = 0;
  this.x1 = 0;
  this.y1 = y1;
}

defineClass(887, 886, {}, Gradient$Linear);
_.x0 = 0;
_.x1 = 0;
_.y0 = 0;
_.y1 = 0;
var Lplayn_core_Gradient$Linear_2_classLit = createForClass('playn.core', 'Gradient/Linear', 887, Lplayn_core_Gradient$Config_2_classLit);
function $colorTex(this$static){
  var canvas;
  if (!this$static.colorTex) {
    canvas = $createCanvasImpl(this$static, this$static.scale_0, iceil(this$static.scale_0.factor * 1), iceil(this$static.scale_0.factor * 1));
    $fillRect_1(($setFillStyleWeb(canvas.ctx, cssColorString(-1)) , canvas), 0, 0, canvas.width_0, canvas.height_0);
    this$static.colorTex = $toTexture(canvas, ($clinit_Texture$Config() , UNMANAGED));
  }
  return this$static.colorTex;
}

function $createCanvas(this$static, width_0, height){
  return $createCanvasImpl(this$static, this$static.scale_0, iceil($scaled(this$static.scale_0, width_0)), iceil($scaled(this$static.scale_0, height)));
}

function $createCanvas_0(this$static, size_0){
  return $createCanvas(this$static, size_0.width_0, size_0.height_0);
}

function $createTexture(this$static, config){
  var id_0, minFilter;
  id_0 = $glGenTexture(this$static.gl);
  $glBindTexture(this$static.gl, id_0);
  $glTexParameteri(this$static.gl, 10240, config.magFilter);
  minFilter = mipmapify(config.minFilter, config.mipmaps);
  $glTexParameteri(this$static.gl, 10241, minFilter);
  $glTexParameteri(this$static.gl, 10242, config.repeatX?10497:33071);
  $glTexParameteri(this$static.gl, 10243, config.repeatY?10497:33071);
  return id_0;
}

function $viewportChanged(this$static, pixelWidth, pixelHeight){
  this$static.viewPixelWidth = pixelWidth;
  this$static.viewPixelHeight = pixelHeight;
  this$static.viewSizeM.width_0 = $invScaled(this$static.scale_0, pixelWidth);
  this$static.viewSizeM.height_0 = $invScaled(this$static.scale_0, pixelHeight);
  $info(this$static.plat.log_0, 'viewPortChanged ' + pixelWidth + 'x' + pixelHeight + ' / ' + this$static.scale_0.factor + ' -> ' + this$static.viewSize);
}

function Graphics(plat, gl, scale){
  this.viewSizeM = new Dimension;
  this.viewSize = this.viewSizeM;
  this.defaultRenderTarget = new Graphics$1(this, this);
  this.plat = plat;
  this.gl = gl;
  this.scale_0 = scale;
}

function mipmapify(filter, mipmaps){
  if (!mipmaps)
    return filter;
  switch (filter) {
    case 9728:
      return 9984;
    case 9729:
      return 9985;
    default:return filter;
  }
}

defineClass(408, 1, {});
_.viewPixelHeight = 0;
_.viewPixelWidth = 0;
var Lplayn_core_Graphics_2_classLit = createForClass('playn.core', 'Graphics', 408, Ljava_lang_Object_2_classLit);
function $bind(this$static){
  $glBindFramebuffer(this$static.gfx.gl);
  $glViewport(this$static.gfx.gl, this$static.this$01.viewPixelWidth, this$static.this$01.viewPixelHeight);
}

defineClass(410, 1, $intern_72);
_.close_0 = function close_4(){
  if (!this.disposed) {
    this.disposed = true;
    $glDeleteFramebuffer(this.gfx.gl);
  }
}
;
_.toString$ = function toString_58(){
  return '[id=0, size=' + this.this$01.viewPixelWidth + 'x' + this.this$01.viewPixelHeight + ' @ ' + this.this$01.scale_0.factor + 'x' + this.this$01.scale_0.factor + ', flip=' + true + ']';
}
;
_.disposed = false;
var Lplayn_core_RenderTarget_2_classLit = createForClass('playn.core', 'RenderTarget', 410, Ljava_lang_Object_2_classLit);
function Graphics$1(this$0, $anonymous0){
  this.this$01 = this$0;
  this.gfx = $anonymous0;
}

defineClass(411, 410, $intern_72, Graphics$1);
_.close_0 = function close_5(){
}
;
var Lplayn_core_Graphics$1_2_classLit = createForClass('playn.core', 'Graphics/1', 411, Lplayn_core_RenderTarget_2_classLit);
defineClass(984, 1, {});
var Lplayn_core_TileSource_2_classLit = createForClass('playn.core', 'TileSource', 984, Ljava_lang_Object_2_classLit);
function $$init_2(this$static){
  this$static.texconf = ($clinit_Texture$Config() , DEFAULT_0);
}

function $createTexture_0(this$static, config){
  var tex, texHeight, texWidth;
  if (this$static.state._result_0.get_3() == null)
    throw new IllegalStateException_0('Cannot create texture from unready image: ' + this$static);
  texWidth = $toTexWidth(config, this$static.pixelWidth);
  texHeight = $toTexHeight(config, this$static.pixelHeight);
  if (texWidth <= 0 || texHeight <= 0)
    throw new IllegalArgumentException_0('Invalid texture size: ' + texWidth + 'x' + texHeight + ' from: ' + this$static);
  tex = new Texture(this$static.gfx, $createTexture(this$static.gfx, config), config, texWidth, texHeight, this$static.scale_0, $invScaled(this$static.scale_0, this$static.pixelWidth), $invScaled(this$static.scale_0, this$static.pixelHeight));
  $update_6(tex, this$static);
  return tex;
}

function $height(this$static){
  return $invScaled(this$static.scale_0, this$static.pixelHeight);
}

function $texture(this$static){
  (!this$static.texture || this$static.texture.disposed) && (this$static.texture = $createTexture_0(this$static, this$static.texconf));
  return this$static.texture;
}

function $tile(this$static){
  return (!this$static.texture || this$static.texture.disposed) && (this$static.texture = $createTexture_0(this$static, this$static.texconf)) , this$static.texture;
}

function $width(this$static){
  return $invScaled(this$static.scale_0, this$static.pixelWidth);
}

defineClass(303, 984, {});
_.isLoaded = function isLoaded(){
  return this.state._result_0.get_3() != null;
}
;
_.tile_0 = function tile_0(){
  return $tile(this);
}
;
_.tileAsync = function tileAsync(){
  return $map(this.state, new Image$3(this));
}
;
var Lplayn_core_Image_2_classLit = createForClass('playn.core', 'Image', 303, Lplayn_core_TileSource_2_classLit);
function $apply_1(this$static){
  return $texture(this$static.this$01);
}

function Image$3(this$0){
  this.this$01 = this$0;
}

defineClass(304, 1, {}, Image$3);
_.apply_1 = function apply_3(image){
  return $apply_1(this, image);
}
;
var Lplayn_core_Image$3_2_classLit = createForClass('playn.core', 'Image/3', 304, Ljava_lang_Object_2_classLit);
function ImageImpl(gfx, scale, pixelWidth, pixelHeight, bitmap){
  $$init_2(this);
  this.gfx = gfx;
  this.state = new RFuture(($clinit_AbstractValue() , new Value(new Try$Success(this))));
  if (pixelWidth == 0 || pixelHeight == 0)
    throw new IllegalArgumentException_0('Invalid size for ready image: ' + pixelWidth + 'x' + pixelHeight + ' bitmap: ' + bitmap);
  this.source = '<canvas>';
  this.scale_0 = scale;
  this.pixelWidth = pixelWidth;
  this.pixelHeight = pixelHeight;
  this.img = bitmap;
}

function ImageImpl_0(gfx, state, preScale, preWidth, preHeight, source){
  $$init_2(this);
  this.gfx = gfx;
  this.state = state;
  this.source = source;
  this.scale_0 = preScale;
  this.pixelWidth = preWidth;
  this.pixelHeight = preHeight;
}

defineClass(309, 303, {});
_.pixelHeight = 0;
_.pixelWidth = 0;
var Lplayn_core_ImageImpl_2_classLit = createForClass('playn.core', 'ImageImpl', 309, Lplayn_core_Image_2_classLit);
defineClass(413, 1, {});
var Lplayn_core_Input_2_classLit = createForClass('playn.core', 'Input', 413, Ljava_lang_Object_2_classLit);
function $clinit_Key(){
  $clinit_Key = emptyMethod;
  A = new Key('A', 0);
  B = new Key('B', 1);
  C = new Key('C', 2);
  D = new Key('D', 3);
  E_0 = new Key('E', 4);
  F_0 = new Key('F', 5);
  G = new Key('G', 6);
  H = new Key('H', 7);
  I = new Key('I', 8);
  J = new Key('J', 9);
  K = new Key('K', 10);
  L = new Key('L', 11);
  M = new Key('M', 12);
  N = new Key('N', 13);
  O = new Key('O', 14);
  P = new Key('P', 15);
  Q = new Key('Q', 16);
  R = new Key('R', 17);
  S = new Key('S', 18);
  T = new Key('T', 19);
  U = new Key('U', 20);
  V = new Key('V', 21);
  W = new Key('W', 22);
  X = new Key('X', 23);
  Y = new Key('Y', 24);
  Z = new Key('Z', 25);
  K0 = new Key('K0', 26);
  K1 = new Key('K1', 27);
  K2 = new Key('K2', 28);
  K3 = new Key('K3', 29);
  K4 = new Key('K4', 30);
  K5 = new Key('K5', 31);
  K6 = new Key('K6', 32);
  K7 = new Key('K7', 33);
  K8 = new Key('K8', 34);
  K9 = new Key('K9', 35);
  NP0 = new Key('NP0', 36);
  NP1 = new Key('NP1', 37);
  NP2 = new Key('NP2', 38);
  NP3 = new Key('NP3', 39);
  NP4 = new Key('NP4', 40);
  NP5 = new Key('NP5', 41);
  NP6 = new Key('NP6', 42);
  NP7 = new Key('NP7', 43);
  NP8 = new Key('NP8', 44);
  NP9 = new Key('NP9', 45);
  NP_ADD = new Key('NP_ADD', 46);
  NP_DECIMAL = new Key('NP_DECIMAL', 47);
  NP_DELETE = new Key('NP_DELETE', 48);
  NP_DIVIDE = new Key('NP_DIVIDE', 49);
  NP_MULTIPLY = new Key('NP_MULTIPLY', 50);
  NP_NUM_LOCK = new Key('NP_NUM_LOCK', 51);
  NP_SUBTRACT = new Key('NP_SUBTRACT', 52);
  NP_DOWN = new Key('NP_DOWN', 53);
  NP_LEFT = new Key('NP_LEFT', 54);
  NP_RIGHT = new Key('NP_RIGHT', 55);
  NP_UP = new Key('NP_UP', 56);
  F1 = new Key('F1', 57);
  F2 = new Key('F2', 58);
  F3 = new Key('F3', 59);
  F4 = new Key('F4', 60);
  F5 = new Key('F5', 61);
  F6 = new Key('F6', 62);
  F7 = new Key('F7', 63);
  F8 = new Key('F8', 64);
  F9 = new Key('F9', 65);
  F10 = new Key('F10', 66);
  F11 = new Key('F11', 67);
  F12 = new Key('F12', 68);
  AMPERSAND = new Key('AMPERSAND', 69);
  ASTERISK = new Key('ASTERISK', 70);
  AT = new Key('AT', 71);
  BACKQUOTE = new Key('BACKQUOTE', 72);
  BACKSLASH = new Key('BACKSLASH', 73);
  BANG = new Key('BANG', 74);
  CIRCUMFLEX = new Key('CIRCUMFLEX', 75);
  COLON = new Key('COLON', 76);
  COMMA = new Key('COMMA', 77);
  DOLLAR = new Key('DOLLAR', 78);
  DOUBLE_QUOTE = new Key('DOUBLE_QUOTE', 79);
  EQUALS = new Key('EQUALS', 80);
  GREATER = new Key('GREATER', 81);
  HASH = new Key('HASH', 82);
  LEFT_BRACE = new Key('LEFT_BRACE', 83);
  LEFT_BRACKET = new Key('LEFT_BRACKET', 84);
  LEFT_PAREN = new Key('LEFT_PAREN', 85);
  LESS = new Key('LESS', 86);
  MINUS = new Key('MINUS', 87);
  MULTIPLY = new Key('MULTIPLY', 88);
  PERCENT = new Key('PERCENT', 89);
  PERIOD = new Key('PERIOD', 90);
  PLUS = new Key('PLUS', 91);
  QUOTE = new Key('QUOTE', 92);
  RIGHT_BRACE = new Key('RIGHT_BRACE', 93);
  RIGHT_BRACKET = new Key('RIGHT_BRACKET', 94);
  RIGHT_PAREN = new Key('RIGHT_PAREN', 95);
  SEMICOLON = new Key('SEMICOLON', 96);
  SLASH = new Key('SLASH', 97);
  SPACE = new Key('SPACE', 98);
  TILDE = new Key('TILDE', 99);
  QUESTION_MARK = new Key('QUESTION_MARK', 100);
  UNDERSCORE = new Key('UNDERSCORE', 101);
  VERTICAL_BAR = new Key('VERTICAL_BAR', 102);
  ALT = new Key('ALT', 103);
  CONTROL = new Key('CONTROL', 104);
  CAPS_LOCK = new Key('CAPS_LOCK', 105);
  SHIFT = new Key('SHIFT', 106);
  META = new Key('META', 107);
  DOWN = new Key('DOWN', 108);
  END = new Key('END', 109);
  HOME = new Key('HOME', 110);
  LEFT = new Key('LEFT', 111);
  PAGE_UP = new Key('PAGE_UP', 112);
  PAGE_DOWN = new Key('PAGE_DOWN', 113);
  RIGHT = new Key('RIGHT', 114);
  UP = new Key('UP', 115);
  BACKSPACE = new Key('BACKSPACE', 116);
  DELETE = new Key('DELETE', 117);
  ENTER = new Key('ENTER', 118);
  INSERT = new Key('INSERT', 119);
  TAB = new Key('TAB', 120);
  ESCAPE = new Key('ESCAPE', 121);
  PAUSE = new Key('PAUSE', 122);
  PRINT_SCREEN = new Key('PRINT_SCREEN', 123);
  SCROLL_LOCK = new Key('SCROLL_LOCK', 124);
  WINDOWS = new Key('WINDOWS', 125);
  MEDIA_CLOSE = new Key('MEDIA_CLOSE', 126);
  MEDIA_EJECT = new Key('MEDIA_EJECT', 127);
  MEDIA_FAST_FORWARD = new Key('MEDIA_FAST_FORWARD', 128);
  MEDIA_NEXT = new Key('MEDIA_NEXT', 129);
  MEDIA_PAUSE = new Key('MEDIA_PAUSE', 130);
  MEDIA_PLAY = new Key('MEDIA_PLAY', 131);
  MEDIA_PLAY_PAUSE = new Key('MEDIA_PLAY_PAUSE', 132);
  MEDIA_PREVIOUS = new Key('MEDIA_PREVIOUS', 133);
  MEDIA_RECORD = new Key('MEDIA_RECORD', 134);
  MEDIA_REWIND = new Key('MEDIA_REWIND', 135);
  MEDIA_STOP = new Key('MEDIA_STOP', 136);
  BLUE = new Key('BLUE', 137);
  GREEN = new Key('GREEN', 138);
  RED = new Key('RED', 139);
  YELLOW = new Key('YELLOW', 140);
  APP_SWITCH = new Key('APP_SWITCH', 141);
  AVR_INPUT = new Key('AVR_INPUT', 142);
  AVR_POWER = new Key('AVR_POWER', 143);
  BACK = new Key('BACK', 144);
  BOOKMARK = new Key('BOOKMARK', 145);
  BREAK = new Key('BREAK', 146);
  BUTTON_1 = new Key('BUTTON_1', 147);
  BUTTON_2 = new Key('BUTTON_2', 148);
  BUTTON_3 = new Key('BUTTON_3', 149);
  BUTTON_4 = new Key('BUTTON_4', 150);
  BUTTON_5 = new Key('BUTTON_5', 151);
  BUTTON_6 = new Key('BUTTON_6', 152);
  BUTTON_7 = new Key('BUTTON_7', 153);
  BUTTON_8 = new Key('BUTTON_8', 154);
  BUTTON_9 = new Key('BUTTON_9', 155);
  BUTTON_10 = new Key('BUTTON_10', 156);
  BUTTON_11 = new Key('BUTTON_11', 157);
  BUTTON_12 = new Key('BUTTON_12', 158);
  BUTTON_13 = new Key('BUTTON_13', 159);
  BUTTON_14 = new Key('BUTTON_14', 160);
  BUTTON_15 = new Key('BUTTON_15', 161);
  BUTTON_16 = new Key('BUTTON_16', 162);
  BUTTON_A = new Key('BUTTON_A', 163);
  BUTTON_B = new Key('BUTTON_B', 164);
  BUTTON_C = new Key('BUTTON_C', 165);
  BUTTON_L1 = new Key('BUTTON_L1', 166);
  BUTTON_L2 = new Key('BUTTON_L2', 167);
  BUTTON_MODE = new Key('BUTTON_MODE', 168);
  BUTTON_R1 = new Key('BUTTON_R1', 169);
  BUTTON_R2 = new Key('BUTTON_R2', 170);
  BUTTON_SELECT = new Key('BUTTON_SELECT', 171);
  BUTTON_START = new Key('BUTTON_START', 172);
  BUTTON_THUMBL = new Key('BUTTON_THUMBL', 173);
  BUTTON_THUMBR = new Key('BUTTON_THUMBR', 174);
  BUTTON_X = new Key('BUTTON_X', 175);
  BUTTON_Y = new Key('BUTTON_Y', 176);
  BUTTON_Z = new Key('BUTTON_Z', 177);
  CALL = new Key('CALL', 178);
  CAMERA = new Key('CAMERA', 179);
  CAPTIONS = new Key('CAPTIONS', 180);
  CHANNEL_DOWN = new Key('CHANNEL_DOWN', 181);
  CHANNEL_UP = new Key('CHANNEL_UP', 182);
  CLEAR = new Key('CLEAR', 183);
  DPAD_CENTER = new Key('DPAD_CENTER', 184);
  DPAD_DOWN = new Key('DPAD_DOWN', 185);
  DPAD_LEFT = new Key('DPAD_LEFT', 186);
  DPAD_RIGHT = new Key('DPAD_RIGHT', 187);
  DPAD_UP = new Key('DPAD_UP', 188);
  DVR = new Key('DVR', 189);
  ENDCALL = new Key('ENDCALL', 190);
  ENVELOPE = new Key('ENVELOPE', 191);
  EXPLORER = new Key('EXPLORER', 192);
  FOCUS = new Key('FOCUS', 193);
  FORWARD = new Key('FORWARD', 194);
  FORWARD_DEL = new Key('FORWARD_DEL', 195);
  FUNCTION = new Key('FUNCTION', 196);
  GUIDE = new Key('GUIDE', 197);
  HEADSETHOOK = new Key('HEADSETHOOK', 198);
  INFO = new Key('INFO', 199);
  MENU = new Key('MENU', 200);
  MUTE_0 = new Key('MUTE', 201);
  NOTIFICATION = new Key('NOTIFICATION', 202);
  NUM = new Key('NUM', 203);
  PICTSYMBOLS = new Key('PICTSYMBOLS', 204);
  POWER = new Key('POWER', 205);
  SEARCH = new Key('SEARCH', 206);
  SETTINGS = new Key('SETTINGS', 207);
  SOFT_LEFT = new Key('SOFT_LEFT', 208);
  SOFT_RIGHT = new Key('SOFT_RIGHT', 209);
  STAR = new Key('STAR', 210);
  STB_INPUT = new Key('STB_INPUT', 211);
  STB_POWER = new Key('STB_POWER', 212);
  SWITCH_CHARSET = new Key('SWITCH_CHARSET', 213);
  SYM = new Key('SYM', 214);
  SYSRQ = new Key('SYSRQ', 215);
  TV = new Key('TV', 216);
  TV_INPUT = new Key('TV_INPUT', 217);
  TV_POWER = new Key('TV_POWER', 218);
  VOLUME_DOWN = new Key('VOLUME_DOWN', 219);
  VOLUME_MUTE = new Key('VOLUME_MUTE', 220);
  VOLUME_UP = new Key('VOLUME_UP', 221);
  WINDOW = new Key('WINDOW', 222);
  ZOOM_IN = new Key('ZOOM_IN', 223);
  ZOOM_OUT = new Key('ZOOM_OUT', 224);
  UNKNOWN = new Key('UNKNOWN', 225);
}

function Key(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_23(){
  $clinit_Key();
  return initValues(getClassLiteralForArray(Lplayn_core_Key_2_classLit, 1), $intern_1, 5, 0, [A, B, C, D, E_0, F_0, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, K0, K1, K2, K3, K4, K5, K6, K7, K8, K9, NP0, NP1, NP2, NP3, NP4, NP5, NP6, NP7, NP8, NP9, NP_ADD, NP_DECIMAL, NP_DELETE, NP_DIVIDE, NP_MULTIPLY, NP_NUM_LOCK, NP_SUBTRACT, NP_DOWN, NP_LEFT, NP_RIGHT, NP_UP, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, AMPERSAND, ASTERISK, AT, BACKQUOTE, BACKSLASH, BANG, CIRCUMFLEX, COLON, COMMA, DOLLAR, DOUBLE_QUOTE, EQUALS, GREATER, HASH, LEFT_BRACE, LEFT_BRACKET, LEFT_PAREN, LESS, MINUS, MULTIPLY, PERCENT, PERIOD, PLUS, QUOTE, RIGHT_BRACE, RIGHT_BRACKET, RIGHT_PAREN, SEMICOLON, SLASH, SPACE, TILDE, QUESTION_MARK, UNDERSCORE, VERTICAL_BAR, ALT, CONTROL, CAPS_LOCK, SHIFT, META, DOWN, END, HOME, LEFT, PAGE_UP, PAGE_DOWN, RIGHT, UP, BACKSPACE, DELETE, ENTER, INSERT, TAB, ESCAPE, PAUSE, PRINT_SCREEN, SCROLL_LOCK, WINDOWS, MEDIA_CLOSE, MEDIA_EJECT, MEDIA_FAST_FORWARD, MEDIA_NEXT, MEDIA_PAUSE, MEDIA_PLAY, MEDIA_PLAY_PAUSE, MEDIA_PREVIOUS, MEDIA_RECORD, MEDIA_REWIND, MEDIA_STOP, BLUE, GREEN, RED, YELLOW, APP_SWITCH, AVR_INPUT, AVR_POWER, BACK, BOOKMARK, BREAK, BUTTON_1, BUTTON_2, BUTTON_3, BUTTON_4, BUTTON_5, BUTTON_6, BUTTON_7, BUTTON_8, BUTTON_9, BUTTON_10, BUTTON_11, BUTTON_12, BUTTON_13, BUTTON_14, BUTTON_15, BUTTON_16, BUTTON_A, BUTTON_B, BUTTON_C, BUTTON_L1, BUTTON_L2, BUTTON_MODE, BUTTON_R1, BUTTON_R2, BUTTON_SELECT, BUTTON_START, BUTTON_THUMBL, BUTTON_THUMBR, BUTTON_X, BUTTON_Y, BUTTON_Z, CALL, CAMERA, CAPTIONS, CHANNEL_DOWN, CHANNEL_UP, CLEAR, DPAD_CENTER, DPAD_DOWN, DPAD_LEFT, DPAD_RIGHT, DPAD_UP, DVR, ENDCALL, ENVELOPE, EXPLORER, FOCUS, FORWARD, FORWARD_DEL, FUNCTION, GUIDE, HEADSETHOOK, INFO, MENU, MUTE_0, NOTIFICATION, NUM, PICTSYMBOLS, POWER, SEARCH, SETTINGS, SOFT_LEFT, SOFT_RIGHT, STAR, STB_INPUT, STB_POWER, SWITCH_CHARSET, SYM, SYSRQ, TV, TV_INPUT, TV_POWER, VOLUME_DOWN, VOLUME_MUTE, VOLUME_UP, WINDOW, ZOOM_IN, ZOOM_OUT, UNKNOWN]);
}

defineClass(5, 7, {3:1, 9:1, 7:1, 5:1}, Key);
var A, ALT, AMPERSAND, APP_SWITCH, ASTERISK, AT, AVR_INPUT, AVR_POWER, B, BACK, BACKQUOTE, BACKSLASH, BACKSPACE, BANG, BLUE, BOOKMARK, BREAK, BUTTON_1, BUTTON_10, BUTTON_11, BUTTON_12, BUTTON_13, BUTTON_14, BUTTON_15, BUTTON_16, BUTTON_2, BUTTON_3, BUTTON_4, BUTTON_5, BUTTON_6, BUTTON_7, BUTTON_8, BUTTON_9, BUTTON_A, BUTTON_B, BUTTON_C, BUTTON_L1, BUTTON_L2, BUTTON_MODE, BUTTON_R1, BUTTON_R2, BUTTON_SELECT, BUTTON_START, BUTTON_THUMBL, BUTTON_THUMBR, BUTTON_X, BUTTON_Y, BUTTON_Z, C, CALL, CAMERA, CAPS_LOCK, CAPTIONS, CHANNEL_DOWN, CHANNEL_UP, CIRCUMFLEX, CLEAR, COLON, COMMA, CONTROL, D, DELETE, DOLLAR, DOUBLE_QUOTE, DOWN, DPAD_CENTER, DPAD_DOWN, DPAD_LEFT, DPAD_RIGHT, DPAD_UP, DVR, E_0, END, ENDCALL, ENTER, ENVELOPE, EQUALS, ESCAPE, EXPLORER, F_0, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FOCUS, FORWARD, FORWARD_DEL, FUNCTION, G, GREATER, GREEN, GUIDE, H, HASH, HEADSETHOOK, HOME, I, INFO, INSERT, J, K, K0, K1, K2, K3, K4, K5, K6, K7, K8, K9, L, LEFT, LEFT_BRACE, LEFT_BRACKET, LEFT_PAREN, LESS, M, MEDIA_CLOSE, MEDIA_EJECT, MEDIA_FAST_FORWARD, MEDIA_NEXT, MEDIA_PAUSE, MEDIA_PLAY, MEDIA_PLAY_PAUSE, MEDIA_PREVIOUS, MEDIA_RECORD, MEDIA_REWIND, MEDIA_STOP, MENU, META, MINUS, MULTIPLY, MUTE_0, N, NOTIFICATION, NP0, NP1, NP2, NP3, NP4, NP5, NP6, NP7, NP8, NP9, NP_ADD, NP_DECIMAL, NP_DELETE, NP_DIVIDE, NP_DOWN, NP_LEFT, NP_MULTIPLY, NP_NUM_LOCK, NP_RIGHT, NP_SUBTRACT, NP_UP, NUM, O, P, PAGE_DOWN, PAGE_UP, PAUSE, PERCENT, PERIOD, PICTSYMBOLS, PLUS, POWER, PRINT_SCREEN, Q, QUESTION_MARK, QUOTE, R, RED, RIGHT, RIGHT_BRACE, RIGHT_BRACKET, RIGHT_PAREN, S, SCROLL_LOCK, SEARCH, SEMICOLON, SETTINGS, SHIFT, SLASH, SOFT_LEFT, SOFT_RIGHT, SPACE, STAR, STB_INPUT, STB_POWER, SWITCH_CHARSET, SYM, SYSRQ, T, TAB, TILDE, TV, TV_INPUT, TV_POWER, U, UNDERSCORE, UNKNOWN, UP, V, VERTICAL_BAR, VOLUME_DOWN, VOLUME_MUTE, VOLUME_UP, W, WINDOW, WINDOWS, X, Y, YELLOW, Z, ZOOM_IN, ZOOM_OUT;
var Lplayn_core_Key_2_classLit = createForEnum('playn.core', 'Key', 5, Ljava_lang_Enum_2_classLit, values_23);
function Keyboard$Event(time){
  Event$Input.call(this, 0, time);
}

defineClass(308, 63, $intern_73);
var Lplayn_core_Keyboard$Event_2_classLit = createForClass('playn.core', 'Keyboard/Event', 308, Lplayn_core_Event$Input_2_classLit);
function Keyboard$KeyEvent(time, key, down){
  Keyboard$Event.call(this, time);
  this.key_0 = key;
  this.down = down;
}

defineClass(194, 308, {68:1, 63:1, 194:1}, Keyboard$KeyEvent);
_.addFields = function addFields_1(builder){
  $append_4($append_7($append_2((builder.string += 'time=' , builder), this.time), ', flags='), this.flags);
  $append_8($append_7($append_6((builder.string += ', key=' , builder), this.key_0), ', down='), this.down);
}
;
_.name_1 = function name_5(){
  return 'Key';
}
;
_.down = false;
var Lplayn_core_Keyboard$KeyEvent_2_classLit = createForClass('playn.core', 'Keyboard/KeyEvent', 194, Lplayn_core_Keyboard$Event_2_classLit);
function $clinit_Keyboard$TextType(){
  $clinit_Keyboard$TextType = emptyMethod;
  DEFAULT = new Keyboard$TextType('DEFAULT', 0);
  NUMBER = new Keyboard$TextType('NUMBER', 1);
  EMAIL = new Keyboard$TextType('EMAIL', 2);
  URL_0 = new Keyboard$TextType('URL', 3);
}

function Keyboard$TextType(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_24(){
  $clinit_Keyboard$TextType();
  return initValues(getClassLiteralForArray(Lplayn_core_Keyboard$TextType_2_classLit, 1), $intern_1, 148, 0, [DEFAULT, NUMBER, EMAIL, URL_0]);
}

defineClass(148, 7, {3:1, 9:1, 7:1, 148:1}, Keyboard$TextType);
var DEFAULT, EMAIL, NUMBER, URL_0;
var Lplayn_core_Keyboard$TextType_2_classLit = createForEnum('playn.core', 'Keyboard/TextType', 148, Ljava_lang_Enum_2_classLit, values_24);
function Keyboard$TypedEvent(time, typedChar){
  Keyboard$Event.call(this, time);
  this.typedChar = typedChar;
}

defineClass(593, 308, $intern_73, Keyboard$TypedEvent);
_.addFields = function addFields_2(builder){
  $append_4($append_7($append_2((builder.string += 'time=' , builder), this.time), ', flags='), this.flags);
  $append_1((builder.string += ', typedChar=' , builder), this.typedChar);
}
;
_.name_1 = function name_6(){
  return 'Typed';
}
;
_.typedChar = 0;
var Lplayn_core_Keyboard$TypedEvent_2_classLit = createForClass('playn.core', 'Keyboard/TypedEvent', 593, Lplayn_core_Keyboard$Event_2_classLit);
function $debug(this$static, msg){
  $log(this$static, ($clinit_Log$Level() , DEBUG), msg, null);
}

function $error(this$static, msg, e){
  $log(this$static, ($clinit_Log$Level() , ERROR), msg, e);
}

function $info(this$static, msg){
  $log(this$static, ($clinit_Log$Level() , INFO_0), msg, null);
}

function $info_0(this$static, msg){
  $log(this$static, ($clinit_Log$Level() , INFO_0), msg, null);
}

function $log(this$static, level, msg, e){
  var lmsg;
  level.ordinal >= this$static.minLevel.ordinal && (lmsg = level + ': ' + msg , !!e && (lmsg += ': ' + e.getMessage()) , $clinit_System() , !!e && e.printStackTrace(out_0) , $wnd.console && $wnd.console.info && (e != null?$wnd.console.info(lmsg, e):$wnd.console.info(lmsg)) , undefined , undefined);
}

function $warn(this$static, msg){
  $log(this$static, ($clinit_Log$Level() , WARN), msg, null);
}

function $warn_0(this$static, msg, e){
  $log(this$static, ($clinit_Log$Level() , WARN), msg, e);
}

function $warn_1(this$static, args){
  var acount;
  $warn_0(this$static, $append_7(format_2($append_7($append_7(new StringBuilder, 'Platform has neither mouse nor touch events?'), ' ['), args), ']').string, (acount = args.length , acount % 2 == 1 && instanceOf(args[acount - 1], 12)?args[acount - 1]:null));
}

function format_2(into, args){
  var ii, ll;
  for (ii = 0 , ll = ~~(args.length / 2); ii < ll; ii++) {
    ii > 0 && (into.string += ', ' , into);
    $append_6($append_7($append_6(into, args[2 * ii]), '='), args[2 * ii + 1]);
  }
  return into;
}

defineClass(406, 1, {});
var Lplayn_core_Log_2_classLit = createForClass('playn.core', 'Log', 406, Ljava_lang_Object_2_classLit);
function $clinit_Log$Level(){
  $clinit_Log$Level = emptyMethod;
  DEBUG = new Log$Level('DEBUG', 0);
  INFO_0 = new Log$Level('INFO', 1);
  WARN = new Log$Level('WARN', 2);
  ERROR = new Log$Level('ERROR', 3);
}

function Log$Level(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_25(){
  $clinit_Log$Level();
  return initValues(getClassLiteralForArray(Lplayn_core_Log$Level_2_classLit, 1), $intern_1, 140, 0, [DEBUG, INFO_0, WARN, ERROR]);
}

defineClass(140, 7, {3:1, 9:1, 7:1, 140:1}, Log$Level);
var DEBUG, ERROR, INFO_0, WARN;
var Lplayn_core_Log$Level_2_classLit = createForEnum('playn.core', 'Log/Level', 140, Ljava_lang_Enum_2_classLit, values_25);
function Mouse$Event(time, x_0, y_0){
  Event$XY.call(this, 0, time, x_0, y_0);
}

defineClass(195, 77, $intern_74);
var Lplayn_core_Mouse$Event_2_classLit = createForClass('playn.core', 'Mouse/Event', 195, Lplayn_core_Event$XY_2_classLit);
function Mouse$ButtonEvent(time, x_0, y_0, button, down){
  Mouse$Event.call(this, time, x_0, y_0);
  this.button_0 = button;
  this.down = down;
}

defineClass(173, 195, {68:1, 63:1, 77:1, 173:1, 76:1}, Mouse$ButtonEvent);
_.addFields = function addFields_3(builder){
  $append_4($append_7($append_2((builder.string += 'time=' , builder), this.time), ', flags='), this.flags);
  $append_3($append_7($append_3((builder.string += ', x=' , builder), this.x_0), ', y='), this.y_0);
  $append_8($append_7($append_6((builder.string += ', id=' , builder), this.button_0), ', down='), this.down);
}
;
_.name_1 = function name_7(){
  return 'Button';
}
;
_.down = false;
var Lplayn_core_Mouse$ButtonEvent_2_classLit = createForClass('playn.core', 'Mouse/ButtonEvent', 173, Lplayn_core_Mouse$Event_2_classLit);
function $clinit_Mouse$ButtonEvent$Id(){
  $clinit_Mouse$ButtonEvent$Id = emptyMethod;
  LEFT_0 = new Mouse$ButtonEvent$Id('LEFT', 0);
  RIGHT_0 = new Mouse$ButtonEvent$Id('RIGHT', 1);
  MIDDLE_0 = new Mouse$ButtonEvent$Id('MIDDLE', 2);
  X1 = new Mouse$ButtonEvent$Id('X1', 3);
  X2 = new Mouse$ButtonEvent$Id('X2', 4);
}

function Mouse$ButtonEvent$Id(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_26(){
  $clinit_Mouse$ButtonEvent$Id();
  return initValues(getClassLiteralForArray(Lplayn_core_Mouse$ButtonEvent$Id_2_classLit, 1), $intern_1, 129, 0, [LEFT_0, RIGHT_0, MIDDLE_0, X1, X2]);
}

defineClass(129, 7, {3:1, 9:1, 7:1, 129:1}, Mouse$ButtonEvent$Id);
var LEFT_0, MIDDLE_0, RIGHT_0, X1, X2;
var Lplayn_core_Mouse$ButtonEvent$Id_2_classLit = createForEnum('playn.core', 'Mouse/ButtonEvent/Id', 129, Ljava_lang_Enum_2_classLit, values_26);
function Mouse$MotionEvent(time, x_0, y_0, dx, dy){
  Mouse$Event.call(this, time, x_0, y_0);
  this.dx = dx;
  this.dy = dy;
}

defineClass(235, 195, {68:1, 63:1, 77:1, 235:1, 76:1}, Mouse$MotionEvent);
_.addFields = function addFields_4(builder){
  $append_4($append_7($append_2((builder.string += 'time=' , builder), this.time), ', flags='), this.flags);
  $append_3($append_7($append_3((builder.string += ', x=' , builder), this.x_0), ', y='), this.y_0);
  $append_3($append_7($append_3((builder.string += ', dx=' , builder), this.dx), ', dy='), this.dy);
}
;
_.name_1 = function name_8(){
  return 'MotionEvent';
}
;
_.dx = 0;
_.dy = 0;
var Lplayn_core_Mouse$MotionEvent_2_classLit = createForClass('playn.core', 'Mouse/MotionEvent', 235, Lplayn_core_Mouse$Event_2_classLit);
function Mouse$WheelEvent(time, x_0, y_0, velocity){
  Mouse$Event.call(this, time, x_0, y_0);
  this.velocity = velocity;
}

defineClass(594, 195, $intern_74, Mouse$WheelEvent);
_.addFields = function addFields_5(builder){
  $append_4($append_7($append_2((builder.string += 'time=' , builder), this.time), ', flags='), this.flags);
  $append_3($append_7($append_3((builder.string += ', x=' , builder), this.x_0), ', y='), this.y_0);
  $append_3((builder.string += ', velocity=' , builder), this.velocity);
}
;
_.name_1 = function name_9(){
  return 'Wheel';
}
;
_.velocity = 0;
var Lplayn_core_Mouse$WheelEvent_2_classLit = createForClass('playn.core', 'Mouse/WheelEvent', 594, Lplayn_core_Mouse$Event_2_classLit);
function $dispatchEvent(this$static, signal, event_0){
  var cause;
  try {
    $notify(signal, ($clinit_AbstractSignal() , EMIT), event_0, null, null);
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 12)) {
      cause = $e0;
      $notifyEmit(this$static.errors, new Platform$Error);
      $warn_0(this$static.log_0, 'Event dispatch failure', cause);
    }
     else 
      throw unwrap($e0);
  }
}

function $emitFrame(this$static){
  var e;
  try {
    $notifyEmit(this$static.frame_0, this$static);
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 12)) {
      e = $e0;
      $notifyEmit(this$static.errors, new Platform$Error);
      $warn_0(this$static.log_0, 'Frame tick exception', e);
    }
     else 
      throw unwrap($e0);
  }
}

function $reportError(this$static, message, cause){
  $notifyEmit(this$static.errors, new Platform$Error);
  $warn_0(this$static.log_0, message, cause);
}

defineClass(375, 1, {});
var Lplayn_core_Platform_2_classLit = createForClass('playn.core', 'Platform', 375, Ljava_lang_Object_2_classLit);
function Platform$Error(){
}

defineClass(213, 1, {}, Platform$Error);
var Lplayn_core_Platform$Error_2_classLit = createForClass('playn.core', 'Platform/Error', 213, Ljava_lang_Object_2_classLit);
function $clinit_Platform$Lifecycle(){
  $clinit_Platform$Lifecycle = emptyMethod;
  PAUSE_0 = new Platform$Lifecycle('PAUSE', 0);
  RESUME = new Platform$Lifecycle('RESUME', 1);
  EXIT = new Platform$Lifecycle('EXIT', 2);
}

function Platform$Lifecycle(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_27(){
  $clinit_Platform$Lifecycle();
  return initValues(getClassLiteralForArray(Lplayn_core_Platform$Lifecycle_2_classLit, 1), $intern_1, 164, 0, [PAUSE_0, RESUME, EXIT]);
}

defineClass(164, 7, {3:1, 9:1, 7:1, 164:1}, Platform$Lifecycle);
var EXIT, PAUSE_0, RESUME;
var Lplayn_core_Platform$Lifecycle_2_classLit = createForEnum('playn.core', 'Platform/Lifecycle', 164, Ljava_lang_Enum_2_classLit, values_27);
function $clinit_Platform$Type(){
  $clinit_Platform$Type = emptyMethod;
  JAVA = new Platform$Type('JAVA', 0);
  HTML = new Platform$Type('HTML', 1);
  ANDROID = new Platform$Type('ANDROID', 2);
  IOS = new Platform$Type('IOS', 3);
  STUB = new Platform$Type('STUB', 4);
}

function Platform$Type(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_28(){
  $clinit_Platform$Type();
  return initValues(getClassLiteralForArray(Lplayn_core_Platform$Type_2_classLit, 1), $intern_1, 125, 0, [JAVA, HTML, ANDROID, IOS, STUB]);
}

defineClass(125, 7, {3:1, 9:1, 7:1, 125:1}, Platform$Type);
var ANDROID, HTML, IOS, JAVA, STUB;
var Lplayn_core_Platform$Type_2_classLit = createForEnum('playn.core', 'Platform/Type', 125, Ljava_lang_Enum_2_classLit, values_28);
function $forward(this$static, kind, isTouch, source){
  var event_0;
  if (!this$static.enabled || !this$static.events._listeners)
    return;
  event_0 = new Pointer$Event(source.flags, source.time, source.x_0, source.y_0, kind, isTouch);
  $dispatchEvent(this$static.plat, this$static.events, event_0);
}

defineClass(464, 1, {});
_.enabled = true;
var Lplayn_core_Pointer_2_classLit = createForClass('playn.core', 'Pointer', 464, Ljava_lang_Object_2_classLit);
function $onEmit_24(this$static, events){
  var event_0, event$index, event$max;
  for (event$index = 0 , event$max = events.length; event$index < event$max; ++event$index) {
    event_0 = events[event$index];
    this$static.active == -1 && event_0.kind.isStart && (this$static.active = event_0.id_0);
    if (event_0.id_0 == this$static.active) {
      $forward(this$static.this$01, ($clinit_Pointer$Event$Kind() , initValues(getClassLiteralForArray(Lplayn_core_Pointer$Event$Kind_2_classLit, 1), $intern_1, 126, 0, [START, DRAG, END_0, CANCEL]))[event_0.kind.ordinal], true, event_0);
      event_0.kind.isEnd && (this$static.active = -1);
    }
  }
}

function Pointer$1(this$0){
  this.this$01 = this$0;
}

defineClass(468, 953, {}, Pointer$1);
_.onEmit = function onEmit_48(events){
  $onEmit_24(this, events);
}
;
_.active = -1;
var Lplayn_core_Pointer$1_2_classLit = createForClass('playn.core', 'Pointer/1', 468, Lreact_Slot_2_classLit);
function $onEmit_25(this$static, event_0){
  var bevent;
  if (instanceOf(event_0, 235)) {
    this$static.dragging && $forward(this$static.this$01, ($clinit_Pointer$Event$Kind() , DRAG), false, event_0);
  }
   else if (instanceOf(event_0, 173)) {
    bevent = event_0;
    if (bevent.button_0 == ($clinit_Mouse$ButtonEvent$Id() , LEFT_0)) {
      this$static.dragging = bevent.down;
      $forward(this$static.this$01, bevent.down?($clinit_Pointer$Event$Kind() , START):($clinit_Pointer$Event$Kind() , END_0), false, bevent);
    }
  }
}

function Pointer$2(this$0){
  this.this$01 = this$0;
}

defineClass(469, 953, {}, Pointer$2);
_.onEmit = function onEmit_49(event_0){
  $onEmit_25(this, event_0);
}
;
_.dragging = false;
var Lplayn_core_Pointer$2_2_classLit = createForClass('playn.core', 'Pointer/2', 469, Lreact_Slot_2_classLit);
function Pointer$Event(flags, time, x_0, y_0, kind, isTouch){
  Event$XY.call(this, flags, time, x_0, y_0);
  this.kind = kind;
  this.isTouch = isTouch;
}

defineClass(224, 77, $intern_74, Pointer$Event);
_.addFields = function addFields_6(builder){
  $append_4($append_7($append_2((builder.string += 'time=' , builder), this.time), ', flags='), this.flags);
  $append_3($append_7($append_3((builder.string += ', x=' , builder), this.x_0), ', y='), this.y_0);
  $append_6((builder.string += ', kind=' , builder), this.kind);
  $append_8((builder.string += ', touch=' , builder), this.isTouch);
}
;
_.name_1 = function name_10(){
  return 'Pointer';
}
;
_.isTouch = false;
var Lplayn_core_Pointer$Event_2_classLit = createForClass('playn.core', 'Pointer/Event', 224, Lplayn_core_Event$XY_2_classLit);
function $clinit_Pointer$Event$Kind(){
  $clinit_Pointer$Event$Kind = emptyMethod;
  START = new Pointer$Event$Kind('START', 0, true, false);
  DRAG = new Pointer$Event$Kind('DRAG', 1, false, false);
  END_0 = new Pointer$Event$Kind('END', 2, false, true);
  CANCEL = new Pointer$Event$Kind('CANCEL', 3, false, true);
}

function Pointer$Event$Kind(enum$name, enum$ordinal, isStart, isEnd){
  Enum.call(this, enum$name, enum$ordinal);
  this.isStart = isStart;
  this.isEnd = isEnd;
}

function values_29(){
  $clinit_Pointer$Event$Kind();
  return initValues(getClassLiteralForArray(Lplayn_core_Pointer$Event$Kind_2_classLit, 1), $intern_1, 126, 0, [START, DRAG, END_0, CANCEL]);
}

defineClass(126, 7, {3:1, 9:1, 7:1, 126:1}, Pointer$Event$Kind);
_.isEnd = false;
_.isStart = false;
var CANCEL, DRAG, END_0, START;
var Lplayn_core_Pointer$Event$Kind_2_classLit = createForEnum('playn.core', 'Pointer/Event/Kind', 126, Ljava_lang_Enum_2_classLit, values_29);
defineClass(536, 980, $intern_72);
_.end = function end_0(){
  $end(this);
  this.curTexId = 0;
}
;
_.curTexId = 0;
var Lplayn_core_TexturedBatch_2_classLit = createForClass('playn.core', 'TexturedBatch', 536, Lplayn_core_GLBatch_2_classLit);
function $addQuad(this$static, tint, m00, m01, m10, m11, tx, ty, left, top_0, right, bottom, sl, st, sr, sb){
  this$static.addQuad(tint, m00, m01, m10, m11, tx, ty, left, top_0, sl, st, right, top_0, sr, st, left, bottom, sl, sb, right, bottom, sr, sb);
}

function $addQuad_0(this$static, tex, tint, xf, x_0, y_0, w, h){
  var sb, sr;
  this$static.curTexId != 0 && this$static.curTexId != tex.id_0 && this$static.flush();
  this$static.curTexId = tex.id_0;
  sr = tex.config.repeatX?w / tex.displayWidth:1;
  sb = tex.config.repeatY?h / tex.displayHeight:1;
  $addQuad(this$static, tint, xf.m00, xf.m01, xf.m10, xf.m11, xf.tx, xf.ty, x_0, y_0, x_0 + w, y_0 + h, 0, 0, sr, sb);
}

function QuadBatch(gl){
  this.gl = gl;
}

defineClass(293, 536, $intern_72);
var Lplayn_core_QuadBatch_2_classLit = createForClass('playn.core', 'QuadBatch', 293, Lplayn_core_TexturedBatch_2_classLit);
function $clinit_Scale(){
  $clinit_Scale = emptyMethod;
  ONE_0 = new Scale(1);
}

function $computePath(path, scale){
  var didx, scaleFactor;
  if (scale <= 1)
    return path;
  scaleFactor = round_int(scale * 10);
  scaleFactor % 10 == 0 && (scaleFactor = ~~(scaleFactor / 10));
  didx = path.lastIndexOf('.');
  return didx == -1?path:path.substr(0, didx) + '@' + scaleFactor + 'x' + __substr(path, didx, path.length - didx);
}

function $getScaledResources(this$static, path){
  var rscale, rsrcs;
  rsrcs = new ArrayList;
  $add_0(rsrcs, new Scale$ScaledResource(this$static, $computePath(path, this$static.factor)));
  for (rscale = ifloor(this$static.factor); rscale > 1; rscale -= 1) {
    rscale != this$static.factor && $add_0(rsrcs, new Scale$ScaledResource(new Scale(rscale), $computePath(path, rscale)));
  }
  $add_0(rsrcs, new Scale$ScaledResource(ONE_0, path));
  return rsrcs;
}

function $invScaled(this$static, length_0){
  return length_0 / this$static.factor;
}

function $scaled(this$static, length_0){
  return this$static.factor * length_0;
}

function Scale(factor){
  $clinit_Scale();
  this.factor = factor;
}

defineClass(189, 1, {}, Scale);
_.toString$ = function toString_59(){
  return 'x' + this.factor;
}
;
_.factor = 0;
var ONE_0;
var Lplayn_core_Scale_2_classLit = createForClass('playn.core', 'Scale', 189, Ljava_lang_Object_2_classLit);
function Scale$ScaledResource(scale, path){
  this.scale_0 = scale;
  this.path = path;
}

defineClass(227, 1, {}, Scale$ScaledResource);
_.toString$ = function toString_60(){
  return this.scale_0 + ': ' + this.path;
}
;
var Lplayn_core_Scale$ScaledResource_2_classLit = createForClass('playn.core', 'Scale/ScaledResource', 227, Ljava_lang_Object_2_classLit);
function Sound(state){
  this.state = state;
}

defineClass(600, 1, {});
_.play_0 = function play_3(){
  return false;
}
;
_.setVolume_1 = function setVolume_3(volume){
}
;
_.volume_1 = function volume_0(){
  return 0;
}
;
var Lplayn_core_Sound_2_classLit = createForClass('playn.core', 'Sound', 600, Ljava_lang_Object_2_classLit);
function $fail_0(this$static, error){
  $fail(this$static.state, error);
}

function $play_0(this$static){
  this$static.playing = true;
  return !!this$static.impl && this$static.impl.play_0();
}

function $stop_0(this$static){
  this$static.playing = false;
  !!this$static.impl && this$static.impl.stop_0();
}

function $succeed_0(this$static, impl){
  this$static.impl = impl;
  $setVolumeImpl(this$static, this$static.volume_0);
  $setLoopingImpl(this$static, this$static.looping);
  this$static.playing && this$static.impl.play_0();
  $succeed(this$static.state, this$static);
}

defineClass(605, 600, {});
_.play_0 = function play_4(){
  return $play_0(this);
}
;
_.setVolume_1 = function setVolume_4(volume){
  this.volume_0 = volume < 0?0:volume > 1?1:volume;
  !!this.impl && $setVolumeImpl(this, this.volume_0);
}
;
_.volume_1 = function volume_1(){
  return this.volume_0;
}
;
_.looping = false;
_.playing = false;
_.volume_0 = 1;
var Lplayn_core_SoundImpl_2_classLit = createForClass('playn.core', 'SoundImpl', 605, Lplayn_core_Sound_2_classLit);
function $begin_0(this$static){
  $bind(this$static.target);
  $beginBatch(this$static, this$static.batch);
  return this$static;
}

function $beginBatch(this$static, batch){
  batch.begin(this$static.target.this$01.viewPixelWidth, this$static.target.this$01.viewPixelHeight, true);
  return batch;
}

function $clear_0(this$static, red, green, blue, alpha_0){
  $glClearColor(this$static.batch.gl, red, green, blue, alpha_0);
  this$static.batch.gl.gl.clear(16384);
  return this$static;
}

function $combineTint(this$static, tint){
  var otint;
  otint = this$static.tint;
  tint != -1 && (this$static.tint = combine(tint, otint));
  return otint;
}

function $concatenate(this$static, xf, originX, originY){
  var txf;
  txf = this$static.lastTrans;
  multiply_0(txf, xf.m00, xf.m01, xf.m10, xf.m11, xf.tx, xf.ty, txf);
  (originX != 0 || originY != 0) && (txf.tx += txf.m00 * -originX + txf.m10 * -originY , txf.ty += txf.m11 * -originY + txf.m01 * -originX , txf);
  return this$static;
}

function $draw_0(this$static, tile, w, h){
  (!this$static.checkIntersection || $intersects(this$static, w, h)) && $addToBatch(tile, this$static.batch, this$static.tint, this$static.lastTrans, w, h);
  return this$static;
}

function $drawLine(this$static, x0, y0, x1, y1, width_0){
  var dx, dy, length_0, temp, wx, wy, xf;
  if (x1 < x0) {
    temp = x0;
    x0 = x1;
    x1 = temp;
    temp = y0;
    y0 = y1;
    y1 = temp;
  }
  dx = x1 - x0;
  dy = y1 - y0;
  length_0 = Math.sqrt(dx * dx + dy * dy);
  wx = dx * (width_0 / 2) / length_0;
  wy = dy * (width_0 / 2) / length_0;
  xf = new AffineTransform;
  $setRotation_0(xf, Math.atan2(dy, dx));
  $setTranslation_1(xf, x0 + wy, y0 - wx);
  multiply_1(this$static.lastTrans, xf, xf);
  $addQuad_0(this$static.batch, this$static.colorTex, combine(this$static.fillColor, this$static.tint), xf, 0, 0, length_0, width_0);
  return this$static;
}

function $end_0(this$static){
  this$static.batch.end();
  return this$static;
}

function $fillRect_0(this$static, x_0, y_0, width_0, height){
  $addQuad_0(this$static.batch, this$static.colorTex, combine(this$static.fillColor, this$static.tint), this$static.lastTrans, x_0, y_0, width_0, height);
  return this$static;
}

function $intersects(this$static, w, h){
  var ih, iw, ix, iy, scissor, th, tw;
  $transform_1(this$static.lastTrans, $set_5(this$static.intersectionTestPoint, 0, 0), this$static.intersectionTestPoint);
  $transform_2(this$static.lastTrans, $set_7(this$static.intersectionTestSize, w, h), this$static.intersectionTestSize);
  ix = this$static.intersectionTestPoint.x_0;
  iy = this$static.intersectionTestPoint.y_0;
  iw = this$static.intersectionTestSize.x_0;
  ih = this$static.intersectionTestSize.y_0;
  if (this$static.scissorDepth > 0) {
    scissor = $get(this$static.scissors, this$static.scissorDepth - 1);
    return $intersects_0(scissor, round_int(ix), round_int(iy), round_int(iw), round_int(ih));
  }
  tw = this$static.target.this$01.viewPixelWidth;
  th = this$static.target.this$01.viewPixelHeight;
  return ix + iw > 0 && ix < tw && iy + ih > 0 && iy < th;
}

function $pushScissorState(this$static, x_0, y_0, width_0, height){
  var pr, r;
  this$static.scissorDepth == this$static.scissors.array.length && $add_0(this$static.scissors, new Rectangle_3);
  r = $get(this$static.scissors, this$static.scissorDepth);
  if (this$static.scissorDepth == 0) {
    r.x_0 = x_0;
    r.y_0 = y_0;
    r.height_0 = height;
    r.width_0 = width_0;
  }
   else {
    pr = $get(this$static.scissors, this$static.scissorDepth - 1);
    $setLocation_1(r, max_2(pr.x_0, x_0), max_2(pr.y_0, y_0));
    $setSize_5(r, max_2(min_1(pr.x_0 + pr.width_0 - 1, x_0 + width_0 - 1) - r.x_0, 0), max_2(min_1(pr.y_0 + pr.height_0 - 1, y_0 + height - 1) - r.y_0, 0));
  }
  ++this$static.scissorDepth;
  return r;
}

function $restoreTx(this$static){
  var tsSize;
  tsSize = this$static.transformStack.array.length;
  this$static.transformStack.remove_0(--tsSize);
  this$static.lastTrans = this$static.transformStack.array.length == 0?null:$get(this$static.transformStack, tsSize - 1);
  return this$static;
}

function $saveTx(this$static){
  $add_0(this$static.transformStack, this$static.lastTrans = $copy(this$static.lastTrans));
  return this$static;
}

function $scale_1(this$static, sx, sy){
  $scale_2(this$static.lastTrans, sx, sy);
  return this$static;
}

function $setFillColor(this$static, color_0){
  this$static.fillColor = color_0;
  return this$static;
}

function $startClipped(this$static, x_0, y_0, width_0, height){
  var r;
  this$static.batch.flush();
  r = $pushScissorState(this$static, x_0, this$static.target.this$01.viewPixelHeight - y_0 - height, width_0, height);
  $glScissor(this$static.batch.gl, r.x_0, r.y_0, r.width_0, r.height_0);
  this$static.scissorDepth == 1 && $enable(this$static.batch.gl.gl, 3089);
  $checkError(this$static.batch.gl);
  return !(r.width_0 <= 0 || r.height_0 <= 0);
}

function $transform_0(this$static, ty){
  var top_0;
  top_0 = this$static.lastTrans;
  multiply(top_0.m00, top_0.m01, top_0.m10, top_0.m11, top_0.tx, top_0.ty, 1, 0, 0, -1, 0, ty, top_0);
  return this$static;
}

function Surface(gfx, target, defaultBatch){
  this.transformStack = new ArrayList;
  this.scissors = new ArrayList;
  this.intersectionTestPoint = new Point;
  this.intersectionTestSize = new Vector;
  this.target = target;
  this.batch = defaultBatch;
  $add_0(this.transformStack, this.lastTrans = new AffineTransform);
  this.colorTex = $colorTex(gfx);
  $scale_1(this, target.this$01.scale_0.factor, target.this$01.scale_0.factor);
}

defineClass(537, 1, $intern_72, Surface);
_.close_0 = function close_6(){
}
;
_.checkIntersection = false;
_.fillColor = 0;
_.scissorDepth = 0;
_.tint = -1;
var Lplayn_core_Surface_2_classLit = createForClass('playn.core', 'Surface', 537, Ljava_lang_Object_2_classLit);
function getBounds(lines, into){
  var bounds, layout, layout$index, layout$max, theight, twidth, xAdjust;
  xAdjust = 0;
  twidth = 0;
  theight = 0;
  for (layout$index = 0 , layout$max = lines.length; layout$index < layout$max; ++layout$index) {
    layout = lines[layout$index];
    bounds = layout.bounds;
    xAdjust = max_1(xAdjust, -min_0(0, bounds.x_0));
    twidth = max_1(twidth, layout.size_0.width_0);
    layout != lines[0] && (theight += $intern_39 * layout.metrics.height_0);
    theight += $intern_75 * layout.metrics.height_0 + $descent(layout.metrics);
  }
  $setBounds(into, xAdjust, 0, xAdjust + twidth, theight);
  return into;
}

function $clinit_TextBlock$Align(){
  $clinit_TextBlock$Align = emptyMethod;
  LEFT_1 = new TextBlock$Align$1;
  CENTER = new TextBlock$Align$2;
  RIGHT_1 = new TextBlock$Align$3;
}

function TextBlock$Align(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_30(){
  $clinit_TextBlock$Align();
  return initValues(getClassLiteralForArray(Lplayn_core_TextBlock$Align_2_classLit, 1), $intern_1, 115, 0, [LEFT_1, CENTER, RIGHT_1]);
}

defineClass(115, 7, $intern_76);
var CENTER, LEFT_1, RIGHT_1;
var Lplayn_core_TextBlock$Align_2_classLit = createForEnum('playn.core', 'TextBlock/Align', 115, Ljava_lang_Enum_2_classLit, values_30);
function TextBlock$Align$1(){
  TextBlock$Align.call(this, 'LEFT', 0);
}

defineClass(768, 115, $intern_76, TextBlock$Align$1);
_.getX = function getX(lineWidth, blockWidth){
  return 0;
}
;
var Lplayn_core_TextBlock$Align$1_2_classLit = createForEnum('playn.core', 'TextBlock/Align/1', 768, Lplayn_core_TextBlock$Align_2_classLit, null);
function TextBlock$Align$2(){
  TextBlock$Align.call(this, 'CENTER', 1);
}

defineClass(769, 115, $intern_76, TextBlock$Align$2);
_.getX = function getX_0(lineWidth, blockWidth){
  return (blockWidth - lineWidth) / 2;
}
;
var Lplayn_core_TextBlock$Align$2_2_classLit = createForEnum('playn.core', 'TextBlock/Align/2', 769, Lplayn_core_TextBlock$Align_2_classLit, null);
function TextBlock$Align$3(){
  TextBlock$Align.call(this, 'RIGHT', 2);
}

defineClass(770, 115, $intern_76, TextBlock$Align$3);
_.getX = function getX_1(lineWidth, blockWidth){
  return blockWidth - lineWidth;
}
;
var Lplayn_core_TextBlock$Align$3_2_classLit = createForEnum('playn.core', 'TextBlock/Align/3', 770, Lplayn_core_TextBlock$Align_2_classLit, null);
function $equals_3(this$static, other){
  var ofmt;
  if (instanceOf(other, 114)) {
    ofmt = other;
    return (this$static.font_0 == ofmt.font_0 || !!this$static.font_0 && $equals_2(this$static.font_0, ofmt.font_0)) && this$static.antialias_0 == ofmt.antialias_0;
  }
   else {
    return false;
  }
}

function $hashCode_1(this$static){
  var hash;
  hash = this$static.antialias_0?1:0;
  !!this$static.font_0 && (hash ^= $hashCode_0(this$static.font_0));
  return hash;
}

function TextFormat(){
  TextFormat_0.call(this, null, true);
}

function TextFormat_0(font, antialias){
  this.font_0 = font;
  this.antialias_0 = antialias;
}

defineClass(114, 1, {114:1}, TextFormat, TextFormat_0);
_.equals$ = function equals_34(other){
  return $equals_3(this, other);
}
;
_.hashCode$ = function hashCode_38(){
  return $hashCode_1(this);
}
;
_.toString$ = function toString_61(){
  return '[font=' + this.font_0 + ', antialias=' + this.antialias_0 + ']';
}
;
_.withFont = function withFont(font){
  return new TextFormat_0(font, this.antialias_0);
}
;
_.antialias_0 = false;
var Lplayn_core_TextFormat_2_classLit = createForClass('playn.core', 'TextFormat', 114, Ljava_lang_Object_2_classLit);
function TextLayout(text_0, format, bounds, height){
  this.text_0 = text_0;
  this.format = format;
  this.bounds = bounds;
  this.size_0 = new Dimension_0(max_1(bounds.x_0, 0) + bounds.width_0, height);
}

defineClass(204, 1, {204:1});
var Lplayn_core_TextLayout_2_classLit = createForClass('playn.core', 'TextLayout', 204, Ljava_lang_Object_2_classLit);
function $clinit_TextWrap(){
  $clinit_TextWrap = emptyMethod;
  new TextWrap($intern_77);
}

function $hashCode_2(this$static){
  return round_int(this$static.width_0) ^ round_int(this$static.indent);
}

function TextWrap(width_0){
  $clinit_TextWrap();
  this.width_0 = width_0;
  this.indent = 0;
}

defineClass(178, 1, {178:1}, TextWrap);
_.equals$ = function equals_35(other){
  var ow;
  if (instanceOf(other, 178)) {
    ow = other;
    return this.width_0 == ow.width_0 && this.indent == ow.indent;
  }
   else {
    return false;
  }
}
;
_.hashCode$ = function hashCode_39(){
  return $hashCode_2(this);
}
;
_.indent = 0;
_.width_0 = 0;
var Lplayn_core_TextWrap_2_classLit = createForClass('playn.core', 'TextWrap', 178, Ljava_lang_Object_2_classLit);
defineClass(985, 984, {});
_.isLoaded = function isLoaded_0(){
  return true;
}
;
_.tile_0 = function tile_1(){
  return this;
}
;
_.tileAsync = function tileAsync_0(){
  return new RFuture(($clinit_AbstractValue() , new Value(new Try$Success(this))));
}
;
_.toString$ = function toString_62(){
  return 'Tile[' + this.displayWidth + 'x' + this.displayHeight + '/' + ($clinit_Points() , toString_75(0, TO_STRING_DECIMAL_PLACES) + toString_75(0, TO_STRING_DECIMAL_PLACES)) + '/' + (toString_75(1, TO_STRING_DECIMAL_PLACES) + toString_75(1, TO_STRING_DECIMAL_PLACES)) + '] <- ' + this;
}
;
var Lplayn_core_Tile_2_classLit = createForClass('playn.core', 'Tile', 985, Lplayn_core_TileSource_2_classLit);
function $addToBatch(this$static, batch, tint, tx, width_0, height){
  $addQuad_0(batch, this$static, tint, tx, 0, 0, width_0, height);
}

function $addToBatch_0(this$static, batch, tint, tx, dw, dh, sw, sh){
  var texWidth, texHeight;
  batch.curTexId != 0 && batch.curTexId != this$static.id_0 && batch.flush();
  batch.curTexId = this$static.id_0;
  texWidth = this$static.displayWidth;
  texHeight = this$static.displayHeight;
  $addQuad(batch, tint, tx.m00, tx.m01, tx.m10, tx.m11, tx.tx, tx.ty, 0, 0, dw, dh, 0 / texWidth, 0 / texHeight, sw / texWidth, sh / texHeight);
}

function $close_2(this$static){
  if (!this$static.disposed) {
    this$static.disposed = true;
    $glDeleteTexture(this$static.gfx.gl, this$static.id_0);
  }
}

function $release(this$static){
  this$static.config.managed && --this$static.refs == 0 && $close_2(this$static);
}

function $update_6(this$static, image){
  var pixHeight, pixWidth, potHeight, potWidth, scaled;
  if (this$static.config.repeatX || this$static.config.repeatY || this$static.config.mipmaps) {
    pixWidth = image.pixelWidth;
    pixHeight = image.pixelHeight;
    potWidth = $toTexWidth(this$static.config, pixWidth);
    potHeight = $toTexWidth(this$static.config, pixHeight);
    if (potWidth != pixWidth || potHeight != pixHeight) {
      scaled = $createCanvasImpl(this$static.gfx, ($clinit_Scale() , ONE_0), potWidth, potHeight);
      $draw_1(image, scaled.ctx, 0, 0, potWidth, potHeight);
      $upload(scaled.image, this$static.gfx, this$static);
    }
     else 
      $upload(image, this$static.gfx, this$static);
  }
   else 
    $upload(image, this$static.gfx, this$static);
  this$static.config.mipmaps && (this$static.gfx.gl.gl.generateMipmap(3553) , undefined);
}

function Texture(gfx, id_0, config, pixWidth, pixHeight, scale, dispWidth, dispHeight){
  this.gfx = gfx;
  this.id_0 = id_0;
  this.config = config;
  this.pixelWidth = pixWidth;
  this.pixelHeight = pixHeight;
  this.scale_0 = scale;
  this.displayWidth = dispWidth;
  this.displayHeight = dispHeight;
}

function nextPOT(value_0){
  var bit, count, highest, ii;
  bit = 32768;
  highest = -1;
  count = 0;
  for (ii = 15; ii >= 0; --ii , bit >>= 1) {
    if ((value_0 & bit) == 0)
      continue;
    ++count;
    highest == -1 && (highest = ii);
  }
  return count > 1?1 << highest + 1:value_0;
}

defineClass(561, 985, $intern_72, Texture);
_.close_0 = function close_7(){
  $close_2(this);
}
;
_.toString$ = function toString_63(){
  return 'Texture[id=' + this.id_0 + ', psize=' + this.pixelWidth + 'x' + this.pixelHeight + ', dsize=' + this.displayWidth + 'x' + this.displayHeight + ' @ ' + this.scale_0 + ', config=' + this.config + ']';
}
;
_.displayHeight = 0;
_.displayWidth = 0;
_.disposed = false;
_.id_0 = 0;
_.pixelHeight = 0;
_.pixelWidth = 0;
_.refs = 0;
var Lplayn_core_Texture_2_classLit = createForClass('playn.core', 'Texture', 561, Lplayn_core_Tile_2_classLit);
function $clinit_Texture$Config(){
  $clinit_Texture$Config = emptyMethod;
  DEFAULT_0 = new Texture$Config(true);
  UNMANAGED = new Texture$Config(false);
}

function $toTexHeight(this$static, sourceHeight){
  return this$static.repeatY || this$static.mipmaps?nextPOT(sourceHeight):sourceHeight;
}

function $toTexWidth(this$static, sourceWidth){
  return this$static.repeatX || this$static.mipmaps?nextPOT(sourceWidth):sourceWidth;
}

function Texture$Config(managed){
  this.managed = managed;
  this.repeatX = false;
  this.repeatY = false;
  this.minFilter = 9729;
  this.magFilter = 9729;
  this.mipmaps = false;
}

defineClass(296, 1, {}, Texture$Config);
_.toString$ = function toString_64(){
  var repstr;
  repstr = (this.repeatX?'x':'') + (this.repeatY?'y':'');
  return '[managed=' + this.managed + ', repeat=' + repstr + ', filter=' + this.minFilter + '/' + this.magFilter + ', mipmaps=' + this.mipmaps + ']';
}
;
_.magFilter = 0;
_.managed = false;
_.minFilter = 0;
_.mipmaps = false;
_.repeatX = false;
_.repeatY = false;
var DEFAULT_0, UNMANAGED;
var Lplayn_core_Texture$Config_2_classLit = createForClass('playn.core', 'Texture/Config', 296, Ljava_lang_Object_2_classLit);
function $fragment(){
  var str;
  str = new StringBuilder_1('#ifdef GL_ES\nprecision lowp float;\n#else\n#define lowp\n#define mediump\n#define highp\n#endif\n');
  str.string += 'uniform lowp sampler2D u_Texture;\n';
  str.string += 'varying mediump vec2 v_TexCoord;\nvarying lowp vec4 v_Color;\n';
  str.string += 'void main(void) {\n';
  str.string += '  vec4 textureColor = texture2D(u_Texture, v_TexCoord);\n';
  str.string += '  textureColor.rgb *= v_Color.rgb;\n';
  str.string += '  textureColor *= v_Color.a;\n';
  str.string += '  gl_FragColor = textureColor;\n}';
  return str.string;
}

function combine(curTint, tint){
  var newA, newB, newG, newR;
  newA = ((curTint >> 24 & 255) * ((tint >> 24 & 255) + 1) & 65280) << 16;
  if ((tint & $intern_57) == $intern_57) {
    return newA | curTint & $intern_57;
  }
  newR = ((curTint >> 16 & 255) * ((tint >> 16 & 255) + 1) & 65280) << 8;
  newG = (curTint >> 8 & 255) * ((tint >> 8 & 255) + 1) & 65280;
  newB = (curTint & 255) * ((tint & 255) + 1) >> 8 & 255;
  return newA | newR | newG | newB;
}

function Touch$Event(time, x_0, y_0, kind, id_0){
  Event$XY.call(this, 0, time, x_0, y_0);
  this.kind = kind;
  this.id_0 = id_0;
  this.pressure = -1;
  this.size_0 = -1;
}

defineClass(187, 77, {68:1, 63:1, 77:1, 187:1, 76:1}, Touch$Event);
_.addFields = function addFields_7(builder){
  $append_4($append_7($append_2((builder.string += 'time=' , builder), this.time), ', flags='), this.flags);
  $append_3($append_7($append_3((builder.string += ', x=' , builder), this.x_0), ', y='), this.y_0);
  $append_3($append_7($append_3($append_7($append_4($append_7($append_6((builder.string += ', kind=' , builder), this.kind), ', id='), this.id_0), ', pressure='), this.pressure), ', size='), this.size_0);
}
;
_.name_1 = function name_11(){
  return 'Touch';
}
;
_.id_0 = 0;
_.pressure = 0;
_.size_0 = 0;
var Lplayn_core_Touch$Event_2_classLit = createForClass('playn.core', 'Touch/Event', 187, Lplayn_core_Event$XY_2_classLit);
function $clinit_Touch$Event$Kind(){
  $clinit_Touch$Event$Kind = emptyMethod;
  START_0 = new Touch$Event$Kind('START', 0, true, false);
  MOVE = new Touch$Event$Kind('MOVE', 1, false, false);
  END_1 = new Touch$Event$Kind('END', 2, false, true);
  CANCEL_0 = new Touch$Event$Kind('CANCEL', 3, false, true);
}

function Touch$Event$Kind(enum$name, enum$ordinal, isStart, isEnd){
  Enum.call(this, enum$name, enum$ordinal);
  this.isStart = isStart;
  this.isEnd = isEnd;
}

function values_31(){
  $clinit_Touch$Event$Kind();
  return initValues(getClassLiteralForArray(Lplayn_core_Touch$Event$Kind_2_classLit, 1), $intern_1, 149, 0, [START_0, MOVE, END_1, CANCEL_0]);
}

defineClass(149, 7, {3:1, 9:1, 7:1, 149:1}, Touch$Event$Kind);
_.isEnd = false;
_.isStart = false;
var CANCEL_0, END_1, MOVE, START_0;
var Lplayn_core_Touch$Event$Kind_2_classLit = createForEnum('playn.core', 'Touch/Event/Kind', 149, Ljava_lang_Enum_2_classLit, values_31);
function $clinit_TriangleBatch(){
  $clinit_TriangleBatch = emptyMethod;
  QUAD_INDICES = initValues(getClassLiteralForArray(I_classLit, 1), $intern_37, 0, 7, [0, 1, 2, 1, 3, 2]);
}

function $addElems(this$static, vertIdx, indices, indicesLen){
  var data_0, ii, ll, offset;
  data_0 = this$static.elements;
  offset = this$static.elemPos;
  for (ii = 0 , ll = indicesLen; ii < ll; ii++) {
    data_0[offset++] = narrow_short(vertIdx + indices[ii]);
  }
  this$static.elemPos = offset;
}

function $beginPrimitive(this$static){
  var availElems, availVerts, elems, vertIdx, verts;
  vertIdx = ~~(this$static.vertPos / 12);
  verts = vertIdx + 4;
  elems = this$static.elemPos + 6;
  availVerts = ~~(this$static.vertices.length / 12);
  availElems = this$static.elements.length;
  if (verts <= availVerts && elems <= availElems)
    return vertIdx;
  $flush_0(this$static);
  verts > availVerts && $expandVerts(this$static, verts);
  elems > availElems && $expandElems(this$static, elems);
  return 0;
}

function $expandElems(this$static, elemCount){
  var newElems;
  newElems = this$static.elements.length;
  while (newElems < elemCount)
    newElems += 96;
  this$static.elements = initDim(S_classLit, $intern_78, 0, newElems, 7, 1);
}

function $expandVerts(this$static, vertCount){
  var newVerts;
  newVerts = ~~(this$static.vertices.length / 12);
  while (newVerts < vertCount)
    newVerts += 64;
  this$static.vertices = initDim(F_classLit, $intern_79, 0, newVerts * 12, 7, 1);
}

function $flush_0(this$static){
  $flush(this$static);
  if (this$static.vertPos > 0) {
    $glBindTexture(this$static.gl, this$static.curTexId);
    $checkError(this$static.gl);
    if (this$static.delayedBinding) {
      $glBindBuffer(this$static.gl, $intern_80, this$static.verticesId);
      $glBindVertAttrib(this$static, this$static.aMatrix, 4, 0);
      $glBindVertAttrib(this$static, this$static.aTranslation, 2, 16);
      $glBindVertAttrib(this$static, this$static.aColor, 2, 24);
      $glBindVertAttrib(this$static, this$static.aPosition, 2, 32);
      $glBindVertAttrib(this$static, this$static.aTexCoord, 2, 40);
      $glBindBuffer(this$static.gl, $intern_81, this$static.elementsId);
      $activeTexture(this$static.gl.gl, 33984);
      $glUniform1i(this$static.gl, this$static.uTexture);
      $checkError(this$static.gl);
    }
    $setFloatBuffer(this$static.gl.bufs, this$static.vertices, this$static.vertPos);
    $glBufferData(this$static.gl, $intern_80, this$static.vertPos * 4, this$static.gl.bufs.floatBuffer, 35040);
    $setShortBuffer(this$static.gl.bufs, this$static.elements, this$static.elemPos);
    $glBufferData(this$static.gl, $intern_81, this$static.elemPos * 2, this$static.gl.bufs.shortBuffer, 35040);
    $checkError(this$static.gl);
    $glDrawElements(this$static.gl, this$static.elemPos);
    $checkError(this$static.gl);
    this$static.vertPos = 0;
    this$static.elemPos = 0;
  }
}

function $glBindVertAttrib(this$static, loc, size_0, offset){
  $glEnableVertexAttribArray(this$static.gl, loc);
  $glVertexAttribPointer(this$static.gl, loc, size_0, 5126, 48, offset);
}

function TriangleBatch(gl){
  var ids;
  $clinit_TriangleBatch();
  QuadBatch.call(this, gl);
  this.delayedBinding = $equals('Intel', gl.gl.getParameter(7936));
  this.program = new GLProgram(gl, 'uniform vec2 u_HScreenSize;\nuniform float u_Flip;\nattribute vec4 a_Matrix;\nattribute vec2 a_Translation;\nattribute vec2 a_Color;\nattribute vec2 a_Position;\nattribute vec2 a_TexCoord;\nvarying vec2 v_TexCoord;\nvarying vec4 v_Color;\nvoid main(void) {\nmat3 transform = mat3(\n  a_Matrix[0],      a_Matrix[1],      0,\n  a_Matrix[2],      a_Matrix[3],      0,\n  a_Translation[0], a_Translation[1], 1);\ngl_Position = vec4(transform * vec3(a_Position, 1.0), 1);\ngl_Position.xy /= u_HScreenSize.xy;\ngl_Position.xy -= 1.0;\ngl_Position.y *= u_Flip;\nv_TexCoord = a_TexCoord;\nfloat red = mod(a_Color.x, 256.0);\nfloat alpha = (a_Color.x - red) / 256.0;\nfloat blue = mod(a_Color.y, 256.0);\nfloat green = (a_Color.y - blue) / 256.0;\nv_Color = vec4(red / 255.0, green / 255.0, blue / 255.0, alpha / 255.0);\n}', $fragment());
  this.uTexture = $getUniformLocation_0(this.program, 'u_Texture');
  this.uHScreenSize = $getUniformLocation_0(this.program, 'u_HScreenSize');
  this.uFlip = $getUniformLocation_0(this.program, 'u_Flip');
  this.aMatrix = $getAttribLocation_0(this.program, 'a_Matrix');
  this.aTranslation = $getAttribLocation_0(this.program, 'a_Translation');
  this.aColor = $getAttribLocation_0(this.program, 'a_Color');
  this.aPosition = $getAttribLocation_0(this.program, 'a_Position');
  this.aTexCoord = $getAttribLocation_0(this.program, 'a_TexCoord');
  this.stableAttrs = initDim(F_classLit, $intern_79, 0, 8, 7, 1);
  this.vertices = initDim(F_classLit, $intern_79, 0, 768, 7, 1);
  this.elements = initDim(S_classLit, $intern_78, 0, 96, 7, 1);
  ids = initDim(I_classLit, $intern_37, 0, 2, 7, 1);
  $glGenBuffers(gl, ids);
  this.verticesId = ids[0];
  this.elementsId = ids[1];
  $checkError(gl);
}

function add_14(into, offset, x_0, y_0, sx, sy){
  into[offset++] = x_0;
  into[offset++] = y_0;
  into[offset++] = sx;
  into[offset++] = sy;
  return offset;
}

defineClass(295, 293, $intern_72, TriangleBatch);
_.addQuad = function addQuad(tint, m00, m01, m10, m11, tx, ty, x1, y1, sx1, sy1, x2, y2, sx2, sy2, x3, y3, sx3, sy3, x4, y4, sx4, sy4){
  var offset, stables, vertIdx, verts, stables_0;
  stables_0 = this.stableAttrs;
  stables_0[0] = m00;
  stables_0[1] = m01;
  stables_0[2] = m10;
  stables_0[3] = m11;
  stables_0[4] = tx;
  stables_0[5] = ty;
  stables_0[6] = tint >> 16 & $intern_22;
  stables_0[7] = tint & $intern_22;
  vertIdx = $beginPrimitive(this);
  offset = this.vertPos;
  verts = this.vertices;
  stables = this.stableAttrs;
  offset = add_14(verts, (arraycopy(stables, 0, verts, offset, stables.length) , offset + stables.length), x1, y1, sx1, sy1);
  offset = add_14(verts, (arraycopy(stables, 0, verts, offset, stables.length) , offset + stables.length), x2, y2, sx2, sy2);
  offset = add_14(verts, (arraycopy(stables, 0, verts, offset, stables.length) , offset + stables.length), x3, y3, sx3, sy3);
  offset = add_14(verts, (arraycopy(stables, 0, verts, offset, stables.length) , offset + stables.length), x4, y4, sx4, sy4);
  this.vertPos = offset;
  $addElems(this, vertIdx, QUAD_INDICES, QUAD_INDICES.length);
}
;
_.begin = function begin_0(fbufWidth, fbufHeight, flip){
  $begin(this);
  $activate(this.program);
  $glUniform2f(this.gl, this.uHScreenSize, fbufWidth / 2, fbufHeight / 2);
  $glUniform1f(this.gl, this.uFlip, flip?-1:1);
  this.delayedBinding || ($glBindBuffer(this.gl, $intern_80, this.verticesId) , $glBindVertAttrib(this, this.aMatrix, 4, 0) , $glBindVertAttrib(this, this.aTranslation, 2, 16) , $glBindVertAttrib(this, this.aColor, 2, 24) , $glBindVertAttrib(this, this.aPosition, 2, 32) , $glBindVertAttrib(this, this.aTexCoord, 2, 40) , $glBindBuffer(this.gl, $intern_81, this.elementsId) , $activeTexture(this.gl.gl, 33984) , $glUniform1i(this.gl, this.uTexture));
  $checkError(this.gl);
}
;
_.close_0 = function close_8(){
  $close_0(this);
  $close_1(this.program);
  $glDeleteBuffers(this.gl, initValues(getClassLiteralForArray(I_classLit, 1), $intern_37, 0, 7, [this.verticesId, this.elementsId]));
  $checkError(this.gl);
}
;
_.end = function end_1(){
  $end(this);
  this.curTexId = 0;
  $glDisableVertexAttribArray(this.gl, this.aMatrix);
  $glDisableVertexAttribArray(this.gl, this.aTranslation);
  $glDisableVertexAttribArray(this.gl, this.aColor);
  $glDisableVertexAttribArray(this.gl, this.aPosition);
  $glDisableVertexAttribArray(this.gl, this.aTexCoord);
  $checkError(this.gl);
}
;
_.flush = function flush_0(){
  $flush_0(this);
}
;
_.toString$ = function toString_65(){
  return 'tris/' + ~~(this.elements.length / QUAD_INDICES.length);
}
;
_.aColor = 0;
_.aMatrix = 0;
_.aPosition = 0;
_.aTexCoord = 0;
_.aTranslation = 0;
_.delayedBinding = false;
_.elemPos = 0;
_.elementsId = 0;
_.uFlip = 0;
_.uHScreenSize = 0;
_.uTexture = 0;
_.vertPos = 0;
_.verticesId = 0;
var QUAD_INDICES;
var Lplayn_core_TriangleBatch_2_classLit = createForClass('playn.core', 'TriangleBatch', 295, Lplayn_core_QuadBatch_2_classLit);
function $flush_1(this$static){
  $flush(this$static);
  if (this$static.quadCounter > 0) {
    $glBindTexture(this$static.gl, this$static.curTexId);
    $checkError(this$static.gl);
    $glUniform4fv(this$static.gl, this$static.uData, this$static.quadCounter * 3, this$static.data_0);
    $glDrawElements(this$static.gl, this$static.quadCounter * 6);
    $checkError(this$static.gl);
    this$static.quadCounter = 0;
  }
}

function UniformQuadBatch(gl){
  UniformQuadBatch_0.call(this, gl);
}

function UniformQuadBatch_0(gl){
  var base, base0, base1, base2, base3, ee, elems, ids, ii, maxVecs, verts, vv;
  QuadBatch.call(this, gl);
  maxVecs = usableMaxUniformVectors(gl);
  if (maxVecs < 3)
    throw new RuntimeException_0('GL_MAX_VERTEX_UNIFORM_VECTORS too low: have ' + maxVecs + ', need at least ' + 3);
  this.maxQuads = ~~(maxVecs / 3);
  this.program = new GLProgram(gl, $replace_0($replace_0('uniform vec2 u_HScreenSize;\nuniform float u_Flip;\nuniform vec4 u_Data[_VEC4S_PER_QUAD_*_MAX_QUADS_];\nattribute vec3 a_Vertex;\nvarying vec2 v_TexCoord;\nvarying vec4 v_Color;\nvoid main(void) {\nint index = _VEC4S_PER_QUAD_*int(a_Vertex.z);\nvec4 mat = u_Data[index+0];\nvec4 txc = u_Data[index+1];\nvec4 tcs = u_Data[index+2];\nmat3 transform = mat3(\n  mat.x, mat.y, 0,\n  mat.z, mat.w, 0,\n  txc.x, txc.y, 1);\ngl_Position = vec4(transform * vec3(a_Vertex.xy, 1.0), 1.0);\ngl_Position.xy /= u_HScreenSize.xy;\ngl_Position.xy -= 1.0;\ngl_Position.y *= u_Flip;\nv_TexCoord = a_Vertex.xy * tcs.xy + txc.zw;\nfloat red = mod(tcs.z, 256.0);\nfloat alpha = (tcs.z - red) / 256.0;\nfloat blue = mod(tcs.w, 256.0);\nfloat green = (tcs.w - blue) / 256.0;\nv_Color = vec4(red / 255.0, green / 255.0, blue / 255.0, alpha / 255.0);\n}', '_MAX_QUADS_', '' + this.maxQuads), '_VEC4S_PER_QUAD_', '3'), $fragment());
  this.uTexture = $getUniformLocation_0(this.program, 'u_Texture');
  this.uHScreenSize = $getUniformLocation_0(this.program, 'u_HScreenSize');
  this.uFlip = $getUniformLocation_0(this.program, 'u_Flip');
  this.uData = $getUniformLocation_0(this.program, 'u_Data');
  this.aVertex = $getAttribLocation_0(this.program, 'a_Vertex');
  verts = initDim(S_classLit, $intern_78, 0, this.maxQuads * 4 * 3, 7, 1);
  elems = initDim(S_classLit, $intern_78, 0, this.maxQuads * 6, 7, 1);
  vv = 0;
  ee = 0;
  for (ii = 0; ii < this.maxQuads; ii++) {
    verts[vv++] = 0;
    verts[vv++] = 0;
    verts[vv++] = ii;
    verts[vv++] = 1;
    verts[vv++] = 0;
    verts[vv++] = ii;
    verts[vv++] = 0;
    verts[vv++] = 1;
    verts[vv++] = ii;
    verts[vv++] = 1;
    verts[vv++] = 1;
    verts[vv++] = ii;
    base = narrow_short(ii * 4);
    base0 = base;
    base1 = ++base;
    base2 = ++base;
    base3 = ++base;
    elems[ee++] = base0;
    elems[ee++] = base1;
    elems[ee++] = base2;
    elems[ee++] = base1;
    elems[ee++] = base3;
    elems[ee++] = base2;
  }
  this.data_0 = initDim(F_classLit, $intern_79, 0, this.maxQuads * 3 * 4, 7, 1);
  ids = initDim(I_classLit, $intern_37, 0, 2, 7, 1);
  $glGenBuffers(gl, ids);
  this.verticesId = ids[0];
  this.elementsId = ids[1];
  $glBindBuffer(gl, $intern_80, this.verticesId);
  $setShortBuffer(gl.bufs, verts, verts.length);
  $glBufferData(gl, $intern_80, verts.length * 2, gl.bufs.shortBuffer, 35044);
  $glBindBuffer(gl, $intern_81, this.elementsId);
  $setShortBuffer(gl.bufs, elems, elems.length);
  $glBufferData(gl, $intern_81, elems.length * 2, gl.bufs.shortBuffer, 35044);
  $checkError(gl);
}

function usableMaxUniformVectors(gl){
  var glErr, maxVecs;
  maxVecs = gl.gl.getParameter(36347) - 3;
  glErr = gl.gl.getError();
  if (glErr != 0)
    throw new RuntimeException_0('Unable to query GL_MAX_VERTEX_UNIFORM_VECTORS,  error ' + glErr);
  return maxVecs;
}

defineClass(294, 293, $intern_72, UniformQuadBatch);
_.addQuad = function addQuad_0(tint, m00, m01, m10, m11, tx, ty, x1, y1, sx1, sy1, x2, y2, sx2, sy2, x3, y3, sx3, sy3, x4, y4, sx4, sy4){
  var dh, dw, pos;
  pos = this.quadCounter * 3 * 4;
  dw = x2 - x1;
  dh = y3 - y1;
  this.data_0[pos++] = m00 * dw;
  this.data_0[pos++] = m01 * dw;
  this.data_0[pos++] = m10 * dh;
  this.data_0[pos++] = m11 * dh;
  this.data_0[pos++] = tx + m00 * x1 + m10 * y1;
  this.data_0[pos++] = ty + m01 * x1 + m11 * y1;
  this.data_0[pos++] = sx1;
  this.data_0[pos++] = sy1;
  this.data_0[pos++] = sx2 - sx1;
  this.data_0[pos++] = sy3 - sy1;
  this.data_0[pos++] = tint >> 16 & $intern_22;
  this.data_0[pos++] = tint & $intern_22;
  ++this.quadCounter;
  this.quadCounter >= this.maxQuads && $flush_1(this);
}
;
_.begin = function begin_1(fbufWidth, fbufHeight, flip){
  $begin(this);
  $activate(this.program);
  $glUniform2f(this.gl, this.uHScreenSize, fbufWidth / 2, fbufHeight / 2);
  $glUniform1f(this.gl, this.uFlip, flip?-1:1);
  $glBindBuffer(this.gl, $intern_80, this.verticesId);
  $glEnableVertexAttribArray(this.gl, this.aVertex);
  $glVertexAttribPointer(this.gl, this.aVertex, 3, 5122, 0, 0);
  $glBindBuffer(this.gl, $intern_81, this.elementsId);
  $activeTexture(this.gl.gl, 33984);
  $glUniform1i(this.gl, this.uTexture);
  $checkError(this.gl);
}
;
_.close_0 = function close_9(){
  $close_0(this);
  $close_1(this.program);
  $glDeleteBuffers(this.gl, initValues(getClassLiteralForArray(I_classLit, 1), $intern_37, 0, 7, [this.verticesId, this.elementsId]));
  $checkError(this.gl);
}
;
_.end = function end_2(){
  $end(this);
  this.curTexId = 0;
  $glDisableVertexAttribArray(this.gl, this.aVertex);
  $checkError(this.gl);
}
;
_.flush = function flush_1(){
  $flush_1(this);
}
;
_.toString$ = function toString_66(){
  return 'uquad/' + this.maxQuads;
}
;
_.aVertex = 0;
_.elementsId = 0;
_.maxQuads = 0;
_.quadCounter = 0;
_.uData = 0;
_.uFlip = 0;
_.uHScreenSize = 0;
_.uTexture = 0;
_.verticesId = 0;
var Lplayn_core_UniformQuadBatch_2_classLit = createForClass('playn.core', 'UniformQuadBatch', 294, Lplayn_core_QuadBatch_2_classLit);
function $doXhr(this$static, path, rtype){
  var result, xhr;
  result = new RPromise;
  xhr = new $wnd.XMLHttpRequest;
  xhr.open('GET', path, true);
  $setResponseType(xhr, rtype.responseTypeString);
  $setOnReadyStateChange(xhr, new HtmlAssets$5(this$static, path, result));
  xhr.send(null);
  return result;
}

function $getBundle(this$static, collection){
  var clientBundle, entry, entry$iterator, regExp;
  clientBundle = null;
  for (entry$iterator = this$static.clientBundles.entrySet_0().iterator(); entry$iterator.hasNext();) {
    entry = entry$iterator.next_0();
    regExp = entry.getKey();
    !!$exec(new RegExp(regExp), collection) && (clientBundle = entry.getValue());
  }
  return clientBundle;
}

function $getImage_0(this$static, path){
  var assetScale, rsrcs;
  assetScale = ($clinit_Scale() , ONE_0);
  rsrcs = $getScaledResources(assetScale, path);
  return $getImage_1(this$static, (checkElementIndex(0, rsrcs.array.length) , rsrcs.array[0]).path, (checkElementIndex(0, rsrcs.array.length) , rsrcs.array[0]).scale_0);
}

function $getImage_1(this$static, path, scale){
  var url_0, img;
  url_0 = this$static.pathPrefix + path;
  $getBundle(this$static, path);
  return img = $doc.createElement('img') , 'crossOrigin' in img && img.setAttribute('crossOrigin', 'anonymous') , img.src = url_0 , new HtmlImage_0(this$static.plat.graphics, scale, img, url_0);
}

function $getSound(this$static, path){
  var url_0;
  url_0 = this$static.pathPrefix + path;
  $getBundle(this$static, path);
  url_0 += '.mp3';
  return $createSound_0(this$static.plat.audio, url_0);
}

function $getText(this$static){
  var e, fullPath, result, xdr;
  fullPath = this$static.pathPrefix + 'text/consent.txt';
  try {
    return $map($doXhr(this$static, fullPath, ($clinit_XMLHttpRequest$ResponseType() , Default)), new HtmlAssets$1);
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 121)) {
      e = $e0;
      if (getUserAgent().indexOf('MSIE') != -1) {
        return $map((result = new RPromise , xdr = new $wnd.XDomainRequest , $setHandler(xdr, new HtmlAssets$4(this$static, fullPath, result)) , xdr.open('GET', fullPath, true) , xdr.send() , result), new HtmlAssets$2);
      }
       else {
        throw unwrap(e);
      }
    }
     else 
      throw unwrap($e0);
  }
}

function HtmlAssets(plat){
  this.clientBundles = new HashMap;
  this.pathPrefix = $moduleBase;
  this.plat = plat;
}

defineClass(386, 962, {}, HtmlAssets);
var Lplayn_html_HtmlAssets_2_classLit = createForClass('playn.html', 'HtmlAssets', 386, Lplayn_core_Assets_2_classLit);
function HtmlAssets$1(){
}

defineClass(387, 1, {}, HtmlAssets$1);
_.apply_1 = function apply_4(xhr){
  return xhr.responseText;
}
;
var Lplayn_html_HtmlAssets$1_2_classLit = createForClass('playn.html', 'HtmlAssets/1', 387, Ljava_lang_Object_2_classLit);
function HtmlAssets$2(){
}

defineClass(388, 1, {}, HtmlAssets$2);
_.apply_1 = function apply_5(xdr){
  return xdr.responseText;
}
;
var Lplayn_html_HtmlAssets$2_2_classLit = createForClass('playn.html', 'HtmlAssets/2', 388, Ljava_lang_Object_2_classLit);
function HtmlAssets$4(this$0, val$path, val$result){
  this.this$01 = this$0;
  this.val$path2 = val$path;
  this.val$result3 = val$result;
}

defineClass(389, 1, {}, HtmlAssets$4);
_.onError = function onError(xdr){
  $error(this.this$01.plat.log_0, 'xdr::onError[' + this.val$path2 + ']()', null);
  this.val$result3.fail(new Exception('Error getting ' + this.val$path2 + ' : ' + xdr.contentType));
}
;
_.onLoad = function onLoad(xdr){
  this.val$result3.succeed(xdr);
}
;
_.onProgress = function onProgress(xdr){
}
;
_.onTimeout = function onTimeout(xdr){
  $error(this.this$01.plat.log_0, 'xdr::onTimeout[' + this.val$path2 + ']()', null);
  this.val$result3.fail(new Exception('Error getting ' + this.val$path2 + ' : ' + xdr.contentType));
}
;
var Lplayn_html_HtmlAssets$4_2_classLit = createForClass('playn.html', 'HtmlAssets/4', 389, Ljava_lang_Object_2_classLit);
function HtmlAssets$5(this$0, val$path, val$result){
  this.this$01 = this$0;
  this.val$path2 = val$path;
  this.val$result3 = val$result;
}

defineClass(390, 1, {}, HtmlAssets$5);
_.onReadyStateChange = function onReadyStateChange(xhr){
  var readyState, status_0, status_1;
  readyState = xhr.readyState;
  if (readyState == 4) {
    status_0 = xhr.status;
    if (status_0 != 0 && (status_0 < 200 || status_0 >= 400)) {
      $error(this.this$01.plat.log_0, 'xhr::onReadyStateChange[' + this.val$path2 + ']' + '(readyState = ' + 4 + '; status = ' + status_0 + ')', null);
      this.val$result3.fail(new Exception('Error getting ' + this.val$path2 + ' : ' + xhr.statusText));
    }
     else {
      this.val$result3.succeed(xhr);
    }
  }
}
;
var Lplayn_html_HtmlAssets$5_2_classLit = createForClass('playn.html', 'HtmlAssets/5', 390, Ljava_lang_Object_2_classLit);
function $createSound_0(this$static, url_0){
  var sound;
  sound = $createSound(this$static.soundController, url_0);
  return new HtmlSound(this$static.plat.exec_0, sound);
}

function HtmlAudio(plat){
  var types;
  this.soundController = new SoundController;
  this.plat = plat;
  types = this.soundController.preferredSoundTypes;
  $debug(plat.log_0, 'Preferred sound type(s): ' + types);
  maybeCreateAudioContext();
}

function maybeCreateAudioContext(){
  try {
    return new AudioContext;
  }
   catch (ignore) {
  }
  try {
    return new webkitAudioContext;
  }
   catch (ignore) {
  }
  return null;
}

defineClass(427, 969, {}, HtmlAudio);
var Lplayn_html_HtmlAudio_2_classLit = createForClass('playn.html', 'HtmlAudio', 427, Lplayn_core_Audio_2_classLit);
function $clear_1(this$static){
  return $clearRect_0(this$static, this$static.width_0, this$static.height_0);
}

function $clearRect_0(this$static, width_0, height){
  $clearRect(this$static.ctx, 0, 0, width_0, height);
  return this$static;
}

function $convertLineCap(cap){
  switch (cap.ordinal) {
    case 0:
      return $clinit_Context2d$LineCap() , BUTT;
    case 1:
      return $clinit_Context2d$LineCap() , ROUND;
    case 2:
      return $clinit_Context2d$LineCap() , SQUARE;
  }
  return $clinit_Context2d$LineCap() , SQUARE;
}

function $convertLineJoin(join_0){
  switch (join_0.ordinal) {
    case 0:
      return $clinit_Context2d$LineJoin() , BEVEL;
    case 1:
      return $clinit_Context2d$LineJoin() , MITER;
    case 2:
      return $clinit_Context2d$LineJoin() , ROUND_0;
  }
  return $clinit_Context2d$LineJoin() , ROUND_0;
}

function $createGradient(this$static, config){
  return new HtmlGradient(this$static.ctx, config);
}

function $fillRect_1(this$static, x_0, y_0, w, h){
  $fillRect(this$static.ctx, x_0, y_0, w, h);
  return this$static;
}

function $fillRoundRect(this$static, x_0, y_0, w, h, radius){
  var midx, midy, maxx, maxy;
  midx = x_0 + w / 2;
  midy = y_0 + h / 2;
  maxx = x_0 + w;
  maxy = y_0 + h;
  this$static.ctx.beginPath();
  $moveTo(this$static.ctx, x_0, midy);
  $arcTo(this$static.ctx, x_0, y_0, midx, y_0, radius);
  $arcTo(this$static.ctx, maxx, y_0, maxx, midy, radius);
  $arcTo(this$static.ctx, maxx, maxy, midx, maxy, radius);
  $arcTo(this$static.ctx, x_0, maxy, x_0, midy, radius);
  this$static.ctx.closePath();
  this$static.ctx.fill();
  return this$static;
}

function $fillText_0(this$static, layout, x_0, y_0){
  $fill(layout, this$static.ctx, x_0, y_0);
  return this$static;
}

function $setFillColor_0(this$static, color_0){
  $setFillStyleWeb(this$static.ctx, cssColorString(color_0));
  return this$static;
}

function $setFillGradient(this$static, gradient){
  $setFillStyleWeb(this$static.ctx, gradient.gradient);
  return this$static;
}

function $setLineCap_0(this$static, cap){
  $setLineCap(this$static.ctx, $convertLineCap(cap).value_0);
  return this$static;
}

function $setLineJoin_0(this$static, join_0){
  $setLineJoin(this$static.ctx, $convertLineJoin(join_0).value_0);
  return this$static;
}

function $setStrokeColor(this$static, color_0){
  $setStrokeStyleWeb(this$static.ctx, cssColorString(color_0));
  return this$static;
}

function $setStrokeWidth(this$static, w){
  $setLineWidth(this$static.ctx, w);
  return this$static;
}

function $strokeText_0(this$static, layout, x_0, y_0){
  $stroke(layout, this$static.ctx, x_0, y_0);
  return this$static;
}

function HtmlCanvas(image){
  var scale;
  Canvas_0.call(this, image);
  this.ctx = $getContext2d(image.canvas);
  scale = image.scale_0.factor;
  $scale(this.ctx, scale, scale);
}

defineClass(596, 572, $intern_72, HtmlCanvas);
var Lplayn_html_HtmlCanvas_2_classLit = createForClass('playn.html', 'HtmlCanvas', 596, Lplayn_core_Canvas_2_classLit);
function $clinit_HtmlFont(){
  $clinit_HtmlFont = emptyMethod;
  DEFAULT_1 = new Font_0('sans-serif', ($clinit_Font$Style() , PLAIN), 12);
}

function toCSS(font){
  $clinit_HtmlFont();
  var name_0, style;
  name_0 = font.name_0;
  !$equals(name_0.substr(0, 1), '"') && name_0.indexOf(' ') != -1 && (name_0 = '"' + name_0 + '"');
  style = '';
  switch (font.style_0.ordinal) {
    case 1:
      style = 'bold';
      break;
    case 2:
      style = 'italic';
      break;
    case 3:
      style = 'bold italic';
  }
  return style + ' ' + font.size_0 + 'px ' + name_0;
}

var DEFAULT_1;
function $adjustWidth(this$static, width_0){
  switch (this$static.font_0.style_0.ordinal) {
    case 2:
      return width_0 + this$static.emwidth / 8;
    case 3:
      return width_0 + this$static.emwidth / 6;
    default:return width_0;
  }
}

function $descent(this$static){
  return this$static.height_0 - $intern_75 * this$static.height_0;
}

function HtmlFontMetrics(font, height, emwidth){
  this.font_0 = font;
  this.height_0 = height;
  this.emwidth = emwidth;
}

defineClass(846, 1, {}, HtmlFontMetrics);
_.emwidth = 0;
_.height_0 = 0;
var Lplayn_html_HtmlFontMetrics_2_classLit = createForClass('playn.html', 'HtmlFontMetrics', 846, Ljava_lang_Object_2_classLit);
function $getTypedArray(buffer, type_0, byteSize){
  var arrayHolder, bufferElementSize, byteOffset, webGLArray;
  if (!instanceOf(buffer, 277)) {
    throw new RuntimeException_0('Native buffer required ' + buffer);
  }
  arrayHolder = buffer;
  bufferElementSize = arrayHolder.getElementSize();
  webGLArray = arrayHolder.getTypedArray();
  byteSize == -1 && (byteSize = (buffer.limit - buffer.position_0) * bufferElementSize);
  if (byteSize == buffer.capacity * bufferElementSize && type_0 == arrayHolder.getElementType()) {
    return webGLArray;
  }
  byteOffset = webGLArray.byteOffset + buffer.position_0 * bufferElementSize;
  switch (type_0) {
    case 5126:
      return create_2(webGLArray.buffer, byteOffset, ~~(byteSize / 4));
    case 5121:
      return create_7(webGLArray.buffer, byteOffset, byteSize);
    case 5123:
      return create_6(webGLArray.buffer, byteOffset, ~~(byteSize / 2));
    case 5124:
      return create_4(webGLArray.buffer, byteOffset, ~~(byteSize / 4));
    case 5122:
      return create_3(webGLArray.buffer, byteOffset, ~~(byteSize / 2));
    case 5120:
      return create_5(webGLArray.buffer, byteOffset, byteSize);
    default:throw new IllegalArgumentException_0('Type: ' + type_0);
  }
}

function $glAttachShader(this$static, program, shader){
  var glProgram, glShader;
  glProgram = this$static.programs[program];
  glShader = this$static.shaders[shader];
  $attachShader(this$static.gl, glProgram, glShader);
}

function $glBindBuffer(this$static, target, buffer){
  var webGlBuf;
  webGlBuf = this$static.buffers[buffer];
  target == $intern_80?(this$static.requestedArrayBuffer = webGlBuf):target == $intern_81?(this$static.requestedElementArrayBuffer = webGlBuf):$bindBuffer(this$static.gl, target, webGlBuf);
}

function $glBindFramebuffer(this$static){
  $bindFramebuffer(this$static.gl, 36160, this$static.frameBuffers[0]);
}

function $glBindTexture(this$static, texture){
  $bindTexture(this$static.gl, 3553, this$static.textures[texture]);
}

function $glBufferData(this$static, target, byteSize, data_0, usage){
  if (target == $intern_80) {
    if (this$static.requestedArrayBuffer != this$static.boundArrayBuffer) {
      $bindBuffer(this$static.gl, $intern_80, this$static.requestedArrayBuffer);
      this$static.boundArrayBuffer = this$static.requestedArrayBuffer;
    }
  }
   else if (target == $intern_81) {
    if (this$static.requestedElementArrayBuffer != this$static.boundElementArrayBuffer) {
      $bindBuffer(this$static.gl, $intern_81, this$static.requestedElementArrayBuffer);
      this$static.boundElementArrayBuffer = this$static.requestedElementArrayBuffer;
    }
  }
  $bufferData(this$static.gl, target, $getTypedArray(data_0, 5120, byteSize), usage);
}

function $glClearColor(this$static, red, green, blue, alpha_0){
  $clearColor(this$static.gl, red, green, blue, alpha_0);
}

function $glCompileShader(this$static, shader){
  var glShader;
  glShader = this$static.shaders[shader];
  $compileShader(this$static.gl, glShader);
}

function $glCreateShader(this$static, type_0){
  var shader;
  shader = $createShader(this$static.gl, type_0);
  return $add_12(this$static.shaders, shader);
}

function $glDeleteBuffers(this$static, buffers){
  var buffer, i, id_0;
  for (i = 0; i < 2; i++) {
    id_0 = buffers[i];
    buffer = $remove_20(this$static.buffers, id_0);
    $deleteBuffer(this$static.gl, buffer);
  }
}

function $glDeleteFramebuffers(this$static, framebuffers){
  var fb, i, id_0, pos;
  pos = framebuffers.position_0;
  for (i = 0; i < 1; i++) {
    id_0 = framebuffers.intArray[pos + i];
    fb = $remove_20(this$static.frameBuffers, id_0);
    $deleteFramebuffer(this$static.gl, fb);
  }
}

function $glDeleteProgram(this$static, program){
  var prog;
  prog = $remove_20(this$static.programs, program);
  $deleteProgram(this$static.gl, prog);
}

function $glDeleteShader(this$static, shader){
  var sh;
  sh = $remove_20(this$static.shaders, shader);
  $deleteShader(this$static.gl, sh);
}

function $glDeleteTextures(this$static, textures){
  var i, id_0, pos, texture;
  pos = textures.position_0;
  for (i = 0; i < 1; i++) {
    id_0 = textures.intArray[pos + i];
    texture = $remove_20(this$static.textures, id_0);
    $deleteTexture(this$static.gl, texture);
  }
}

function $glDisableVertexAttribArray(this$static, index_0){
  this$static.enabledArrays &= ~(1 << index_0);
}

function $glDrawElements(this$static, count){
  $prepareDraw(this$static);
  if (this$static.requestedElementArrayBuffer != this$static.boundElementArrayBuffer) {
    $bindBuffer(this$static.gl, $intern_81, this$static.requestedElementArrayBuffer);
    this$static.boundElementArrayBuffer = this$static.requestedElementArrayBuffer;
  }
  $drawElements(this$static.gl, 4, count, 5123, 0);
}

function $glEnableVertexAttribArray(this$static, index_0){
  this$static.enabledArrays |= 1 << index_0;
}

function $glGenBuffers(this$static, buffers){
  var buffer, i, id_0;
  for (i = 0; i < 2; i++) {
    buffer = this$static.gl.createBuffer();
    id_0 = $add_12(this$static.buffers, buffer);
    buffers[i] = id_0;
  }
}

function $glGenTextures(this$static, textures){
  var i, id_0, pos, texture;
  pos = textures.position_0;
  for (i = 0; i < 1; i++) {
    texture = this$static.gl.createTexture();
    id_0 = $add_12(this$static.textures, texture);
    $set_0(textures.intArray, pos + i, id_0);
  }
}

function $glGetAttribLocation(this$static, program, name_0){
  var prog;
  prog = this$static.programs[program];
  return $getAttribLocation(this$static.gl, prog, name_0);
}

function $glGetShaderInfoLog(this$static, shader){
  return $getShaderInfoLog(this$static.gl, this$static.shaders[shader]);
}

function $glGetShaderiv(this$static, shader, params){
  params[0] = $getShaderParameterb(this$static.gl, this$static.shaders[shader], 35713)?1:0;
}

function $glGetUniformLocation(this$static, program, name_0){
  var id_0, location_0, progUniforms;
  location_0 = $getUniformLocation(this$static.gl, this$static.programs[program], name_0);
  progUniforms = this$static.uniforms[program];
  if (!progUniforms) {
    progUniforms = [undefined];
    this$static.uniforms[program] = progUniforms;
  }
  id_0 = $add_12(progUniforms, location_0);
  return id_0;
}

function $glScissor(this$static, x_0, y_0, width_0, height){
  $scissor(this$static.gl, x_0, y_0, width_0, height);
}

function $glShaderSource(this$static, shader, string){
  $shaderSource(this$static.gl, this$static.shaders[shader], string);
}

function $glTexImage2D(this$static, image){
  $texImage2D(this$static.gl, 3553, 0, 6408, 6408, 5121, image);
  $checkError(this$static);
}

function $glTexParameteri(this$static, glTextureMinFilter, glFilterMin){
  $texParameteri(this$static.gl, 3553, glTextureMinFilter, glFilterMin);
}

function $glUniform1f(this$static, location_0, x_0){
  $uniform1f(this$static.gl, this$static.uniforms[this$static.currProgram][location_0], x_0);
}

function $glUniform1i(this$static, location_0){
  $uniform1i(this$static.gl, this$static.uniforms[this$static.currProgram][location_0], 0);
}

function $glUniform2f(this$static, location_0, x_0, y_0){
  $uniform2f(this$static.gl, this$static.uniforms[this$static.currProgram][location_0], x_0, y_0);
}

function $glUniform4fv_0(this$static, location_0, count, v){
  $uniform4fv(this$static.gl, this$static.uniforms[this$static.currProgram][location_0], $getTypedArray(v, 5126, 16 * count));
}

function $glUseProgram(this$static, program){
  this$static.currProgram = program;
  $useProgram(this$static.gl, this$static.programs[program]);
}

function $glVertexAttribPointer(this$static, indx, size_0, type_0, stride, ptr){
  this$static.useNioBuffer &= ~(1 << indx);
  if (this$static.boundArrayBuffer != this$static.requestedArrayBuffer) {
    $bindBuffer(this$static.gl, $intern_80, this$static.requestedArrayBuffer);
    this$static.boundArrayBuffer = this$static.requestedArrayBuffer;
  }
  $vertexAttribPointer(this$static.gl, indx, size_0, type_0, false, stride, ptr);
}

function $glViewport(this$static, w, h){
  $viewport(this$static.gl, 0, 0, w, h);
}

function $init(this$static, gl){
  var data_0, ii;
  gl.pixelStorei(37441, 1);
  this$static.gl = gl;
  gl.createBuffer();
  for (ii = 0; ii < 5; ii++) {
    data_0 = new HtmlGL20$VertexAttribArrayState;
    data_0.webGlBuffer = gl.createBuffer();
    this$static.vertexAttribArrayState[ii] = data_0;
  }
}

function $prepareDraw(this$static){
  var data_0, elementSize, enabled, i, mask, previousElementSize, previousNio;
  previousNio = null;
  previousElementSize = 0;
  if (this$static.useNioBuffer == 0 && this$static.enabledArrays == this$static.previouslyEnabledArrays) {
    return;
  }
  for (i = 0; i < 5; i++) {
    mask = 1 << i;
    enabled = this$static.enabledArrays & mask;
    enabled != (this$static.previouslyEnabledArrays & mask) && (enabled != 0?$enableVertexAttribArray(this$static.gl, i):$disableVertexAttribArray(this$static.gl, i));
    if (enabled != 0 && (this$static.useNioBuffer & mask) != 0) {
      data_0 = this$static.vertexAttribArrayState[i];
      if (!!previousNio && previousNio.nioBufferLimit >= data_0.nioBufferLimit) {
        if (this$static.boundArrayBuffer != previousNio.webGlBuffer) {
          $bindBuffer(this$static.gl, $intern_80, previousNio.webGlBuffer);
          this$static.boundArrayBuffer = data_0.webGlBuffer;
        }
        $vertexAttribPointer(this$static.gl, i, data_0.size_0, data_0.type_0, data_0.normalize, data_0.stride, data_0.nioBufferPosition * previousElementSize);
      }
       else {
        if (this$static.boundArrayBuffer != data_0.webGlBuffer) {
          $bindBuffer(this$static.gl, $intern_80, data_0.webGlBuffer);
          this$static.boundArrayBuffer = data_0.webGlBuffer;
        }
        elementSize = getElementSize_3();
        null.nullMethod();
        if (data_0.nioBufferPosition * elementSize < data_0.stride) {
          null.nullMethod();
          $bufferData(this$static.gl, $intern_80, $getTypedArray(data_0.nioBuffer, data_0.type_0, data_0.nioBufferLimit * elementSize), 35040);
          $vertexAttribPointer(this$static.gl, i, data_0.size_0, data_0.type_0, data_0.normalize, data_0.stride, data_0.nioBufferPosition * elementSize);
          previousNio = data_0;
          previousElementSize = elementSize;
        }
         else {
          null.nullMethod();
          $bufferData(this$static.gl, $intern_80, $getTypedArray(data_0.nioBuffer, data_0.type_0, (data_0.nioBufferLimit - data_0.nioBufferPosition) * elementSize), 35040);
          $vertexAttribPointer(this$static.gl, i, data_0.size_0, data_0.type_0, data_0.normalize, data_0.stride, 0);
        }
        null.nullMethod();
      }
    }
  }
  this$static.previouslyEnabledArrays = this$static.enabledArrays;
}

function HtmlGL20(){
  GL20.call(this, new HtmlGL20$1, ($clinit_HtmlUrlParameters() , checkGLErrors));
  this.programs = [undefined];
  this.shaders = [undefined];
  this.buffers = [undefined];
  this.frameBuffers = [undefined];
  this.textures = [undefined];
  this.uniforms = [undefined];
  this.vertexAttribArrayState = initDim(Lplayn_html_HtmlGL20$VertexAttribArrayState_2_classLit, $intern_1, 226, 5, 0, 1);
}

function getElementSize_3(){
  throw new RuntimeException_0('Unrecognized buffer type: ' + null.nullMethod());
}

defineClass(495, 494, {}, HtmlGL20);
_.currProgram = 0;
_.enabledArrays = 0;
_.previouslyEnabledArrays = 0;
_.useNioBuffer = 0;
var Lplayn_html_HtmlGL20_2_classLit = createForClass('playn.html', 'HtmlGL20', 495, Lplayn_core_GL20_2_classLit);
function $createByteBuffer(size_0){
  var buffer;
  buffer = allocateDirect(size_0);
  $order(buffer, ($clinit_ByteOrder() , $clinit_ByteOrder() , NATIVE_ORDER));
  return buffer;
}

function HtmlGL20$1(){
  this.intBuffer = $asIntBuffer($createByteBuffer(128));
  this.floatBuffer = new FloatBuffer($slice($createByteBuffer(128)));
  this.shortBuffer = $asShortBuffer($createByteBuffer(64));
  $createByteBuffer(256);
}

defineClass(497, 496, {}, HtmlGL20$1);
var Lplayn_html_HtmlGL20$1_2_classLit = createForClass('playn.html', 'HtmlGL20/1', 497, Lplayn_core_GL20$Buffers_2_classLit);
function $add_12(this$static, value_0){
  this$static.push(value_0);
  return this$static.length - 1;
}

function $remove_20(this$static, key){
  var value_0 = this$static[key];
  delete this$static[key];
  return value_0;
}

function HtmlGL20$VertexAttribArrayState(){
}

defineClass(226, 1, {226:1}, HtmlGL20$VertexAttribArrayState);
_.nioBufferLimit = 0;
_.nioBufferPosition = 0;
_.normalize = false;
_.size_0 = 0;
_.stride = 0;
_.type_0 = 0;
var Lplayn_html_HtmlGL20$VertexAttribArrayState_2_classLit = createForClass('playn.html', 'HtmlGL20/VertexAttribArrayState', 226, Ljava_lang_Object_2_classLit);
function HtmlGradient(ctx, config){
  var ii;
  this.gradient = $createLinearGradient(ctx, config.x0, config.y0, config.x1, config.y1);
  for (ii = 0; ii < config.colors.length; ++ii) {
    $addColorStop(this.gradient, config.positions[ii], cssColorString(config.colors[ii]));
  }
}

defineClass(904, 1020, {}, HtmlGradient);
var Lplayn_html_HtmlGradient_2_classLit = createForClass('playn.html', 'HtmlGradient', 904, Lplayn_core_Gradient_2_classLit);
function $createCanvasImpl(this$static, scale, pixelWidth, pixelHeight){
  var elem;
  elem = $doc.createElement('canvas');
  $setWidth(elem, pixelWidth);
  $setHeight(elem, pixelHeight);
  return new HtmlCanvas(new HtmlImage(this$static, scale, elem));
}

function $getFontMetrics(this$static, font){
  var emwidth, height, metrics;
  metrics = this$static.fontMetrics.get_1(font);
  if (!metrics) {
    this$static.measureElement.style['fontSize'] = font.size_0 + ($clinit_Style$Unit() , 'px');
    this$static.measureElement.style['fontWeight'] = ($clinit_Style$FontWeight() , 'normal');
    this$static.measureElement.style['fontStyle'] = ($clinit_Style$FontStyle() , 'normal');
    $setPropertyImpl(this$static.measureElement.style, 'fontFamily', font.name_0);
    $setInnerText(this$static.measureElement, 'THEQUICKBROWNFOXJUMPEDOVERTHELAZYDOGthequickbrownfoxjumpedoverthelazydog_-+!.,[]0123456789');
    switch (font.style_0.ordinal) {
      case 1:
        this$static.measureElement.style['fontWeight'] = 'bold';
        break;
      case 2:
        this$static.measureElement.style['fontStyle'] = 'italic';
        break;
      case 3:
        this$static.measureElement.style['fontWeight'] = 'bold';
        this$static.measureElement.style['fontStyle'] = 'italic';
    }
    height = $getSubPixelOffsetHeight(this$static.measureElement) | 0;
    $setInnerText(this$static.measureElement, 'm');
    emwidth = $getSubPixelOffsetWidth(this$static.measureElement) | 0;
    metrics = new HtmlFontMetrics(font, height, emwidth);
    this$static.fontMetrics.put(font, metrics);
  }
  return metrics;
}

function $layoutText(this$static, format){
  return layoutText(this$static, this$static.dummyCtx, 'USERS', format);
}

function $setSize(this$static, width_0, height){
  var fbScale;
  this$static.rootElement.style['width'] = width_0 + ($clinit_Style$Unit() , 'px');
  this$static.rootElement.style['height'] = height + 'px';
  fbScale = new Scale(this$static.frameBufferPixelRatio);
  $setWidth(this$static.canvas, iceil(fbScale.factor * width_0));
  $setHeight(this$static.canvas, iceil(fbScale.factor * height));
  this$static.canvas.style['width'] = width_0 + 'px';
  this$static.canvas.style['height'] = height + 'px';
  $viewportChanged(this$static, this$static.canvas.width, this$static.canvas.height);
}

function $transformMouse(this$static, x_0, y_0){
  return $set_5(this$static.mousePoint, x_0 / this$static.mouseScale, y_0 / this$static.mouseScale);
}

function $updateTexture(this$static, tex, img){
  $glBindTexture(this$static.gl, tex);
  $glTexImage2D(this$static.gl, img);
}

function HtmlGraphics(plat, config){
  var attrs, doc, glc, root;
  Graphics.call(this, plat, new HtmlGL20, new Scale(config.scaleFactor));
  this.fontMetrics = new HashMap;
  this.mousePoint = new Point;
  new Dimension;
  this.frameBufferPixelRatio = config.frameBufferPixelRatio;
  this.mouseScale = config.scaleFactor / this.frameBufferPixelRatio;
  doc = $doc;
  this.dummyCanvas = doc.createElement('canvas');
  this.dummyCtx = $getContext2d(this.dummyCanvas);
  root = $getElementById(doc, config.rootId);
  if (!root) {
    root = doc.createElement('div');
    $setAttribute(root, 'style', 'width: 640px; height: 480px');
    $appendChild(doc.body, root);
  }
   else {
    root.innerHTML = '';
  }
  this.rootElement = root;
  this.measureElement = doc.createElement('div');
  this.measureElement.style['visibility'] = ($clinit_Style$Visibility() , 'hidden');
  this.measureElement.style['position'] = ($clinit_Style$Position() , 'absolute');
  this.measureElement.style['top'] = ($clinit_Style$Unit() , '-500.0px');
  this.measureElement.style['overflow'] = ($clinit_Style$Overflow() , 'visible');
  this.measureElement.style['whiteSpace'] = ($clinit_Style$WhiteSpace() , 'nowrap');
  $appendChild(root, this.measureElement);
  this.canvas = $doc.createElement('canvas');
  $appendChild(root, this.canvas);
  $setSize(this, $getSubPixelOffsetWidth(root) | 0, $getSubPixelOffsetHeight(root) | 0);
  attrs = {premultipliedAlpha:false};
  attrs.alpha = false;
  $setAntialias(attrs, config.antiAliasing);
  glc = getContext(this.canvas, attrs);
  if (!glc)
    throw new RuntimeException_0('Unable to create GL context');
  $init(this.gl, glc);
}

function cssColorString(color_0){
  var a, b, g, r;
  a = (color_0 >> 24 & 255) / 255;
  r = color_0 >> 16 & 255;
  g = color_0 >> 8 & 255;
  b = color_0 & 255;
  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';
}

defineClass(409, 408, {}, HtmlGraphics);
_.frameBufferPixelRatio = 0;
_.mouseScale = 0;
var experimentalScale = 1;
var Lplayn_html_HtmlGraphics_2_classLit = createForClass('playn.html', 'HtmlGraphics', 409, Lplayn_core_Graphics_2_classLit);
function $draw_1(this$static, ctx, x_0, y_0, width_0, height){
  $drawImage(ctx, this$static.img, x_0, y_0, width_0, height);
}

function $upload(this$static, gfx, tex){
  $updateTexture(gfx, tex.id_0, this$static.img);
}

function HtmlImage(gfx, scale, elem){
  ImageImpl.call(this, gfx, scale, elem.width, elem.height, elem);
  this.canvas = elem;
}

function HtmlImage_0(gfx, scale, elem, source){
  var pstate;
  ImageImpl_0.call(this, gfx, new RPromise, scale, elem.width, elem.height, source);
  this.img = elem;
  pstate = this.state;
  if (this.img.complete)
    pstate.succeed(this);
  else {
    new HtmlInput$EventCloseHandler(this.img, 'load', new HtmlImage$1(this, pstate), false);
    new HtmlInput$EventCloseHandler(this.img, 'error', new HtmlImage$2(this, pstate), false);
  }
}

defineClass(310, 309, {}, HtmlImage, HtmlImage_0);
_.toString$ = function toString_67(){
  return 'Image[src=' + this.source + ', scale=' + this.scale_0 + ', size=' + $invScaled(this.scale_0, this.pixelWidth) + 'x' + $invScaled(this.scale_0, this.pixelHeight) + ', psize=' + this.pixelWidth + 'x' + this.pixelHeight + ', img=' + this.img + ', canvas=' + this.canvas + ']';
}
;
var Lplayn_html_HtmlImage_2_classLit = createForClass('playn.html', 'HtmlImage', 310, Lplayn_core_ImageImpl_2_classLit);
function HtmlImage$1(this$0, val$pstate){
  this.this$01 = this$0;
  this.val$pstate2 = val$pstate;
}

defineClass(597, 1, {}, HtmlImage$1);
_.handleEvent = function handleEvent(evt){
  this.this$01.pixelWidth = this.this$01.img.width;
  this.this$01.pixelHeight = this.this$01.img.height;
  this.val$pstate2.succeed(this.this$01);
}
;
var Lplayn_html_HtmlImage$1_2_classLit = createForClass('playn.html', 'HtmlImage/1', 597, Ljava_lang_Object_2_classLit);
function HtmlImage$2(this$0, val$pstate){
  this.this$01 = this$0;
  this.val$pstate2 = val$pstate;
}

defineClass(598, 1, {}, HtmlImage$2);
_.handleEvent = function handleEvent_0(evt){
  this.val$pstate2.fail(new RuntimeException_0('Error loading image ' + this.this$01.img.src));
}
;
var Lplayn_html_HtmlImage$2_2_classLit = createForClass('playn.html', 'HtmlImage/2', 598, Ljava_lang_Object_2_classLit);
function $dispatch_0(this$static, event_0, nevent){
  try {
    $setFlag_0(event_0, modifierFlags($eventGetAltKey(nevent), $eventGetCtrlKey(nevent), $eventGetMetaKey(nevent), $eventGetShiftKey(nevent)));
    $dispatchEvent(this$static.plat, this$static.keyboardEvents, event_0);
  }
   finally {
    (event_0.flags & 1) != 0 && $eventPreventDefault(nevent);
  }
}

function $dispatch_1(this$static, event_0, nevent){
  try {
    $setFlag_0(event_0, modifierFlags($eventGetAltKey(nevent), $eventGetCtrlKey(nevent), $eventGetMetaKey(nevent), $eventGetShiftKey(nevent)));
    $dispatchEvent(this$static.plat, this$static.mouseEvents, event_0);
  }
   finally {
    (event_0.flags & 1) != 0 && $eventPreventDefault(nevent);
  }
}

function $dispatch_2(this$static, events, nevent){
  var event_0, event$index, event$max;
  try {
    $dispatchEvent(this$static.plat, this$static.touchEvents, events);
  }
   finally {
    for (event$index = 0 , event$max = events.length; event$index < event$max; ++event$index) {
      event_0 = events[event$index];
      (event_0.flags & 1) != 0 && $eventPreventDefault(nevent);
    }
  }
}

function $getText_0(this$static, label_0, initVal){
  var result;
  result = $wnd.prompt(label_0, initVal);
  $emit(this$static.mouseEvents, new Mouse$ButtonEvent(now_2(), 0, 0, ($clinit_Mouse$ButtonEvent$Id() , LEFT_0), false));
  return result_0(new Try$Success(result));
}

function $handleRequestsInUserEventContext(this$static){
  this$static.isRequestingMouseLock && !$isMouseLocked() && $requestMouseLockImpl(this$static.rootElement);
}

function $hasTouch(){
  return 'ontouchstart' in $doc.documentElement || $wnd.navigator.userAgent.match(/ipad|iphone|android/i) != null;
}

function $isMouseLocked(){
  return !!($doc.pointerLockElement || $doc.webkitPointerLockElement || $doc.mozPointerLockElement);
}

function $requestMouseLockImpl(element){
  element.requestPointerLock = element.requestPointerLock || element.webkitRequestPointerLock || element.mozRequestPointerLock;
  element.requestPointerLock && element.requestPointerLock();
}

function $toTouchEvents(this$static, kind, nevent){
  var id_0, nativeTouches, nativeTouchesLen, t, time, touch, touches, x_0, xy, y_0;
  nativeTouches = nevent.changedTouches;
  nativeTouchesLen = nativeTouches.length;
  touches = initDim(Lplayn_core_Touch$Event_2_classLit, $intern_1, 187, nativeTouchesLen, 0, 1);
  time = now_2();
  for (t = 0; t < nativeTouchesLen; t++) {
    touch = nativeTouches[t];
    x_0 = $getRelativeX(touch, this$static.rootElement);
    y_0 = $getRelativeY(touch, this$static.rootElement);
    xy = $transformMouse(this$static.plat.graphics, x_0, y_0);
    id_0 = nevent.changedTouches[t].identifier || 0;
    touches[t] = new Touch$Event(time, xy.x_0, xy.y_0, kind, id_0);
  }
  return touches;
}

function HtmlInput(hplat, root){
  this.mouseEvents = ($clinit_AbstractSignal() , new Signal);
  this.touchEvents = new Signal;
  this.keyboardEvents = new Signal;
  this.lastMousePt = new Point;
  this.plat = hplat;
  this.rootElement = root;
  capturePageEvent('keydown', new HtmlInput$1(this));
  capturePageEvent('keypress', new HtmlInput$2(this));
  capturePageEvent('keyup', new HtmlInput$3(this));
  new HtmlInput$EventCloseHandler($doc, 'contextmenu', new HtmlInput$4, false);
  new HtmlInput$EventCloseHandler(this.rootElement, 'mousedown', new HtmlInput$5(this, this), true);
  capturePageEvent('mouseup', new HtmlInput$6(this, this));
  capturePageEvent('mousemove', new HtmlInput$7(this));
  new HtmlInput$EventCloseHandler(this.rootElement, 'mousemove', new HtmlInput$8(this), true);
  new HtmlInput$EventCloseHandler(this.rootElement, getMouseWheelEvent(), new HtmlInput$9(this), true);
  new HtmlInput$EventCloseHandler(this.rootElement, 'touchstart', new HtmlInput$10(this), true);
  capturePageEvent('touchmove', new HtmlInput$11(this));
  capturePageEvent('touchend', new HtmlInput$12(this));
}

function capturePageEvent(name_0, handler){
  return new HtmlInput$EventCloseHandler($doc, name_0, handler, true);
}

function getMouseButton(evt){
  switch ($eventGetButton(evt)) {
    case 1:
      return $clinit_Mouse$ButtonEvent$Id() , LEFT_0;
    case 4:
      return $clinit_Mouse$ButtonEvent$Id() , MIDDLE_0;
    case 2:
      return $clinit_Mouse$ButtonEvent$Id() , RIGHT_0;
    default:return null;
  }
}

function getMouseWheelEvent(){
  if (navigator.userAgent.toLowerCase().indexOf('firefox') != -1) {
    return 'DOMMouseScroll';
  }
   else {
    return 'mousewheel';
  }
}

function getMouseWheelVelocity(evt){
  var delta = 0;
  var agentInfo = ($clinit_HtmlPlatform() , agentInfo_0);
  if (agentInfo.isFirefox) {
    agentInfo.isMacOS?(delta = 1 * evt.detail):(delta = 1 * evt.detail / 3);
  }
   else if (agentInfo.isOpera) {
    agentInfo.isLinux?(delta = -1 * evt.wheelDelta / 80):(delta = -1 * evt.wheelDelta / 40);
  }
   else if (agentInfo.isChrome || agentInfo.isSafari || agentInfo.isIE) {
    delta = -1 * evt.wheelDelta / 120;
    Math.abs(delta) < 1 && (agentInfo.isWindows?(delta = -1 * evt.wheelDelta):agentInfo.isMacOS && (delta = -1 * evt.wheelDelta / 3));
  }
  return delta;
}

function getRelativeX(e, target){
  return (((e.clientX || 0) | 0) - $getAbsoluteLeft(target) + $getScrollLeft_0(target) + $getScrollLeft(target.ownerDocument)) / experimentalScale;
}

function getRelativeY(e, target){
  return (((e.clientY || 0) | 0) - $getAbsoluteTop(target) + ($getSubPixelScrollTop(target) | 0) + $getScrollTop(target.ownerDocument)) / experimentalScale;
}

function keyForCode(keyCode){
  switch (keyCode) {
    case 18:
      return $clinit_Key() , ALT;
    case 8:
      return $clinit_Key() , BACKSPACE;
    case 17:
      return $clinit_Key() , CONTROL;
    case 46:
      return $clinit_Key() , DELETE;
    case 40:
      return $clinit_Key() , DOWN;
    case 35:
      return $clinit_Key() , END;
    case 13:
      return $clinit_Key() , ENTER;
    case 27:
      return $clinit_Key() , ESCAPE;
    case 36:
      return $clinit_Key() , HOME;
    case 37:
      return $clinit_Key() , LEFT;
    case 34:
      return $clinit_Key() , PAGE_DOWN;
    case 33:
      return $clinit_Key() , PAGE_UP;
    case 39:
      return $clinit_Key() , RIGHT;
    case 16:
      return $clinit_Key() , SHIFT;
    case 9:
      return $clinit_Key() , TAB;
    case 38:
      return $clinit_Key() , UP;
    case 19:
      return $clinit_Key() , PAUSE;
    case 20:
      return $clinit_Key() , CAPS_LOCK;
    case 32:
      return $clinit_Key() , SPACE;
    case 45:
      return $clinit_Key() , INSERT;
    case 48:
      return $clinit_Key() , K0;
    case 49:
      return $clinit_Key() , K1;
    case 50:
      return $clinit_Key() , K2;
    case 51:
      return $clinit_Key() , K3;
    case 52:
      return $clinit_Key() , K4;
    case 53:
      return $clinit_Key() , K5;
    case 54:
      return $clinit_Key() , K6;
    case 55:
      return $clinit_Key() , K7;
    case 56:
      return $clinit_Key() , K8;
    case 57:
      return $clinit_Key() , K9;
    case 65:
      return $clinit_Key() , A;
    case 66:
      return $clinit_Key() , B;
    case 67:
      return $clinit_Key() , C;
    case 68:
      return $clinit_Key() , D;
    case 69:
      return $clinit_Key() , E_0;
    case 70:
      return $clinit_Key() , F_0;
    case 71:
      return $clinit_Key() , G;
    case 72:
      return $clinit_Key() , H;
    case 73:
      return $clinit_Key() , I;
    case 74:
      return $clinit_Key() , J;
    case 75:
      return $clinit_Key() , K;
    case 76:
      return $clinit_Key() , L;
    case 77:
      return $clinit_Key() , M;
    case 78:
      return $clinit_Key() , N;
    case 79:
      return $clinit_Key() , O;
    case 80:
      return $clinit_Key() , P;
    case 81:
      return $clinit_Key() , Q;
    case 82:
      return $clinit_Key() , R;
    case 83:
      return $clinit_Key() , S;
    case 84:
      return $clinit_Key() , T;
    case 85:
      return $clinit_Key() , U;
    case 86:
      return $clinit_Key() , V;
    case 87:
      return $clinit_Key() , W;
    case 88:
      return $clinit_Key() , X;
    case 89:
      return $clinit_Key() , Y;
    case 90:
      return $clinit_Key() , Z;
    case 92:
    case 91:
      return $clinit_Key() , WINDOWS;
    case 96:
      return $clinit_Key() , NP0;
    case 97:
      return $clinit_Key() , NP1;
    case 98:
      return $clinit_Key() , NP2;
    case 99:
      return $clinit_Key() , NP3;
    case 100:
      return $clinit_Key() , NP4;
    case 101:
      return $clinit_Key() , NP5;
    case 102:
      return $clinit_Key() , NP6;
    case 103:
      return $clinit_Key() , NP7;
    case 104:
      return $clinit_Key() , NP8;
    case 105:
      return $clinit_Key() , NP9;
    case 106:
      return $clinit_Key() , NP_MULTIPLY;
    case 107:
      return $clinit_Key() , NP_ADD;
    case 109:
      return $clinit_Key() , NP_SUBTRACT;
    case 110:
      return $clinit_Key() , NP_DECIMAL;
    case 111:
      return $clinit_Key() , NP_DIVIDE;
    case 112:
      return $clinit_Key() , F1;
    case 113:
      return $clinit_Key() , F2;
    case 114:
      return $clinit_Key() , F3;
    case 115:
      return $clinit_Key() , F4;
    case 116:
      return $clinit_Key() , F5;
    case 117:
      return $clinit_Key() , F6;
    case 118:
      return $clinit_Key() , F7;
    case 119:
      return $clinit_Key() , F8;
    case 120:
      return $clinit_Key() , F9;
    case 121:
      return $clinit_Key() , F10;
    case 122:
      return $clinit_Key() , F11;
    case 123:
      return $clinit_Key() , F12;
    case 144:
      return $clinit_Key() , NP_NUM_LOCK;
    case 145:
      return $clinit_Key() , SCROLL_LOCK;
    case 186:
      return $clinit_Key() , SEMICOLON;
    case 187:
      return $clinit_Key() , EQUALS;
    case 188:
      return $clinit_Key() , COMMA;
    case 189:
      return $clinit_Key() , MINUS;
    case 190:
      return $clinit_Key() , PERIOD;
    case 191:
      return $clinit_Key() , SLASH;
    case 192:
      return $clinit_Key() , BACKQUOTE;
    case 219:
      return $clinit_Key() , LEFT_BRACKET;
    case 220:
      return $clinit_Key() , BACKSLASH;
    case 221:
      return $clinit_Key() , RIGHT_BRACKET;
    case 222:
      return $clinit_Key() , QUOTE;
    default:return $clinit_Key() , UNKNOWN;
  }
}

defineClass(414, 413, {}, HtmlInput);
_.inDragSequence = false;
_.inTouchSequence = false;
_.isRequestingMouseLock = false;
var Lplayn_html_HtmlInput_2_classLit = createForClass('playn.html', 'HtmlInput', 414, Lplayn_core_Input_2_classLit);
function HtmlInput$1(this$0){
  this.this$01 = this$0;
}

defineClass(415, 1, {}, HtmlInput$1);
_.handleEvent = function handleEvent_1(nevent){
  var key;
  key = keyForCode($eventGetKeyCode(nevent));
  $dispatch_0(this.this$01, new Keyboard$KeyEvent(now_2(), key, true), nevent);
}
;
var Lplayn_html_HtmlInput$1_2_classLit = createForClass('playn.html', 'HtmlInput/1', 415, Ljava_lang_Object_2_classLit);
function HtmlInput$10(this$0){
  this.this$01 = this$0;
}

defineClass(424, 1, {}, HtmlInput$10);
_.handleEvent = function handleEvent_2(nevent){
  this.this$01.inTouchSequence = true;
  $dispatch_2(this.this$01, $toTouchEvents(this.this$01, ($clinit_Touch$Event$Kind() , START_0), nevent), nevent);
}
;
var Lplayn_html_HtmlInput$10_2_classLit = createForClass('playn.html', 'HtmlInput/10', 424, Ljava_lang_Object_2_classLit);
function HtmlInput$11(this$0){
  this.this$01 = this$0;
}

defineClass(425, 1, {}, HtmlInput$11);
_.handleEvent = function handleEvent_3(nevent){
  this.this$01.inTouchSequence && $dispatch_2(this.this$01, $toTouchEvents(this.this$01, ($clinit_Touch$Event$Kind() , MOVE), nevent), nevent);
}
;
var Lplayn_html_HtmlInput$11_2_classLit = createForClass('playn.html', 'HtmlInput/11', 425, Ljava_lang_Object_2_classLit);
function HtmlInput$12(this$0){
  this.this$01 = this$0;
}

defineClass(426, 1, {}, HtmlInput$12);
_.handleEvent = function handleEvent_4(nevent){
  if (this.this$01.inTouchSequence) {
    $dispatch_2(this.this$01, $toTouchEvents(this.this$01, ($clinit_Touch$Event$Kind() , END_1), nevent), nevent);
    nevent.touches.length == 0 && (this.this$01.inTouchSequence = false);
  }
}
;
var Lplayn_html_HtmlInput$12_2_classLit = createForClass('playn.html', 'HtmlInput/12', 426, Ljava_lang_Object_2_classLit);
function HtmlInput$1XYEventHandler(this$0){
  this.this$01_0 = this$0;
}

defineClass(218, 1, {});
_.handleEvent = function handleEvent_5(ev){
  var xy;
  xy = $transformMouse(this.this$01_0.plat.graphics, getRelativeX(ev, this.this$01_0.rootElement), getRelativeY(ev, this.this$01_0.rootElement));
  this.handleEvent_0(ev, xy.x_0, xy.y_0);
}
;
var Lplayn_html_HtmlInput$1XYEventHandler_2_classLit = createForClass('playn.html', 'HtmlInput/1XYEventHandler', 218, Ljava_lang_Object_2_classLit);
function HtmlInput$1MoveEventHandler(this$0){
  this.this$01 = this$0;
  HtmlInput$1XYEventHandler.call(this, this$0);
}

defineClass(287, 218, {});
_.handleEvent_0 = function handleEvent_6(ev, x_0, y_0){
  var dx, dy;
  if (this.lastX == -1) {
    this.lastX = x_0;
    this.lastY = y_0;
  }
  if (this.this$01.inDragSequence == this.wantDragSequence()) {
    if ($isMouseLocked()) {
      dx = ev.webkitMovementX;
      dy = ev.webkitMovementY;
    }
     else {
      dx = x_0 - this.lastX;
      dy = y_0 - this.lastY;
    }
    $dispatch_1(this.this$01, new Mouse$MotionEvent(now_2(), x_0, y_0, dx, dy), ev);
  }
  this.lastX = x_0;
  this.lastY = y_0;
  $set_5(this.this$01.lastMousePt, x_0, y_0);
}
;
_.lastX = -1;
_.lastY = -1;
var Lplayn_html_HtmlInput$1MoveEventHandler_2_classLit = createForClass('playn.html', 'HtmlInput/1MoveEventHandler', 287, Lplayn_html_HtmlInput$1XYEventHandler_2_classLit);
function HtmlInput$2(this$0){
  this.this$01 = this$0;
}

defineClass(416, 1, {}, HtmlInput$2);
_.handleEvent = function handleEvent_7(nevent){
  $dispatch_0(this.this$01, new Keyboard$TypedEvent(now_2(), (nevent.charCode || 0) & $intern_22), nevent);
}
;
var Lplayn_html_HtmlInput$2_2_classLit = createForClass('playn.html', 'HtmlInput/2', 416, Ljava_lang_Object_2_classLit);
function HtmlInput$3(this$0){
  this.this$01 = this$0;
}

defineClass(417, 1, {}, HtmlInput$3);
_.handleEvent = function handleEvent_8(nevent){
  var key;
  key = keyForCode($eventGetKeyCode(nevent));
  $dispatch_0(this.this$01, new Keyboard$KeyEvent(now_2(), key, false), nevent);
}
;
var Lplayn_html_HtmlInput$3_2_classLit = createForClass('playn.html', 'HtmlInput/3', 417, Ljava_lang_Object_2_classLit);
function HtmlInput$4(){
}

defineClass(418, 1, {}, HtmlInput$4);
_.handleEvent = function handleEvent_9(evt){
  $eventPreventDefault(evt);
  evt.stopPropagation();
}
;
var Lplayn_html_HtmlInput$4_2_classLit = createForClass('playn.html', 'HtmlInput/4', 418, Ljava_lang_Object_2_classLit);
function HtmlInput$5(this$0, this$0_1){
  this.this$02 = this$0_1;
  HtmlInput$1XYEventHandler.call(this, this$0);
}

defineClass(419, 218, {}, HtmlInput$5);
_.handleEvent_0 = function handleEvent_10(ev, x_0, y_0){
  var btn;
  this.this$02.inDragSequence = true;
  btn = getMouseButton(ev);
  !!btn && $dispatch_1(this.this$02, new Mouse$ButtonEvent(now_2(), x_0, y_0, btn, true), ev);
}
;
var Lplayn_html_HtmlInput$5_2_classLit = createForClass('playn.html', 'HtmlInput/5', 419, Lplayn_html_HtmlInput$1XYEventHandler_2_classLit);
function HtmlInput$6(this$0, this$0_1){
  this.this$02 = this$0_1;
  HtmlInput$1XYEventHandler.call(this, this$0);
}

defineClass(420, 218, {}, HtmlInput$6);
_.handleEvent_0 = function handleEvent_11(ev, x_0, y_0){
  var btn;
  if (this.this$02.inDragSequence) {
    this.this$02.inDragSequence = false;
    btn = getMouseButton(ev);
    !!btn && $dispatch_1(this.this$02, new Mouse$ButtonEvent(now_2(), x_0, y_0, btn, false), ev);
  }
  $handleRequestsInUserEventContext(this.this$02);
}
;
var Lplayn_html_HtmlInput$6_2_classLit = createForClass('playn.html', 'HtmlInput/6', 420, Lplayn_html_HtmlInput$1XYEventHandler_2_classLit);
function HtmlInput$7(this$0){
  HtmlInput$1MoveEventHandler.call(this, this$0);
}

defineClass(421, 287, {}, HtmlInput$7);
_.wantDragSequence = function wantDragSequence(){
  return true;
}
;
var Lplayn_html_HtmlInput$7_2_classLit = createForClass('playn.html', 'HtmlInput/7', 421, Lplayn_html_HtmlInput$1MoveEventHandler_2_classLit);
function HtmlInput$8(this$0){
  HtmlInput$1MoveEventHandler.call(this, this$0);
}

defineClass(422, 287, {}, HtmlInput$8);
_.wantDragSequence = function wantDragSequence_0(){
  return false;
}
;
var Lplayn_html_HtmlInput$8_2_classLit = createForClass('playn.html', 'HtmlInput/8', 422, Lplayn_html_HtmlInput$1MoveEventHandler_2_classLit);
function HtmlInput$9(this$0){
  this.this$01 = this$0;
}

defineClass(423, 1, {}, HtmlInput$9);
_.handleEvent = function handleEvent_12(ev){
  var vel;
  vel = getMouseWheelVelocity(ev);
  $dispatch_1(this.this$01, new Mouse$WheelEvent(now_2(), this.this$01.lastMousePt.x_0, this.this$01.lastMousePt.y_0, vel), ev);
}
;
var Lplayn_html_HtmlInput$9_2_classLit = createForClass('playn.html', 'HtmlInput/9', 423, Ljava_lang_Object_2_classLit);
function $addEventListener(closeHandler, target, name_0, handler, capture){
  var listener = function(e){
    handler.handleEvent(e);
  }
  ;
  target.addEventListener(name_0, listener, capture);
  closeHandler.setListener(listener);
}

function HtmlInput$EventCloseHandler(target, name_0, eventHandler, capture){
  $addEventListener(this, target, name_0, eventHandler, capture);
}

defineClass(103, 1, {}, HtmlInput$EventCloseHandler);
_.setListener = function setListener(listener){
}
;
var Lplayn_html_HtmlInput$EventCloseHandler_2_classLit = createForClass('playn.html', 'HtmlInput/EventCloseHandler', 103, Ljava_lang_Object_2_classLit);
defineClass(407, 406, {});
var Lplayn_html_HtmlLog_2_classLit = createForClass('playn.html', 'HtmlLog', 407, Lplayn_core_Log_2_classLit);
function HtmlLogSimple(){
  this.minLevel = ($clinit_Log$Level() , DEBUG);
}

defineClass(480, 407, {}, HtmlLogSimple);
var Lplayn_html_HtmlLogSimple_2_classLit = createForClass('playn.html', 'HtmlLogSimple', 480, Lplayn_html_HtmlLog_2_classLit);
function $clinit_HtmlPlatform(){
  var userAgent;
  $clinit_HtmlPlatform = emptyMethod;
  agentInfo_0 = (userAgent = navigator.userAgent.toLowerCase() , {isFirefox:userAgent.indexOf('firefox') != -1, isChrome:userAgent.indexOf('chrome') != -1, isSafari:userAgent.indexOf('safari') != -1, isOpera:userAgent.indexOf('opera') != -1, isIE:userAgent.indexOf('msie') != -1 || userAgent.indexOf('trident') != -1, isMacOS:userAgent.indexOf('mac') != -1, isLinux:userAgent.indexOf('linux') != -1, isWindows:userAgent.indexOf('win') != -1});
}

function $listenForVisibilityChange(plat){
  $doc.addEventListener('visibilitychange', function(){
    plat.visibilityChanged();
  }
  , false);
}

function $requestAnimationFrame(callback){
  var fn = function(){
    callback.run();
  }
  ;
  $wnd.requestAnimationFrame?$wnd.requestAnimationFrame(fn):$wnd.mozRequestAnimationFrame?$wnd.mozRequestAnimationFrame(fn):$wnd.webkitRequestAnimationFrame?$wnd.webkitRequestAnimationFrame(fn):$wnd.setTimeout(fn, 20);
}

function $scheduleBackgroundFrame(millis, callback){
  $wnd.setTimeout(function(){
    callback.run();
  }
  , millis);
}

function $tick(this$static){
  return round_int(now_2() - this$static.start_0);
}

function HtmlPlatform(config){
  $clinit_HtmlPlatform();
  var e;
  this.lifecycle = ($clinit_AbstractSignal() , new Signal);
  this.frame_0 = new Signal;
  this.errors = new Signal;
  this.start_0 = initNow();
  this.log_0 = new HtmlLogSimple;
  this.exec_0 = new Exec$Default(this);
  setUncaughtExceptionHandler(new HtmlPlatform$1(this));
  $info_0(this.log_0, 'DPR ' + devicePixelRatio_0() + ' BSPR ' + ($wnd.webkitBackingStorePixelRatio || 1));
  try {
    this.backgroundFrameMillis = 0;
    this.graphics = new HtmlGraphics(this, config);
    this.input_0 = new HtmlInput(this, this.graphics.rootElement);
    this.audio = new HtmlAudio(this);
    this.assets = new HtmlAssets(this);
    new HtmlStorage;
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 12)) {
      e = $e0;
      $error(this.log_0, 'init()', e);
      alert_0('failed to init(): ' + e.getMessage());
      throw new RuntimeException_2(e);
    }
     else 
      throw unwrap($e0);
  }
}

function devicePixelRatio_0(){
  $clinit_HtmlPlatform();
  return $wnd.devicePixelRatio || 1;
}

function initNow(){
  function now_0(){
    return +new Date;
  }

  !Date.now && (Date.now = now_0);
  return Date.now();
}

function now_2(){
  $clinit_HtmlPlatform();
  return Date.now();
}

defineClass(376, 375, {}, HtmlPlatform);
_.visibilityChanged = function visibilityChanged(){
  var isHidden;
  isHidden = $doc.hidden;
  $dispatchEvent(this, this.lifecycle, isHidden?($clinit_Platform$Lifecycle() , PAUSE_0):($clinit_Platform$Lifecycle() , RESUME));
  isHidden && this.backgroundFrameMillis > 0 && $scheduleBackgroundFrame(this.backgroundFrameMillis, new HtmlPlatform$3(this));
}
;
_.backgroundFrameMillis = 0;
_.start_0 = 0;
var agentInfo_0;
var Lplayn_html_HtmlPlatform_2_classLit = createForClass('playn.html', 'HtmlPlatform', 376, Lplayn_core_Platform_2_classLit);
function HtmlPlatform$1(this$0){
  this.this$01 = this$0;
}

defineClass(378, 1, {}, HtmlPlatform$1);
var Lplayn_html_HtmlPlatform$1_2_classLit = createForClass('playn.html', 'HtmlPlatform/1', 378, Ljava_lang_Object_2_classLit);
function HtmlPlatform$2(this$0){
  this.this$01 = this$0;
}

defineClass(379, 1, {}, HtmlPlatform$2);
_.run = function run_31(){
  $requestAnimationFrame(this);
  $emitFrame(this.this$01);
}
;
var Lplayn_html_HtmlPlatform$2_2_classLit = createForClass('playn.html', 'HtmlPlatform/2', 379, Ljava_lang_Object_2_classLit);
function HtmlPlatform$3(this$0){
  this.this$01 = this$0;
}

defineClass(380, 1, {}, HtmlPlatform$3);
_.run = function run_32(){
  if ($doc.hidden) {
    $scheduleBackgroundFrame(this.this$01.backgroundFrameMillis, this);
    $emitFrame(this.this$01);
  }
}
;
var Lplayn_html_HtmlPlatform$3_2_classLit = createForClass('playn.html', 'HtmlPlatform/3', 380, Ljava_lang_Object_2_classLit);
function HtmlPlatform$Config(){
  requestedMode();
  this.scaleFactor = devicePixelRatio_0();
  this.frameBufferPixelRatio = devicePixelRatio_0();
}

defineClass(377, 1, {}, HtmlPlatform$Config);
_.antiAliasing = true;
_.frameBufferPixelRatio = 0;
_.rootId = 'playn-root';
_.scaleFactor = 0;
var Lplayn_html_HtmlPlatform$Config_2_classLit = createForClass('playn.html', 'HtmlPlatform/Config', 377, Ljava_lang_Object_2_classLit);
function $setLoopingImpl(this$static, looping){
  this$static.impl.setLooping_0(looping);
}

function $setVolumeImpl(this$static, volume){
  this$static.impl.setVolume_0(round_int(volume * 100));
}

function HtmlSound(exec_0, sound){
  Sound.call(this, new Exec$1(exec_0));
  $addEventHandler(sound, new HtmlSound$1(this, sound));
}

defineClass(606, 605, {}, HtmlSound);
var Lplayn_html_HtmlSound_2_classLit = createForClass('playn.html', 'HtmlSound', 606, Lplayn_core_SoundImpl_2_classLit);
function $onSoundLoadStateChange(this$static, event_0){
  var loadState;
  loadState = event_0.loadState;
  switch (loadState.ordinal) {
    case 5:
    case 4:
      break;
    case 2:
    case 1:
    case 3:
      $succeed_0(this$static.this$01, this$static.val$sound2);
      break;
    case 0:
      $fail_0(this$static.this$01, new Exception(loadState.name_0 != null?loadState.name_0:'' + loadState.ordinal));
      break;
    default:throw new RuntimeException_0('Unrecognized sound load state ' + (loadState.name_0 != null?loadState.name_0:'' + loadState.ordinal));
  }
}

function HtmlSound$1(this$0, val$sound){
  this.this$01 = this$0;
  this.val$sound2 = val$sound;
}

defineClass(607, 1, {}, HtmlSound$1);
var Lplayn_html_HtmlSound$1_2_classLit = createForClass('playn.html', 'HtmlSound/1', 607, Ljava_lang_Object_2_classLit);
function HtmlStorage(){
  var storage;
  storage = (!localStorage_0 && ($clinit_Storage$StorageSupportDetector() , localStorageSupported) && (localStorage_0 = new Storage_0) , localStorage_0);
  storage?new StorageMap(storage):new HashMap;
}

defineClass(428, 1, {}, HtmlStorage);
var Lplayn_html_HtmlStorage_2_classLit = createForClass('playn.html', 'HtmlStorage', 428, Ljava_lang_Object_2_classLit);
function $fill(this$static, ctx, x_0, y_0){
  configContext(ctx, this$static.format);
  $fillText(ctx, this$static.text_0, x_0, y_0);
}

function $stroke(this$static, ctx, x_0, y_0){
  configContext(ctx, this$static.format);
  $strokeText(ctx, this$static.text_0, x_0, y_0);
}

function HtmlTextLayout(text_0, format, metrics, width_0){
  TextLayout.call(this, text_0, format, new Rectangle_0(0, 0, $adjustWidth(metrics, width_0), metrics.height_0), $intern_75 * metrics.height_0 + (metrics.height_0 - $intern_75 * metrics.height_0));
  this.metrics = metrics;
}

function configContext(ctx, format){
  var font;
  font = !format.font_0?($clinit_HtmlFont() , DEFAULT_1):format.font_0;
  $setFont(ctx, toCSS(font));
  $setTextBaseline(ctx, ($clinit_Context2d$TextBaseline() , TOP).value_0);
}

function layoutText(gfx, ctx, text_0, format){
  var metrics, width_0;
  metrics = $getFontMetrics(gfx, !format.font_0?($clinit_HtmlFont() , DEFAULT_1):format.font_0);
  configContext(ctx, format);
  width_0 = ctx.measureText(text_0).width;
  return new HtmlTextLayout(text_0, format, metrics, width_0);
}

function layoutText_0(gfx, ctx, text_0, format, wrap){
  var idx, layouts, line, line$array, line$index, line$max, metrics, words;
  metrics = $getFontMetrics(gfx, !format.font_0?($clinit_HtmlFont() , DEFAULT_1):format.font_0);
  configContext(ctx, format);
  layouts = new ArrayList;
  text_0 = $replace($replace_0(text_0, '\r\n', '\n'), 13, 10);
  for (line$array = $split(text_0, '\\n', 0) , line$index = 0 , line$max = line$array.length; line$index < line$max; ++line$index) {
    line = line$array[line$index];
    words = $split(line, '\\s', 0);
    for (idx = 0; idx < words.length;) {
      idx = measureLine(ctx, format, wrap, metrics, words, idx, layouts);
    }
  }
  return $toArray_2(layouts, initDim(Lplayn_core_TextLayout_2_classLit, $intern_1, 204, layouts.array.length, 0, 1));
}

function measureLine(ctx, format, wrap, metrics, words, idx, layouts){
  var lastIdx, line, lineWidth, nline, nlineWidth, remainder, startIdx;
  line = words[idx++];
  startIdx = idx;
  for (; idx < words.length; idx++) {
    nline = line + ' ' + words[idx];
    if (nline.length * metrics.emwidth > wrap.width_0)
      break;
    line = nline;
  }
  lineWidth = ctx.measureText(line).width;
  if (lineWidth < wrap.width_0) {
    for (; idx < words.length; idx++) {
      nline = line + ' ' + words[idx];
      nlineWidth = ctx.measureText(nline).width;
      if (nlineWidth > wrap.width_0)
        break;
      line = nline;
      lineWidth = nlineWidth;
    }
  }
  while (lineWidth > wrap.width_0 && idx > startIdx + 1) {
    line = $substring_0(line, 0, line.length - words[--idx].length - 1);
    lineWidth = ctx.measureText(line).width;
  }
  if (lineWidth > wrap.width_0) {
    remainder = new StringBuilder;
    while (lineWidth > wrap.width_0 && line.length > 1) {
      lastIdx = line.length - 1;
      $insert_0(remainder, valueOf_0(line.charCodeAt(lastIdx)));
      line = line.substr(0, lastIdx);
      lineWidth = ctx.measureText(line).width;
    }
    words[--idx] = remainder.string;
  }
  $add_0(layouts, new HtmlTextLayout(line, format, metrics, lineWidth));
  return idx;
}

defineClass(342, 204, {204:1}, HtmlTextLayout);
var Lplayn_html_HtmlTextLayout_2_classLit = createForClass('playn.html', 'HtmlTextLayout', 342, Lplayn_core_TextLayout_2_classLit);
function $clinit_HtmlUrlParameters(){
  $clinit_HtmlUrlParameters = emptyMethod;
  checkGLErrors = $equals('check', getParameter('glerrors'));
  $equals('quad', getParameter('glshader'));
}

var checkGLErrors = false;
function requestedMode(){
  var renderer;
  renderer = getParameter('renderer');
  if ($equals('canvas', renderer)) {
    return 1;
  }
   else if ($equals('gl', renderer)) {
    return 0;
  }
  return 2;
}

function $setHandler(this$static, handler){
  var _this = this$static;
  this$static.onerror = $entry(function(){
    handler.onError(_this);
  }
  );
  this$static.onload = $entry(function(){
    handler.onLoad(_this);
  }
  );
  this$static.onprogress = $entry(function(){
    handler.onProgress(_this);
  }
  );
  this$static.ontimeout = $entry(function(){
    handler.onTimeout(_this);
  }
  );
}

function $setTile(this$static, tile){
  if (this$static.tile != tile) {
    !!this$static.tile && $release(this$static.tile);
    this$static.tile = tile;
    this$static.origin != ($clinit_Layer$Origin() , FIXED_0) && $setFlag(this$static, ($clinit_Layer$Flag() , ODIRTY), true);
    !!tile && tile.config.managed && ++tile.refs;
  }
  return this$static;
}

function ImageLayer(tile){
  Layer.call(this);
  this.setTile(tile);
}

function ImageLayer_0(source){
  Layer.call(this);
  source.isLoaded()?this.setTile(source.tile_0()):$onSuccess(source.tileAsync(), new ImageLayer$1(this));
}

defineClass(134, 21, $intern_59, ImageLayer, ImageLayer_0);
_.close_0 = function close_10(){
  !!this.parent_0 && $remove_22(this.parent_0, this);
  $setState(this, ($clinit_Layer$State() , DISPOSED));
  this.setTile(null);
}
;
_.height_1 = function height_2(){
  return !this.tile?0:this.tile.displayHeight;
}
;
_.paintImpl = function paintImpl_3(surf){
  var dheight, dwidth;
  if (this.tile) {
    dwidth = this.width_1();
    dheight = this.height_1();
    $draw_0(surf, this.tile, dwidth, dheight);
  }
}
;
_.setTile = function setTile(tile){
  return $setTile(this, tile);
}
;
_.width_1 = function width_3(){
  return !this.tile?0:this.tile.displayWidth;
}
;
var Lplayn_scene_ImageLayer_2_classLit = createForClass('playn.scene', 'ImageLayer', 134, Lplayn_scene_Layer_2_classLit);
function $close_3(this$static){
  !!this$static.parent_0 && $remove_22(this$static.parent_0, this$static);
  $setState(this$static, ($clinit_Layer$State() , DISPOSED));
  $setTile_0(this$static, null);
  !!this$static.canvas && (this$static.canvas = null);
}

function $end_1(this$static){
  var image, tex;
  tex = this$static.tile;
  image = this$static.canvas.image;
  !!tex && tex.pixelWidth == image.pixelWidth && tex.pixelHeight == image.pixelHeight?$update_6(tex, image):$setTile(this$static, $createTexture_0(this$static.canvas.image, ($clinit_Texture$Config() , DEFAULT_0)));
}

function $setTile_0(this$static, tile){
  if (!tile || !!tile)
    return $setTile(this$static, tile);
  else 
    throw new UnsupportedOperationException;
}

function CanvasLayer(gfx, width_0, height){
  Layer.call(this);
  this.gfx = gfx;
  this.canvas = $createCanvas(this.gfx, width_0, height);
}

defineClass(725, 134, $intern_59, CanvasLayer);
_.close_0 = function close_11(){
  $close_3(this);
}
;
_.height_1 = function height_3(){
  return this.canvas.height_0;
}
;
_.setTile = function setTile_0(tile){
  return $setTile_0(this, tile);
}
;
_.width_1 = function width_4(){
  return this.canvas.width_0;
}
;
var Lplayn_scene_CanvasLayer_2_classLit = createForClass('playn.scene', 'CanvasLayer', 725, Lplayn_scene_ImageLayer_2_classLit);
function $setSize_0(this$static, width_0, height){
  this$static.width_0 = width_0;
  this$static.height_0 = height;
  this$static.origin != ($clinit_Layer$Origin() , FIXED_0) && $setFlag(this$static, ($clinit_Layer$Flag() , ODIRTY), true);
  return this$static;
}

function ClippedLayer(width_0, height){
  Layer.call(this);
  this.pos = new Point;
  this.size_0 = new Vector;
  this.width_0 = width_0;
  this.height_0 = height;
}

defineClass(289, 21, $intern_59);
_.disableClip_0 = function disableClip(){
  return false;
}
;
_.height_1 = function height_4(){
  return this.height_0;
}
;
_.paintImpl = function paintImpl_4(surf){
  var nonEmpty, originX, originY, tx, r;
  if (this.disableClip_0())
    this.paintClipped(surf);
  else {
    tx = surf.lastTrans;
    originX = $originX(this);
    originY = $originY(this);
    tx.tx += tx.m00 * originX + tx.m10 * originY;
    tx.ty += tx.m11 * originY + tx.m01 * originX;
    $transform_1(tx, $set_5(this.pos, -originX, -originY), this.pos);
    $transform_2(tx, $set_7(this.size_0, this.width_0, this.height_0), this.size_0);
    tx.tx += tx.m00 * -originX + tx.m10 * -originY;
    tx.ty += tx.m11 * -originY + tx.m01 * -originX;
    nonEmpty = $startClipped(surf, round_int(this.pos.x_0), round_int(this.pos.y_0), round_0(abs_0(this.size_0.x_0)), round_0(abs_0(this.size_0.y_0)));
    try {
      nonEmpty && this.paintClipped(surf);
    }
     finally {
      surf.batch.flush();
      r = (--surf.scissorDepth , surf.scissorDepth == 0?null:$get(surf.scissors, surf.scissorDepth - 1));
      !r?$disable(surf.batch.gl.gl, 3089):$glScissor(surf.batch.gl, r.x_0, r.y_0, r.width_0, r.height_0);
      $checkError(surf.batch.gl);
    }
  }
}
;
_.width_1 = function width_5(){
  return this.width_0;
}
;
_.height_0 = 0;
_.width_0 = 0;
var Lplayn_scene_ClippedLayer_2_classLit = createForClass('playn.scene', 'ClippedLayer', 289, Lplayn_scene_Layer_2_classLit);
function $$init_3(this$static){
  this$static.children = new ArrayList;
  this$static.paintTx = new AffineTransform;
}

function $add_13(this$static, child){
  var count, index_0, parent_0;
  parent_0 = child.parent_0;
  if (parent_0 == this$static)
    return;
  count = this$static.children.array.length;
  count == 0 || $get(this$static.children, count - 1).depth <= child.depth?(index_0 = count):(index_0 = $findInsertion(this$static, child.depth));
  !!parent_0 && $remove_22(parent_0, child);
  $add(this$static.children, index_0, child);
  child.parent_0 = this$static;
  maskUndefined(this$static.state._value) === maskUndefined(($clinit_Layer$State() , ADDED)) && child.onAdd();
  $isSet_1(child, ($clinit_Layer$Flag() , INTERACTIVE)) && $setInteractive(this$static, true);
}

function $addAt(this$static, child, tx, ty){
  $add_13(this$static, ($setTranslation_1(child.transform, tx, ty) , child));
}

function $addCenterAt(this$static, child, tx, ty){
  $add_13(this$static, $setTranslation(child, tx - child.width_0 / 2, ty - child.height_0 / 2));
}

function $close_4(this$static){
  !!this$static.parent_0 && $remove_22(this$static.parent_0, this$static);
  $setState(this$static, ($clinit_Layer$State() , DISPOSED));
  $disposeAll(this$static);
}

function $depthChanged(this$static, child, oldDepth){
  var leftCorrect, newDepth, newIndex, oldIndex, rightCorrect;
  oldIndex = $findChild(this$static, child, oldDepth);
  newDepth = child.depth;
  leftCorrect = oldIndex == 0 || $get(this$static.children, oldIndex - 1).depth <= newDepth;
  rightCorrect = oldIndex == this$static.children.array.length - 1 || $get(this$static.children, oldIndex + 1).depth >= newDepth;
  if (leftCorrect && rightCorrect) {
    return oldIndex;
  }
  this$static.children.remove_0(oldIndex);
  newIndex = $findInsertion(this$static, newDepth);
  $add(this$static.children, newIndex, child);
  return newIndex;
}

function $disposeAll(this$static){
  var child, child$index, child$max, toDispose;
  toDispose = $toArray_2(this$static.children, initDim(Lplayn_scene_Layer_2_classLit, $intern_1, 21, this$static.children.array.length, 0, 1));
  $removeAll_0(this$static);
  for (child$index = 0 , child$max = toDispose.length; child$index < child$max; ++child$index) {
    child = toDispose[child$index];
    child.close_0();
  }
}

function $findChild(this$static, child, depth){
  var c, ii, ii0, ll, startIdx;
  startIdx = $findInsertion(this$static, depth);
  for (ii0 = startIdx - 1; ii0 >= 0; ii0--) {
    c = $get(this$static.children, ii0);
    if (c == child) {
      return ii0;
    }
    if (c.depth != depth) {
      break;
    }
  }
  for (ii = startIdx , ll = this$static.children.array.length; ii < ll; ii++) {
    c = $get(this$static.children, ii);
    if (c == child) {
      return ii;
    }
    if (c.depth != depth) {
      break;
    }
  }
  return -1;
}

function $findInsertion(this$static, depth){
  var high, low, mid, midDepth;
  low = 0;
  high = this$static.children.array.length - 1;
  while (low <= high) {
    mid = low + high >>> 1;
    midDepth = $get(this$static.children, mid).depth;
    if (depth > midDepth) {
      low = mid + 1;
    }
     else if (depth < midDepth) {
      high = mid - 1;
    }
     else {
      return mid;
    }
  }
  return low;
}

function $hitTestDefault(this$static, point){
  var child, ii, l, sawInteractiveChild, x_0, y_0;
  x_0 = point.x_0;
  y_0 = point.y_0;
  sawInteractiveChild = false;
  for (ii = this$static.children.array.length - 1; ii >= 0; ii--) {
    child = $get(this$static.children, ii);
    if (!$isSet_1(child, ($clinit_Layer$Flag() , INTERACTIVE)))
      continue;
    sawInteractiveChild = true;
    if (!$isSet_1(child, VISIBLE_1))
      continue;
    try {
      $inverseTransform($transform(child), $set_5(point, x_0, y_0), point);
      point.x_0 += $originX(child);
      point.y_0 += $originY(child);
      l = !child.hitTester?child.hitTestDefault(point):child.hitTester.hitTest(child, point);
      if (l)
        return l;
    }
     catch ($e0) {
      $e0 = wrap_0($e0);
      if (instanceOf($e0, 249)) {
        continue;
      }
       else 
        throw unwrap($e0);
    }
  }
  !sawInteractiveChild && !(!!this$static.events && !!this$static.events._listeners) && $setInteractive(this$static, false);
  return point.x_0 >= 0 && point.y_0 >= 0 && point.x_0 < this$static.width_0 && point.y_0 < this$static.height_0?this$static:null;
}

function $remove_21(this$static, index_0){
  var child;
  child = this$static.children.remove_0(index_0);
  child.onRemove();
  child.parent_0 = null;
}

function $remove_22(this$static, child){
  var index_0;
  index_0 = $findChild(this$static, child, child.depth);
  if (index_0 < 0) {
    throw new UnsupportedOperationException_0('Could not remove Layer because it is not a child of the GroupLayer [group=' + this$static + ', layer=' + child + ']');
  }
  $remove_21(this$static, index_0);
}

function $removeAll_0(this$static){
  while (this$static.children.array.length != 0)
    $remove_21(this$static, this$static.children.array.length - 1);
}

function GroupLayer(){
  ClippedLayer.call(this, 0, 0);
  $$init_3(this);
  this.disableClip = true;
}

function GroupLayer_0(){
  ClippedLayer.call(this, 1, 1);
  $$init_3(this);
  this.disableClip = false;
}

defineClass(188, 289, $intern_59, GroupLayer, GroupLayer_0);
_.close_0 = function close_12(){
  $close_4(this);
}
;
_.deactivateOnNoListeners = function deactivateOnNoListeners_0(){
  return false;
}
;
_.disableClip_0 = function disableClip_0(){
  return this.disableClip;
}
;
_.hitTestDefault = function hitTestDefault_0(point){
  return $hitTestDefault(this, point);
}
;
_.iterator = function iterator_33(){
  return new AbstractList$IteratorImpl(this.children);
}
;
_.onAdd = function onAdd_0(){
  var ii, ll;
  $onAdd(this);
  for (ii = 0 , ll = this.children.array.length; ii < ll; ii++)
    $get(this.children, ii).onAdd();
}
;
_.onRemove = function onRemove_0(){
  var ii, ll;
  $setState(this, ($clinit_Layer$State() , REMOVED));
  for (ii = 0 , ll = this.children.array.length; ii < ll; ii++)
    $get(this.children, ii).onRemove();
}
;
_.paintClipped = function paintClipped(surf){
  var children, ii, ll;
  $set_4(this.paintTx, surf.lastTrans);
  children = this.children;
  for (ii = 0 , ll = children.array.length; ii < ll; ii++) {
    $set_4(surf.lastTrans, this.paintTx);
    $paint_1((checkElementIndex(ii, children.array.length) , children.array[ii]), surf);
  }
}
;
_.toString_1 = function toString_68(buf){
  $append_6((buf.string += 'tx=' , buf), $transform(this));
  !!this.hitTester && $append_6((buf.string += ', hitTester=' , buf), this.hitTester);
  $append_4((buf.string += ', children=' , buf), this.children.array.length);
}
;
_.disableClip = false;
var Lplayn_scene_GroupLayer_2_classLit = createForClass('playn.scene', 'GroupLayer', 188, Lplayn_scene_ClippedLayer_2_classLit);
function ImageLayer$1(this$0){
  this.this$01 = this$0;
}

defineClass(726, 953, {}, ImageLayer$1);
_.onEmit = function onEmit_50(tile){
  this.this$01.setTile(tile);
}
;
var Lplayn_scene_ImageLayer$1_2_classLit = createForClass('playn.scene', 'ImageLayer/1', 726, Lreact_Slot_2_classLit);
function $capture(this$static, mode){
  if (this$static.canceled)
    throw new IllegalStateException_0('Cannot capture canceled interaction.');
  if (this$static.capturingLayer != this$static.dispatchLayer && !!this$static.capturingLayer)
    throw new IllegalStateException_0('Interaction already captured by ' + this$static.capturingLayer);
  this$static.capturingLayer = this$static.dispatchLayer;
  this$static.captureMode = mode;
  $notifyCancel(this$static, this$static.capturingLayer, this$static.captureMode, this$static.event_0);
}

function $dispatch_3(this$static, event_0){
  var depth, target;
  if (this$static.canceled)
    return;
  screenToLayer_0(this$static.hitLayer, $set_5(this$static.local, event_0.x_0, event_0.y_0), this$static.local);
  this$static.event_0 = event_0;
  try {
    if (this$static.bubble) {
      depth = ($clinit_Interaction$Depth() , BELOW_0);
      for (target = this$static.hitLayer; target; target = target.parent_0) {
        target == this$static.capturingLayer?(depth = AT_0):depth == AT_0 && (depth = ABOVE_0);
        if (!!this$static.captureMode && depth != AT_0)
          continue;
        $dispatch_4(this$static, target);
        target == this$static.capturingLayer && (depth = AT_0);
      }
    }
     else {
      $dispatch_4(this$static, this$static.hitLayer);
    }
  }
   finally {
    this$static.event_0 = null;
  }
  $set_5(this$static.local, 0, 0);
}

function $dispatch_4(this$static, layer){
  var odispatchLayer;
  if (!(!!layer.events && !!layer.events._listeners))
    return;
  odispatchLayer = this$static.dispatchLayer;
  this$static.dispatchLayer = layer;
  try {
    $emit((!layer.events && (layer.events = new Layer$1(layer)) , layer.events), this$static);
  }
   finally {
    this$static.dispatchLayer = odispatchLayer;
  }
}

function $notifyCancel(this$static, except, exceptMode, source){
  var depth, oldEvent, target;
  oldEvent = this$static.event_0;
  this$static.event_0 = !source?new Pointer$Event(0, 0, 0, 0, ($clinit_Pointer$Event$Kind() , CANCEL), false):new Pointer$Event(0, source.time, source.x_0, source.y_0, ($clinit_Pointer$Event$Kind() , CANCEL), source.isTouch);
  try {
    if (this$static.bubble) {
      depth = ($clinit_Interaction$Depth() , BELOW_0);
      for (target = this$static.hitLayer; target; target = target.parent_0) {
        target == except?(depth = AT_0):depth == AT_0 && (depth = ABOVE_0);
        if (!!exceptMode && depth == AT_0)
          continue;
        $dispatch_4(this$static, target);
      }
    }
     else {
      this$static.hitLayer != except && $dispatch_4(this$static, this$static.hitLayer);
    }
  }
   finally {
    this$static.event_0 = oldEvent;
  }
}

defineClass(466, 1, {76:1});
_.toString$ = function toString_69(){
  return 'Interaction[bubble=' + this.bubble + ', canceled=' + this.canceled + ', capmode=' + this.captureMode + ']' + '\n event=' + this.event_0 + '\n hit=' + this.hitLayer;
}
;
_.x_1 = function x_2(){
  return this.event_0.x_0;
}
;
_.y_1 = function y_2(){
  return this.event_0.y_0;
}
;
_.bubble = false;
_.canceled = false;
var Lplayn_scene_Interaction_2_classLit = createForClass('playn.scene', 'Interaction', 466, Ljava_lang_Object_2_classLit);
function $clinit_Interaction$CaptureMode(){
  $clinit_Interaction$CaptureMode = emptyMethod;
  ONLY = new Interaction$CaptureMode$1;
  ABOVE = new Interaction$CaptureMode$2;
  BELOW = new Interaction$CaptureMode$3;
}

function Interaction$CaptureMode(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_32(){
  $clinit_Interaction$CaptureMode();
  return initValues(getClassLiteralForArray(Lplayn_scene_Interaction$CaptureMode_2_classLit, 1), $intern_1, 104, 0, [ONLY, ABOVE, BELOW]);
}

defineClass(104, 7, $intern_82);
var ABOVE, BELOW, ONLY;
var Lplayn_scene_Interaction$CaptureMode_2_classLit = createForEnum('playn.scene', 'Interaction/CaptureMode', 104, Ljava_lang_Enum_2_classLit, values_32);
function Interaction$CaptureMode$1(){
  Interaction$CaptureMode.call(this, 'ONLY', 0);
}

defineClass(470, 104, $intern_82, Interaction$CaptureMode$1);
var Lplayn_scene_Interaction$CaptureMode$1_2_classLit = createForEnum('playn.scene', 'Interaction/CaptureMode/1', 470, Lplayn_scene_Interaction$CaptureMode_2_classLit, null);
function Interaction$CaptureMode$2(){
  Interaction$CaptureMode.call(this, 'ABOVE', 1);
}

defineClass(471, 104, $intern_82, Interaction$CaptureMode$2);
var Lplayn_scene_Interaction$CaptureMode$2_2_classLit = createForEnum('playn.scene', 'Interaction/CaptureMode/2', 471, Lplayn_scene_Interaction$CaptureMode_2_classLit, null);
function Interaction$CaptureMode$3(){
  Interaction$CaptureMode.call(this, 'BELOW', 2);
}

defineClass(472, 104, $intern_82, Interaction$CaptureMode$3);
var Lplayn_scene_Interaction$CaptureMode$3_2_classLit = createForEnum('playn.scene', 'Interaction/CaptureMode/3', 472, Lplayn_scene_Interaction$CaptureMode_2_classLit, null);
function $clinit_Interaction$Depth(){
  $clinit_Interaction$Depth = emptyMethod;
  BELOW_0 = new Interaction$Depth('BELOW', 0);
  AT_0 = new Interaction$Depth('AT', 1);
  ABOVE_0 = new Interaction$Depth('ABOVE', 2);
}

function Interaction$Depth(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_33(){
  $clinit_Interaction$Depth();
  return initValues(getClassLiteralForArray(Lplayn_scene_Interaction$Depth_2_classLit, 1), $intern_1, 166, 0, [BELOW_0, AT_0, ABOVE_0]);
}

defineClass(166, 7, {3:1, 9:1, 7:1, 166:1}, Interaction$Depth);
var ABOVE_0, AT_0, BELOW_0;
var Lplayn_scene_Interaction$Depth_2_classLit = createForEnum('playn.scene', 'Interaction/Depth', 166, Ljava_lang_Enum_2_classLit, values_33);
function $clinit_Reactor(){
  $clinit_Reactor = emptyMethod;
  DISPATCHING = new Cons(null, null);
}

function $addConnection(this$static, listener){
  if (!listener)
    throw new NullPointerException_0('Null listener');
  return $addCons(this$static, new Cons(this$static, listener));
}

function $addCons(this$static, cons){
  if (this$static._listeners == DISPATCHING) {
    this$static._pendingRuns = append(this$static._pendingRuns, new Reactor$1(this$static, cons));
  }
   else {
    this$static._listeners = insert(this$static._listeners, cons);
    this$static.connectionAdded();
  }
  return cons;
}

function $disconnect(this$static, cons){
  if (this$static._listeners == DISPATCHING) {
    this$static._pendingRuns = append(this$static._pendingRuns, new Reactor$2(this$static, cons));
  }
   else {
    this$static._listeners = remove_50(this$static._listeners, cons);
    this$static.connectionRemoved();
  }
}

function $notify(this$static, notifier, a1, a2, a3){
  var cons, ex, exn, lners, run, sentinel, run_0;
  if (this$static._listeners == DISPATCHING) {
    this$static._pendingRuns = append(this$static._pendingRuns, new Reactor$4(this$static, notifier, a1, a2, a3));
    return;
  }
  lners = this$static._listeners;
  sentinel = DISPATCHING;
  this$static._listeners = sentinel;
  exn = null;
  try {
    for (cons = lners; cons; cons = cons.next) {
      try {
        notifier.notify(cons._ref._lner, a1, a2, a3);
      }
       catch ($e0) {
        $e0 = wrap_0($e0);
        if (instanceOf($e0, 10)) {
          ex = $e0;
          exn = ex;
        }
         else 
          throw unwrap($e0);
      }
      cons._oneShot && $close_7(cons);
    }
  }
   finally {
    this$static._listeners = lners;
    while (run = (run_0 = this$static._pendingRuns , !!run_0 && (this$static._pendingRuns = run_0.next) , run_0)) {
      try {
        run.run();
      }
       catch ($e1) {
        $e1 = wrap_0($e1);
        if (instanceOf($e1, 10)) {
          ex = $e1;
          exn = ex;
        }
         else 
          throw unwrap($e1);
      }
    }
  }
  if (exn)
    throw unwrap(exn);
}

function $removeConnection(this$static, listener){
  if (this$static._listeners == DISPATCHING) {
    this$static._pendingRuns = append(this$static._pendingRuns, new Reactor$3(this$static, listener));
  }
   else {
    this$static._listeners = removeAll(this$static._listeners, listener);
    this$static.connectionRemoved();
  }
}

function append(head, action){
  if (!head)
    return action;
  head.next = append(head.next, action);
  return head;
}

defineClass(954, 1, {});
_.connectionAdded = function connectionAdded(){
}
;
_.connectionRemoved = function connectionRemoved(){
}
;
var DISPATCHING;
var Lreact_Reactor_2_classLit = createForClass('react', 'Reactor', 954, Ljava_lang_Object_2_classLit);
function $clinit_AbstractSignal(){
  $clinit_AbstractSignal = emptyMethod;
  $clinit_Reactor();
  EMIT = new AbstractSignal$1;
}

function $notifyEmit(this$static, event_0){
  $notify(this$static, EMIT, event_0, null, null);
}

defineClass(964, 954, {});
_.placeholderListener = function placeholderListener(){
  return $clinit_Slots() , NOOP_0;
}
;
var EMIT;
var Lreact_AbstractSignal_2_classLit = createForClass('react', 'AbstractSignal', 964, Lreact_Reactor_2_classLit);
function $emit(this$static, event_0){
  $notify(this$static, EMIT, event_0, null, null);
}

function Signal(){
  $clinit_AbstractSignal();
}

defineClass(23, 964, {}, Signal);
var Lreact_Signal_2_classLit = createForClass('react', 'Signal', 23, Lreact_AbstractSignal_2_classLit);
function Layer$1(this$0){
  $clinit_AbstractSignal();
  this.this$01 = this$0;
}

defineClass(290, 23, {}, Layer$1);
_.connectionAdded = function connectionAdded_0(){
  $setInteractive(this.this$01, true);
}
;
_.connectionRemoved = function connectionRemoved_0(){
  !this._listeners && this.this$01.deactivateOnNoListeners() && $setInteractive(this.this$01, false);
}
;
var Lplayn_scene_Layer$1_2_classLit = createForClass('playn.scene', 'Layer/1', 290, Lreact_Signal_2_classLit);
function $clinit_Layer$Flag(){
  $clinit_Layer$Flag = emptyMethod;
  VISIBLE_1 = new Layer$Flag('VISIBLE', 0, 1);
  INTERACTIVE = new Layer$Flag('INTERACTIVE', 1, 2);
  XFDIRTY = new Layer$Flag('XFDIRTY', 2, 4);
  ODIRTY = new Layer$Flag('ODIRTY', 3, 8);
}

function Layer$Flag(enum$name, enum$ordinal, bitmask){
  Enum.call(this, enum$name, enum$ordinal);
  this.bitmask = bitmask;
}

function values_34(){
  $clinit_Layer$Flag();
  return initValues(getClassLiteralForArray(Lplayn_scene_Layer$Flag_2_classLit, 1), $intern_1, 141, 0, [VISIBLE_1, INTERACTIVE, XFDIRTY, ODIRTY]);
}

defineClass(141, 7, {3:1, 9:1, 7:1, 141:1}, Layer$Flag);
_.bitmask = 0;
var INTERACTIVE, ODIRTY, VISIBLE_1, XFDIRTY;
var Lplayn_scene_Layer$Flag_2_classLit = createForEnum('playn.scene', 'Layer/Flag', 141, Ljava_lang_Enum_2_classLit, values_34);
function $clinit_Layer$Origin(){
  $clinit_Layer$Origin = emptyMethod;
  FIXED_0 = new Layer$Origin$1;
  CENTER_0 = new Layer$Origin$2;
  UL = new Layer$Origin$3;
  UR = new Layer$Origin$4;
  LL = new Layer$Origin$5;
  LR = new Layer$Origin$6;
  TC = new Layer$Origin$7;
  BC = new Layer$Origin$8;
  LC = new Layer$Origin$9;
  RC = new Layer$Origin$10;
}

function Layer$Origin(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_35(){
  $clinit_Layer$Origin();
  return initValues(getClassLiteralForArray(Lplayn_scene_Layer$Origin_2_classLit, 1), $intern_1, 39, 0, [FIXED_0, CENTER_0, UL, UR, LL, LR, TC, BC, LC, RC]);
}

defineClass(39, 7, $intern_83);
var BC, CENTER_0, FIXED_0, LC, LL, LR, RC, TC, UL, UR;
var Lplayn_scene_Layer$Origin_2_classLit = createForEnum('playn.scene', 'Layer/Origin', 39, Ljava_lang_Enum_2_classLit, values_35);
function Layer$Origin$1(){
  Layer$Origin.call(this, 'FIXED', 0);
}

defineClass(454, 39, $intern_83, Layer$Origin$1);
var Lplayn_scene_Layer$Origin$1_2_classLit = createForEnum('playn.scene', 'Layer/Origin/1', 454, Lplayn_scene_Layer$Origin_2_classLit, null);
function Layer$Origin$10(){
  Layer$Origin.call(this, 'RC', 9);
}

defineClass(463, 39, $intern_83, Layer$Origin$10);
var Lplayn_scene_Layer$Origin$10_2_classLit = createForEnum('playn.scene', 'Layer/Origin/10', 463, Lplayn_scene_Layer$Origin_2_classLit, null);
function Layer$Origin$2(){
  Layer$Origin.call(this, 'CENTER', 1);
}

defineClass(455, 39, $intern_83, Layer$Origin$2);
var Lplayn_scene_Layer$Origin$2_2_classLit = createForEnum('playn.scene', 'Layer/Origin/2', 455, Lplayn_scene_Layer$Origin_2_classLit, null);
function Layer$Origin$3(){
  Layer$Origin.call(this, 'UL', 2);
}

defineClass(456, 39, $intern_83, Layer$Origin$3);
var Lplayn_scene_Layer$Origin$3_2_classLit = createForEnum('playn.scene', 'Layer/Origin/3', 456, Lplayn_scene_Layer$Origin_2_classLit, null);
function Layer$Origin$4(){
  Layer$Origin.call(this, 'UR', 3);
}

defineClass(457, 39, $intern_83, Layer$Origin$4);
var Lplayn_scene_Layer$Origin$4_2_classLit = createForEnum('playn.scene', 'Layer/Origin/4', 457, Lplayn_scene_Layer$Origin_2_classLit, null);
function Layer$Origin$5(){
  Layer$Origin.call(this, 'LL', 4);
}

defineClass(458, 39, $intern_83, Layer$Origin$5);
var Lplayn_scene_Layer$Origin$5_2_classLit = createForEnum('playn.scene', 'Layer/Origin/5', 458, Lplayn_scene_Layer$Origin_2_classLit, null);
function Layer$Origin$6(){
  Layer$Origin.call(this, 'LR', 5);
}

defineClass(459, 39, $intern_83, Layer$Origin$6);
var Lplayn_scene_Layer$Origin$6_2_classLit = createForEnum('playn.scene', 'Layer/Origin/6', 459, Lplayn_scene_Layer$Origin_2_classLit, null);
function Layer$Origin$7(){
  Layer$Origin.call(this, 'TC', 6);
}

defineClass(460, 39, $intern_83, Layer$Origin$7);
var Lplayn_scene_Layer$Origin$7_2_classLit = createForEnum('playn.scene', 'Layer/Origin/7', 460, Lplayn_scene_Layer$Origin_2_classLit, null);
function Layer$Origin$8(){
  Layer$Origin.call(this, 'BC', 7);
}

defineClass(461, 39, $intern_83, Layer$Origin$8);
var Lplayn_scene_Layer$Origin$8_2_classLit = createForEnum('playn.scene', 'Layer/Origin/8', 461, Lplayn_scene_Layer$Origin_2_classLit, null);
function Layer$Origin$9(){
  Layer$Origin.call(this, 'LC', 8);
}

defineClass(462, 39, $intern_83, Layer$Origin$9);
var Lplayn_scene_Layer$Origin$9_2_classLit = createForEnum('playn.scene', 'Layer/Origin/9', 462, Lplayn_scene_Layer$Origin_2_classLit, null);
function $clinit_Layer$State(){
  $clinit_Layer$State = emptyMethod;
  REMOVED = new Layer$State('REMOVED', 0);
  ADDED = new Layer$State('ADDED', 1);
  DISPOSED = new Layer$State('DISPOSED', 2);
}

function Layer$State(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_36(){
  $clinit_Layer$State();
  return initValues(getClassLiteralForArray(Lplayn_scene_Layer$State_2_classLit, 1), $intern_1, 165, 0, [REMOVED, ADDED, DISPOSED]);
}

defineClass(165, 7, {3:1, 9:1, 7:1, 165:1}, Layer$State);
var ADDED, DISPOSED, REMOVED;
var Lplayn_scene_Layer$State_2_classLit = createForEnum('playn.scene', 'Layer/State', 165, Ljava_lang_Enum_2_classLit, values_36);
function getHitLayer(root, p){
  $inverseTransform($transform(root), p, p);
  p.x_0 += $originX(root);
  p.y_0 += $originY(root);
  return !root.hitTester?$hitTestDefault(root, p):root.hitTester.hitTest(root, p);
}

function layerToParent(layer, point, into){
  $set_5(into, point.x_0, point.y_0);
  while (layer) {
    if (!layer) {
      throw new IllegalArgumentException_0('Failed to find parent, perhaps you passed parent, layer instead of layer, parent?');
    }
    into.x_0 -= $originX(layer);
    into.y_0 -= $originY(layer);
    $transform_1($transform(layer), into, into);
    layer = layer.parent_0;
  }
  return into;
}

function screenToLayer(layer, x_0, y_0){
  var into;
  into = new Point_0(x_0, y_0);
  return screenToLayer_0(layer, into, into);
}

function screenToLayer_0(layer, point, into){
  var cur, parent_0;
  parent_0 = layer.parent_0;
  cur = !parent_0?point:screenToLayer_0(parent_0, point, into);
  return $inverseTransform($transform(layer), $set_5(into, cur.x_1(), cur.y_1()), into) , into.x_0 += $originX(layer) , into.y_0 += $originY(layer) , into;
}

function $clinit_Mouse(){
  $clinit_Mouse = emptyMethod;
  cancelEvent = new Mouse$CancelEvent;
}

var cancelEvent;
function Mouse$CancelEvent(){
  Mouse$Event.call(this, 0, 0, 0);
}

defineClass(673, 195, $intern_74, Mouse$CancelEvent);
var Lplayn_scene_Mouse$CancelEvent_2_classLit = createForClass('playn.scene', 'Mouse/CancelEvent', 673, Lplayn_core_Mouse$Event_2_classLit);
defineClass(1005, 953, {});
_.onEmit = function onEmit_51(event_0){
  maskUndefined(event_0) === maskUndefined(($clinit_Mouse() , cancelEvent)) && undefined;
}
;
var Lplayn_scene_Mouse$Listener_2_classLit = createForClass('playn.scene', 'Mouse/Listener', 1005, Lreact_Slot_2_classLit);
function Pointer(plat, root){
  this.events = ($clinit_AbstractSignal() , new Signal);
  this.plat = plat;
  $hasTouch()?$addConnection(plat.input_0.touchEvents, new Pointer$1(this)):'onmousedown' in $doc.documentElement && $wnd.navigator.userAgent.match(/ipad|iphone|android/i) == null?$addConnection(plat.input_0.mouseEvents, new Pointer$2(this)):$warn_1(plat.log_0, initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, ['type', ($clinit_Platform$Type() , HTML)]));
  $addConnection(this.events, new Pointer$Dispatcher(root));
}

defineClass(465, 464, {}, Pointer);
var Lplayn_scene_Pointer_2_classLit = createForClass('playn.scene', 'Pointer', 465, Lplayn_core_Pointer_2_classLit);
function $onEmit_26(this$static, event_0){
  var hitLayer;
  if (!this$static.currentIact && event_0.kind.isStart) {
    hitLayer = getHitLayer(this$static.root, $set_5(this$static.scratch, event_0.x_0, event_0.y_0));
    !!hitLayer && (this$static.currentIact = new Pointer$Interaction(hitLayer, this$static.bubble));
  }
  !!this$static.currentIact && $dispatch_3(this$static.currentIact, event_0);
  event_0.kind.isEnd && (this$static.currentIact = null);
}

function Pointer$Dispatcher(root){
  this.scratch = new Point;
  this.root = root;
  this.bubble = true;
}

defineClass(467, 953, {}, Pointer$Dispatcher);
_.onEmit = function onEmit_52(event_0){
  $onEmit_26(this, event_0);
}
;
_.bubble = false;
var Lplayn_scene_Pointer$Dispatcher_2_classLit = createForClass('playn.scene', 'Pointer/Dispatcher', 467, Lreact_Slot_2_classLit);
function Pointer$Interaction(hitLayer, bubble){
  this.local = new Point;
  this.hitLayer = hitLayer;
  this.bubble = bubble;
}

defineClass(223, 466, {223:1, 76:1}, Pointer$Interaction);
var Lplayn_scene_Pointer$Interaction_2_classLit = createForClass('playn.scene', 'Pointer/Interaction', 223, Lplayn_scene_Interaction_2_classLit);
function RootLayer(){
  GroupLayer.call(this);
  $setState(this, ($clinit_Layer$State() , ADDED));
}

defineClass(453, 188, $intern_59, RootLayer);
var Lplayn_scene_RootLayer_2_classLit = createForClass('playn.scene', 'RootLayer', 453, Lplayn_scene_GroupLayer_2_classLit);
function $onEmit_27(this$static){
  $paintScene(this$static.this$01);
}

function SceneGame$1(this$0){
  this.this$01 = this$0;
}

defineClass(384, 953, {}, SceneGame$1);
_.onEmit = function onEmit_53(clock){
  $onEmit_27(this, clock);
}
;
var Lplayn_scene_SceneGame$1_2_classLit = createForClass('playn.scene', 'SceneGame/1', 384, Lreact_Slot_2_classLit);
function $equals_4(this$static, obj){
  var d;
  if (obj === this$static) {
    return true;
  }
  if (instanceOf(obj, 229)) {
    d = obj;
    return d.width_0 == this$static.width_0 && d.height_0 == this$static.height_0;
  }
  return false;
}

defineClass(229, 1, {229:1});
_.equals$ = function equals_36(obj){
  return $equals_4(this, obj);
}
;
_.hashCode$ = function hashCode_40(){
  return round_int(this.width_0) ^ round_int(this.height_0);
}
;
_.toString$ = function toString_70(){
  return $clinit_Dimensions() , this.width_0 + 'x' + this.height_0;
}
;
var Lpythagoras_f_AbstractDimension_2_classLit = createForClass('pythagoras.f', 'AbstractDimension', 229, Ljava_lang_Object_2_classLit);
function $mult(this$static, s, result){
  return $set_5(result, this$static.x_0 * s, this$static.y_0 * s);
}

defineClass(228, 1, {228:1, 76:1});
_.equals$ = function equals_37(obj){
  var p;
  if (obj === this) {
    return true;
  }
  if (instanceOf(obj, 228)) {
    p = obj;
    return this.x_1() == p.x_0 && this.y_1() == p.y_0;
  }
  return false;
}
;
_.hashCode$ = function hashCode_41(){
  return round_int(this.x_1()) ^ round_int(this.y_1());
}
;
_.toString$ = function toString_71(){
  return pointToString(this.x_1(), this.y_1());
}
;
var Lpythagoras_f_AbstractPoint_2_classLit = createForClass('pythagoras.f', 'AbstractPoint', 228, Ljava_lang_Object_2_classLit);
defineClass(973, 1, {});
var Lpythagoras_f_RectangularShape_2_classLit = createForClass('pythagoras.f', 'RectangularShape', 973, Ljava_lang_Object_2_classLit);
function $equals_5(this$static, obj){
  var r;
  if (obj === this$static) {
    return true;
  }
  if (instanceOf(obj, 221)) {
    r = obj;
    return r.x_0 == this$static.x_0 && r.y_0 == this$static.y_0 && r.width_0 == this$static.width_0 && r.height_0 == this$static.height_0;
  }
  return false;
}

function $size(this$static, target){
  $setSize_1(target, this$static.width_0, this$static.height_0);
  return target;
}

defineClass(221, 973, {221:1});
_.equals$ = function equals_38(obj){
  return $equals_5(this, obj);
}
;
_.hashCode$ = function hashCode_42(){
  return round_int(this.x_0) ^ round_int(this.y_0) ^ round_int(this.width_0) ^ round_int(this.height_0);
}
;
_.toString$ = function toString_72(){
  return $clinit_Dimensions() , this.width_0 + 'x' + this.height_0 + pointToString(this.x_0, this.y_0);
}
;
var Lpythagoras_f_AbstractRectangle_2_classLit = createForClass('pythagoras.f', 'AbstractRectangle', 221, Lpythagoras_f_RectangularShape_2_classLit);
defineClass(983, 1, {});
var Lpythagoras_f_AbstractTransform_2_classLit = createForClass('pythagoras.f', 'AbstractTransform', 983, Ljava_lang_Object_2_classLit);
defineClass(230, 1, $intern_84);
_.equals$ = function equals_39(obj){
  var p;
  if (obj === this) {
    return true;
  }
  if (instanceOf(obj, 230)) {
    p = obj;
    return this.x_1() == p.x_0 && this.y_1() == p.y_0;
  }
  return false;
}
;
_.hashCode$ = function hashCode_43(){
  return round_int(this.x_1()) ^ round_int(this.y_1());
}
;
_.toString$ = function toString_73(){
  return vectorToString(this.x_1(), this.y_1());
}
;
var Lpythagoras_f_AbstractVector_2_classLit = createForClass('pythagoras.f', 'AbstractVector', 230, Ljava_lang_Object_2_classLit);
function $copy(this$static){
  return new AffineTransform_0(this$static.m00, this$static.m01, this$static.m10, this$static.m11, this$static.tx, this$static.ty);
}

function $inverseTransform(this$static, p, into){
  var det, rdet, x_0, y_0;
  x_0 = p.x_0 - this$static.tx;
  y_0 = p.y_0 - this$static.ty;
  det = this$static.m00 * this$static.m11 - this$static.m01 * this$static.m10;
  if (abs_0(det) == 0) {
    throw new NoninvertibleTransformException('affine [' + toString_75(this$static.m00, TO_STRING_DECIMAL_PLACES) + ' ' + toString_75(this$static.m01, TO_STRING_DECIMAL_PLACES) + ' ' + toString_75(this$static.m10, TO_STRING_DECIMAL_PLACES) + ' ' + toString_75(this$static.m11, TO_STRING_DECIMAL_PLACES) + ' ' + new Vector_0(this$static.tx, this$static.ty) + ']');
  }
  rdet = 1 / det;
  return $set_5(into, (x_0 * this$static.m11 - y_0 * this$static.m10) * rdet, (y_0 * this$static.m00 - x_0 * this$static.m01) * rdet);
}

function $scale_2(this$static, scaleX, scaleY){
  this$static.m00 *= scaleX;
  this$static.m01 *= scaleX;
  this$static.m10 *= scaleY;
  this$static.m11 *= scaleY;
  return this$static;
}

function $set_4(this$static, other){
  return $setTransform(this$static, other.m00, other.m01, other.m10, other.m11, other.tx, other.ty);
}

function $setRotation_0(this$static, angle){
  var cosa, sina, sx, sy;
  sx = sqrt_0(this$static.m00 * this$static.m00 + this$static.m01 * this$static.m01);
  sy = sqrt_0(this$static.m10 * this$static.m10 + this$static.m11 * this$static.m11);
  sina = sin_0(angle);
  cosa = cos_0(angle);
  this$static.m00 = cosa * sx;
  this$static.m01 = sina * sx;
  this$static.m10 = -sina * sy;
  this$static.m11 = cosa * sy;
  return this$static;
}

function $setTransform(this$static, m00, m01, m10, m11, tx, ty){
  this$static.m00 = m00;
  this$static.m01 = m01;
  this$static.m10 = m10;
  this$static.m11 = m11;
  this$static.tx = tx;
  this$static.ty = ty;
  return this$static;
}

function $setTranslation_1(this$static, tx, ty){
  this$static.tx = tx;
  this$static.ty = ty;
  return this$static;
}

function $transform_1(this$static, p, into){
  var x_0, y_0;
  x_0 = p.x_0;
  y_0 = p.y_0;
  return $set_5(into, this$static.m00 * x_0 + this$static.m10 * y_0 + this$static.tx, this$static.m01 * x_0 + this$static.m11 * y_0 + this$static.ty);
}

function $transform_2(this$static, v, into){
  var x_0, y_0;
  x_0 = v.x_0;
  y_0 = v.y_0;
  return $set_7(into, this$static.m00 * x_0 + this$static.m10 * y_0, this$static.m01 * x_0 + this$static.m11 * y_0);
}

function $translate(this$static, tx, ty){
  this$static.tx += this$static.m00 * tx + this$static.m10 * ty;
  this$static.ty += this$static.m11 * ty + this$static.m01 * tx;
  return this$static;
}

function AffineTransform(){
  AffineTransform_0.call(this, 1, 0, 0, 1, 0, 0);
}

function AffineTransform_0(m00, m01, m10, m11, tx, ty){
  this.m00 = m00;
  this.m01 = m01;
  this.m10 = m10;
  this.m11 = m11;
  this.tx = tx;
  this.ty = ty;
}

defineClass(145, 983, {}, AffineTransform, AffineTransform_0);
_.toString$ = function toString_74(){
  return 'affine [' + toString_75(this.m00, TO_STRING_DECIMAL_PLACES) + ' ' + toString_75(this.m01, TO_STRING_DECIMAL_PLACES) + ' ' + toString_75(this.m10, TO_STRING_DECIMAL_PLACES) + ' ' + toString_75(this.m11, TO_STRING_DECIMAL_PLACES) + ' ' + new Vector_0(this.tx, this.ty) + ']';
}
;
_.m00 = 0;
_.m01 = 0;
_.m10 = 0;
_.m11 = 0;
_.tx = 0;
_.ty = 0;
var Lpythagoras_f_AffineTransform_2_classLit = createForClass('pythagoras.f', 'AffineTransform', 145, Lpythagoras_f_AbstractTransform_2_classLit);
function $setSize_1(this$static, width_0, height){
  this$static.width_0 = width_0;
  this$static.height_0 = height;
}

function $setSize_2(this$static, d){
  $setSize_1(this$static, d.width_0, d.height_0);
}

function Dimension(){
  Dimension_0.call(this, 0, 0);
}

function Dimension_0(width_0, height){
  this.width_0 = width_0;
  this.height_0 = height;
}

function Dimension_1(d){
  Dimension_0.call(this, d.width_0, d.height_0);
}

defineClass(16, 229, {3:1, 229:1}, Dimension, Dimension_0, Dimension_1);
_.height_0 = 0;
_.width_0 = 0;
var Lpythagoras_f_Dimension_2_classLit = createForClass('pythagoras.f', 'Dimension', 16, Lpythagoras_f_AbstractDimension_2_classLit);
function $clinit_Dimensions(){
  $clinit_Dimensions = emptyMethod;
  new Dimension_0(0, 0);
}

function clamp(v, lower, upper){
  return v < lower?lower:v > upper?upper:v;
}

function iceil(v){
  var iv;
  iv = round_int(v);
  return v <= 0 || iv == v || iv == $intern_0?iv:iv + 1;
}

function ifloor(v){
  var iv;
  iv = round_int(v);
  return v >= 0 || iv == v || iv == $intern_12?iv:iv - 1;
}

function toString_75(value_0, decimalPlaces){
  var buf, ii, ii0, ivalue;
  if (isNaN(value_0))
    return 'NaN';
  buf = new StringBuilder;
  if (value_0 >= 0)
    buf.string += '+';
  else {
    buf.string += '-';
    value_0 = -value_0;
  }
  ivalue = round_int(value_0);
  buf.string += ivalue;
  if (decimalPlaces > 0) {
    buf.string += '.';
    for (ii0 = 0; ii0 < decimalPlaces; ii0++) {
      value_0 = (value_0 - ivalue) * 10;
      ivalue = round_int(value_0);
      buf.string += ivalue;
    }
    for (ii = 0; ii < decimalPlaces - 1; ii++) {
      $charAt(buf, buf.string.length - 1) == 48 && $setLength(buf, buf.string.length - 1);
    }
  }
  return buf.string;
}

var TO_STRING_DECIMAL_PLACES = 3;
function $multLocal(this$static){
  return $set_5(this$static, this$static.x_0 * $intern_85, this$static.y_0 * $intern_85);
}

function $set_5(this$static, x_0, y_0){
  this$static.x_0 = x_0;
  this$static.y_0 = y_0;
  return this$static;
}

function $set_6(this$static, p){
  return $set_5(this$static, p.x_0, p.y_0);
}

function Point(){
}

function Point_0(x_0, y_0){
  $set_5(this, x_0, y_0);
}

defineClass(33, 228, {3:1, 228:1, 76:1}, Point, Point_0);
_.x_1 = function x_3(){
  return this.x_0;
}
;
_.y_1 = function y_3(){
  return this.y_0;
}
;
_.x_0 = 0;
_.y_0 = 0;
var Lpythagoras_f_Point_2_classLit = createForClass('pythagoras.f', 'Point', 33, Lpythagoras_f_AbstractPoint_2_classLit);
function $clinit_Points(){
  $clinit_Points = emptyMethod;
  new Point_0(0, 0);
}

function distanceSq(x1, y1, x2, y2){
  $clinit_Points();
  x2 -= x1;
  y2 -= y1;
  return x2 * x2 + y2 * y2;
}

function pointToString(x_0, y_0){
  $clinit_Points();
  return toString_75(x_0, TO_STRING_DECIMAL_PLACES) + toString_75(y_0, TO_STRING_DECIMAL_PLACES);
}

function $add_14(this$static, r){
  var x1, x2, y1, y2;
  x1 = min_0(this$static.x_0, r.x_0);
  x2 = max_1(this$static.x_0 + this$static.width_0, r.x_0 + r.width_0);
  y1 = min_0(this$static.y_0, r.y_0);
  y2 = max_1(this$static.y_0 + this$static.height_0, r.y_0 + r.height_0);
  $setBounds(this$static, x1, y1, x2 - x1, y2 - y1);
}

function $setBounds(this$static, x_0, y_0, width_0, height){
  this$static.x_0 = x_0;
  this$static.y_0 = y_0;
  this$static.height_0 = height;
  this$static.width_0 = width_0;
}

function $setLocation(this$static, x_0, y_0){
  this$static.x_0 = x_0;
  this$static.y_0 = y_0;
}

function $setLocation_0(this$static, p){
  $setLocation(this$static, p.x_0, p.y_0);
}

function $setSize_3(this$static, width_0, height){
  this$static.width_0 = width_0;
  this$static.height_0 = height;
}

function $setSize_4(this$static, d){
  $setSize_3(this$static, d.width_0, d.height_0);
}

function Rectangle(){
}

function Rectangle_0(x_0, y_0, width_0, height){
  $setBounds(this, x_0, y_0, width_0, height);
}

function Rectangle_1(r){
  $setBounds(this, r.x_0, r.y_0, r.width_0, r.height_0);
}

function Rectangle_2(p, d){
  $setBounds(this, p.x_0, p.y_0, d.width_0, d.height_0);
}

defineClass(51, 221, {3:1, 221:1}, Rectangle, Rectangle_0, Rectangle_1, Rectangle_2);
_.height_0 = 0;
_.width_0 = 0;
_.x_0 = 0;
_.y_0 = 0;
var Lpythagoras_f_Rectangle_2_classLit = createForClass('pythagoras.f', 'Rectangle', 51, Lpythagoras_f_AbstractRectangle_2_classLit);
function multiply(am00, am01, am10, am11, atx, aty, bm00, bm01, bm10, bm11, btx, bty, into){
  $setTransform(into, am00 * bm00 + am10 * bm01, am01 * bm00 + am11 * bm01, am00 * bm10 + am10 * bm11, am01 * bm10 + am11 * bm11, am00 * btx + am10 * bty + atx, am01 * btx + am11 * bty + aty);
  return into;
}

function multiply_0(a, m00, m01, m10, m11, tx, ty, into){
  return multiply(a.m00, a.m01, a.m10, a.m11, a.tx, a.ty, m00, m01, m10, m11, tx, ty, into);
}

function multiply_1(a, b, into){
  return multiply(a.m00, a.m01, a.m10, a.m11, a.tx, a.ty, b.m00, b.m01, b.m10, b.m11, b.tx, b.ty, into);
}

function $set_7(this$static, x_0, y_0){
  this$static.x_0 = x_0;
  this$static.y_0 = y_0;
  return this$static;
}

function Vector(){
}

function Vector_0(x_0, y_0){
  $set_7(this, x_0, y_0);
}

defineClass(94, 230, $intern_84, Vector, Vector_0);
_.x_1 = function x_4(){
  return this.x_0;
}
;
_.y_1 = function y_4(){
  return this.y_0;
}
;
_.x_0 = 0;
_.y_0 = 0;
var Lpythagoras_f_Vector_2_classLit = createForClass('pythagoras.f', 'Vector', 94, Lpythagoras_f_AbstractVector_2_classLit);
function $clinit_Vectors(){
  $clinit_Vectors = emptyMethod;
  new Vector_0(1, 0);
  new Vector_0(0, 1);
  new Vector_0(0, 0);
  new Vector_0($intern_86, $intern_86);
  new Vector_0($intern_77, $intern_77);
}

function vectorToString(x_0, y_0){
  $clinit_Vectors();
  return toString_75(x_0, TO_STRING_DECIMAL_PLACES) + toString_75(y_0, TO_STRING_DECIMAL_PLACES);
}

function $intersects_0(this$static, rx, ry, rw, rh){
  var x1, x2, y1, y2;
  if (this$static.width_0 <= 0 || this$static.height_0 <= 0)
    return false;
  x1 = this$static.x_0;
  y1 = this$static.y_0;
  x2 = x1 + this$static.width_0;
  y2 = y1 + this$static.height_0;
  return rx + rw > x1 && rx < x2 && ry + rh > y1 && ry < y2;
}

defineClass(253, 1, {253:1});
_.equals$ = function equals_40(obj){
  var r;
  if (obj === this) {
    return true;
  }
  if (instanceOf(obj, 253)) {
    r = obj;
    return r.x_0 == this.x_0 && r.y_0 == this.y_0 && r.width_0 == this.width_0 && r.height_0 == this.height_0;
  }
  return false;
}
;
_.hashCode$ = function hashCode_44(){
  return this.x_0 ^ this.y_0 ^ this.width_0 ^ this.height_0;
}
;
_.toString$ = function toString_76(){
  return this.width_0 + 'x' + this.height_0 + pointToString_0(this.x_0, this.y_0);
}
;
var Lpythagoras_i_AbstractRectangle_2_classLit = createForClass('pythagoras.i', 'AbstractRectangle', 253, Ljava_lang_Object_2_classLit);
function pointToString_0(x_0, y_0){
  var buf;
  buf = new StringBuilder;
  x_0 >= 0 && (buf.string += '+' , buf);
  buf.string += x_0;
  y_0 >= 0 && (buf.string += '+' , buf);
  buf.string += y_0;
  return buf.string;
}

function $setLocation_1(this$static, x_0, y_0){
  this$static.x_0 = x_0;
  this$static.y_0 = y_0;
}

function $setSize_5(this$static, width_0, height){
  this$static.width_0 = width_0;
  this$static.height_0 = height;
}

function Rectangle_3(){
}

defineClass(754, 253, {3:1, 253:1}, Rectangle_3);
_.height_0 = 0;
_.width_0 = 0;
_.x_0 = 0;
_.y_0 = 0;
var Lpythagoras_i_Rectangle_2_classLit = createForClass('pythagoras.i', 'Rectangle', 754, Lpythagoras_i_AbstractRectangle_2_classLit);
function NoninvertibleTransformException(s){
  RuntimeException_0.call(this, s);
}

defineClass(249, 10, {3:1, 18:1, 10:1, 12:1, 249:1}, NoninvertibleTransformException);
var Lpythagoras_util_NoninvertibleTransformException_2_classLit = createForClass('pythagoras.util', 'NoninvertibleTransformException', 249, Ljava_lang_RuntimeException_2_classLit);
defineClass(956, 1, {});
var Lreact_Reactor$Notifier_2_classLit = createForClass('react', 'Reactor/Notifier', 956, Ljava_lang_Object_2_classLit);
function AbstractSignal$1(){
}

defineClass(392, 956, {}, AbstractSignal$1);
_.notify = function notify(slot, event_0, _1, _2){
  slot.onEmit(event_0);
}
;
var Lreact_AbstractSignal$1_2_classLit = createForClass('react', 'AbstractSignal/1', 392, Lreact_Reactor$Notifier_2_classLit);
function $clinit_AbstractValue(){
  $clinit_AbstractValue = emptyMethod;
  $clinit_Reactor();
  CHANGE = new AbstractValue$1;
}

function $map_0(this$static, func){
  return new AbstractValue$2(func, this$static);
}

function $notifyChange(this$static, value_0, oldValue){
  $notify(this$static, CHANGE, value_0, oldValue, null);
}

function $updateAndNotify(this$static, value_0, force){
  var ovalue;
  ovalue = this$static.updateLocal(value_0);
  (force || ($clinit_Reactor() , !(maskUndefined(value_0) === maskUndefined(ovalue) || value_0 != null && equals_Ljava_lang_Object__Z__devirtual$(value_0, ovalue)))) && $notify(this$static, CHANGE, value_0, ovalue, null);
  return ovalue;
}

defineClass(978, 954, {});
_.equals$ = function equals_41(other){
  var ovalue, value_0;
  if (other == null)
    return false;
  if (getClass__Ljava_lang_Class___devirtual$(other) != this.___clazz$)
    return false;
  value_0 = this.get_3();
  ovalue = other.get_3();
  return $clinit_Reactor() , maskUndefined(value_0) === maskUndefined(ovalue) || value_0 != null && equals_Ljava_lang_Object__Z__devirtual$(value_0, ovalue);
}
;
_.hashCode$ = function hashCode_45(){
  var value_0;
  value_0 = this.get_3();
  return value_0 == null?0:hashCode__I__devirtual$(value_0);
}
;
_.placeholderListener = function placeholderListener_0(){
  return $clinit_Slots() , NOOP_0;
}
;
_.toString$ = function toString_77(){
  var cname;
  cname = $getName(this.___clazz$);
  return $substring(cname, cname.lastIndexOf('.') + 1) + '(' + this.get_3() + ')';
}
;
_.updateAndNotify = function updateAndNotify(value_0, force){
  return $updateAndNotify(this, value_0, force);
}
;
_.updateLocal = function updateLocal(value_0){
  throw new UnsupportedOperationException;
}
;
var CHANGE;
var Lreact_AbstractValue_2_classLit = createForClass('react', 'AbstractValue', 978, Lreact_Reactor_2_classLit);
function AbstractValue$1(){
}

defineClass(491, 956, {}, AbstractValue$1);
_.notify = function notify_0(lner, value_0, oldValue, ignored){
  lner.onChange(value_0, oldValue);
}
;
var Lreact_AbstractValue$1_2_classLit = createForClass('react', 'AbstractValue/1', 491, Lreact_Reactor$Notifier_2_classLit);
function $disconnect_0(this$static){
  if (this$static._conn) {
    $close_7(this$static._conn);
    this$static._conn = null;
  }
}

defineClass(979, 978, {});
_.connectionAdded = function connectionAdded_1(){
  !this._conn && (this._conn = $addConnection(this.val$outer3, new AbstractValue$2$1(this, this.val$func2)));
}
;
_.connectionRemoved = function connectionRemoved_1(){
  !!this._listeners || $disconnect_0(this);
}
;
var Lreact_MappedValue_2_classLit = createForClass('react', 'MappedValue', 979, Lreact_AbstractValue_2_classLit);
function AbstractValue$2(val$func, val$outer){
  this.val$func2 = val$func;
  this.val$outer3 = val$outer;
}

defineClass(492, 979, {}, AbstractValue$2);
_.get_3 = function get_20(){
  return $apply_2(this.val$func2, this.val$outer3.get_3());
}
;
_.toString$ = function toString_78(){
  return this.val$outer3 + '.map(' + this.val$func2 + ')';
}
;
var Lreact_AbstractValue$2_2_classLit = createForClass('react', 'AbstractValue/2', 492, Lreact_MappedValue_2_classLit);
function AbstractValue$2$1(this$1, val$func){
  this.this$11 = this$1;
  this.val$func2 = val$func;
}

defineClass(493, 1, {}, AbstractValue$2$1);
_.onChange = function onChange_7(value_0, ovalue){
  $notifyChange(this.this$11, $apply_2(this.val$func2, value_0), $apply_2(this.val$func2, ovalue));
}
;
var Lreact_AbstractValue$2$1_2_classLit = createForClass('react', 'AbstractValue/2/1', 493, Ljava_lang_Object_2_classLit);
function AbstractValue$4(val$listener){
  this.val$listener1 = val$listener;
}

defineClass(225, 1, {}, AbstractValue$4);
_.onChange = function onChange_8(newValue, oldValue){
  this.val$listener1.onEmit(newValue);
}
;
var Lreact_AbstractValue$4_2_classLit = createForClass('react', 'AbstractValue/4', 225, Ljava_lang_Object_2_classLit);
var Lreact_Closeable_2_classLit = createForInterface('react', 'Closeable');
function $add_15(this$static, c){
  !this$static._set && (this$static._set = new HashSet);
  $add_11(this$static._set, c);
  return c;
}

function $close_5(this$static){
  var c, c$iterator, e, error;
  if (this$static._set) {
    error = null;
    for (c$iterator = $iterator_0(new AbstractMap$1(this$static._set.map_0)); c$iterator.val$outerIter2.hasNext();) {
      c = $next_3(c$iterator);
      try {
        c.close_0();
      }
       catch ($e0) {
        $e0 = wrap_0($e0);
        if (instanceOf($e0, 18)) {
          e = $e0;
          !error && (error = new MultiFailureException);
          $addSuppressed(error, e);
        }
         else 
          throw unwrap($e0);
      }
    }
    this$static._set.map_0.clear_0();
    if (error)
      throw error;
  }
}

function Closeable$Set(){
}

defineClass(393, 1, $intern_72, Closeable$Set);
_.close_0 = function close_13(){
  $close_5(this);
}
;
var Lreact_Closeable$Set_2_classLit = createForClass('react', 'Closeable/Set', 393, Ljava_lang_Object_2_classLit);
function $clinit_Closeable$Util(){
  $clinit_Closeable$Util = emptyMethod;
  NOOP = new Closeable$Util$1;
}

var NOOP;
function Closeable$Util$1(){
}

defineClass(394, 1, $intern_72, Closeable$Util$1);
_.close_0 = function close_14(){
}
;
var Lreact_Closeable$Util$1_2_classLit = createForClass('react', 'Closeable/Util/1', 394, Ljava_lang_Object_2_classLit);
function $close_6(this$static){
  var ii;
  for (ii = 0; ii < this$static.val$cons1.length; ii++) {
    if (!this$static.val$cons1[ii])
      continue;
    this$static.val$cons1[ii].close_0();
    this$static.val$cons1[ii] = null;
  }
}

function Closeable$Util$2(val$cons){
  this.val$cons1 = val$cons;
}

defineClass(214, 1, $intern_72, Closeable$Util$2);
_.close_0 = function close_15(){
  $close_6(this);
}
;
var Lreact_Closeable$Util$2_2_classLit = createForClass('react', 'Closeable/Util/2', 214, Ljava_lang_Object_2_classLit);
defineClass(965, 1, $intern_72);
var Lreact_Connection_2_classLit = createForClass('react', 'Connection', 965, Ljava_lang_Object_2_classLit);
function $atPrio(this$static, priority){
  if (!this$static._owner)
    throw new IllegalStateException_0('Cannot change priority of disconnected connection.');
  $disconnect(this$static._owner, this$static);
  this$static.next = null;
  this$static._priority = priority;
  $addCons(this$static._owner, this$static);
  return this$static;
}

function $close_7(this$static){
  if (this$static._owner) {
    $defang(this$static._ref, this$static._owner.placeholderListener());
    $disconnect(this$static._owner, this$static);
    this$static._owner = null;
  }
}

function $once(this$static){
  this$static._oneShot = true;
  return this$static;
}

function Cons(owner, listener){
  this._owner = owner;
  this._ref = new Cons$StrongRef(listener);
}

function insert(head, cons){
  if (!head) {
    return cons;
  }
   else if (cons._priority > head._priority) {
    cons.next = head;
    return cons;
  }
   else {
    head.next = insert(head.next, cons);
    return head;
  }
}

function remove_50(head, cons){
  if (!head)
    return null;
  if (head == cons)
    return head.next;
  head.next = remove_50(head.next, cons);
  return head;
}

function removeAll(head, listener){
  if (!head)
    return null;
  if (head._ref._lner == listener)
    return removeAll(head.next, listener);
  head.next = removeAll(head.next, listener);
  return head;
}

defineClass(291, 965, $intern_72, Cons);
_.close_0 = function close_16(){
  $close_7(this);
}
;
_.toString$ = function toString_79(){
  return '[owner=' + this._owner + ', pri=' + this._priority + ', lner=' + this._ref._lner + ', hasNext=' + !!this.next + ', oneShot=' + this._oneShot + ']';
}
;
_._oneShot = false;
_._priority = 0;
var Lreact_Cons_2_classLit = createForClass('react', 'Cons', 291, Lreact_Connection_2_classLit);
defineClass(976, 1, {});
var Lreact_Cons$ListenerRef_2_classLit = createForClass('react', 'Cons/ListenerRef', 976, Ljava_lang_Object_2_classLit);
function $defang(this$static, noop){
  this$static._lner = noop;
}

function Cons$StrongRef(lner){
  this._lner = lner;
}

defineClass(473, 976, {}, Cons$StrongRef);
var Lreact_Cons$StrongRef_2_classLit = createForClass('react', 'Cons/StrongRef', 473, Lreact_Cons$ListenerRef_2_classLit);
function Functions$8(val$constant){
  this.val$constant1 = val$constant;
}

defineClass(885, 1, {}, Functions$8);
_.apply_1 = function apply_6(value_0){
  return this.val$constant1;
}
;
var Lreact_Functions$8_2_classLit = createForClass('react', 'Functions/8', 885, Ljava_lang_Object_2_classLit);
function MultiFailureException(){
  RuntimeException.call(this);
  this._failures = new ArrayList;
}

defineClass(608, 10, $intern_13, MultiFailureException);
_.fillInStackTrace = function fillInStackTrace_0(){
  return this;
}
;
_.getMessage = function getMessage_1(){
  var buf, failure, failure$iterator;
  buf = new StringBuilder;
  for (failure$iterator = new AbstractList$IteratorImpl(this._failures); failure$iterator.i < failure$iterator.this$01_0.size_1();) {
    failure = (checkCriticalElement(failure$iterator.i < failure$iterator.this$01_0.size_1()) , failure$iterator.this$01_0.get_0(failure$iterator.last = failure$iterator.i++));
    buf.string.length > 0 && (buf.string += ', ' , buf);
    $append_7($append_7($append_7(buf, $getName(failure.___clazz$)), ': '), failure.getMessage());
  }
  return this._failures.array.length + ' failures: ' + buf;
}
;
_.printStackTrace = function printStackTrace_0(s){
  var failure, failure$iterator;
  for (failure$iterator = new AbstractList$IteratorImpl(this._failures); failure$iterator.i < failure$iterator.this$01_0.size_1();) {
    failure = (checkCriticalElement(failure$iterator.i < failure$iterator.this$01_0.size_1()) , failure$iterator.this$01_0.get_0(failure$iterator.last = failure$iterator.i++));
    failure.printStackTrace(s);
  }
}
;
var Lreact_MultiFailureException_2_classLit = createForClass('react', 'MultiFailureException', 608, Ljava_lang_RuntimeException_2_classLit);
function RFuture$4(val$count, val$pseq){
  this.val$count1 = val$count;
  this.val$pseq2 = val$pseq;
  this._results = new ArrayList;
  this._remain = this.val$count1;
}

defineClass(487, 1, {}, RFuture$4);
_.onEmit = function onEmit_54(result){
  result.isSuccess() && $add_0(this._results, result.get_3());
  --this._remain == 0 && this.val$pseq2.succeed(this._results);
}
;
_._remain = 0;
_.val$count1 = 0;
var Lreact_RFuture$4_2_classLit = createForClass('react', 'RFuture/4', 487, Ljava_lang_Object_2_classLit);
function RFuture$5(val$slot){
  this.val$slot2 = val$slot;
}

defineClass(488, 1, {}, RFuture$5);
_.onEmit = function onEmit_55(result){
  result.isSuccess() && this.val$slot2.onEmit(result.get_3());
}
;
var Lreact_RFuture$5_2_classLit = createForClass('react', 'RFuture/5', 488, Ljava_lang_Object_2_classLit);
function RFuture$6(val$slot){
  this.val$slot2 = val$slot;
}

defineClass(489, 1, {}, RFuture$6);
_.onEmit = function onEmit_56(result){
  !result.isSuccess() && this.val$slot2.onEmit(result.getFailure());
}
;
var Lreact_RFuture$6_2_classLit = createForClass('react', 'RFuture/6', 489, Ljava_lang_Object_2_classLit);
function $apply_2(this$static, result){
  return !result?null:result.map_1(this$static.val$func2);
}

function RFuture$7(val$func){
  this.val$func2 = val$func;
}

defineClass(490, 1, {}, RFuture$7);
_.apply_1 = function apply_7(result){
  return $apply_2(this, result);
}
;
var Lreact_RFuture$7_2_classLit = createForClass('react', 'RFuture/7', 490, Ljava_lang_Object_2_classLit);
function Value(value_0){
  $clinit_AbstractValue();
  this._value = value_0;
}

defineClass(17, 978, {}, Value);
_.get_3 = function get_21(){
  return this._value;
}
;
_.updateLocal = function updateLocal_0(value_0){
  var oldValue;
  oldValue = this._value;
  this._value = value_0;
  return oldValue;
}
;
var Lreact_Value_2_classLit = createForClass('react', 'Value', 17, Lreact_AbstractValue_2_classLit);
function $updateAndNotify_0(this$static, value_0, force){
  return $updateAndNotify_1(this$static, value_0, force);
}

function $updateAndNotify_1(this$static, value_0, force){
  if (this$static._value != null)
    throw new IllegalStateException_0('Already completed');
  try {
    return $updateAndNotify(this$static, value_0, force);
  }
   finally {
    this$static._listeners = null;
  }
}

function RPromise$3(){
  $clinit_AbstractValue();
  Value.call(this, null);
}

defineClass(486, 17, {}, RPromise$3);
_.updateAndNotify = function updateAndNotify_0(value_0, force){
  return $updateAndNotify_0(this, value_0, force);
}
;
var Lreact_RPromise$3_2_classLit = createForClass('react', 'RPromise/3', 486, Lreact_Value_2_classLit);
defineClass(955, 1, {});
var Lreact_Reactor$Runs_2_classLit = createForClass('react', 'Reactor/Runs', 955, Ljava_lang_Object_2_classLit);
function Reactor$1(this$0, val$cons){
  this.this$01 = this$0;
  this.val$cons2 = val$cons;
}

defineClass(364, 955, {}, Reactor$1);
_.run = function run_33(){
  this.this$01._listeners = insert(this.this$01._listeners, this.val$cons2);
  this.this$01.connectionAdded();
}
;
var Lreact_Reactor$1_2_classLit = createForClass('react', 'Reactor/1', 364, Lreact_Reactor$Runs_2_classLit);
function Reactor$2(this$0, val$cons){
  this.this$01 = this$0;
  this.val$cons2 = val$cons;
}

defineClass(365, 955, {}, Reactor$2);
_.run = function run_34(){
  this.this$01._listeners = remove_50(this.this$01._listeners, this.val$cons2);
  this.this$01.connectionRemoved();
}
;
var Lreact_Reactor$2_2_classLit = createForClass('react', 'Reactor/2', 365, Lreact_Reactor$Runs_2_classLit);
function Reactor$3(this$0, val$listener){
  this.this$01 = this$0;
  this.val$listener2 = val$listener;
}

defineClass(366, 955, {}, Reactor$3);
_.run = function run_35(){
  this.this$01._listeners = removeAll(this.this$01._listeners, this.val$listener2);
  this.this$01.connectionRemoved();
}
;
var Lreact_Reactor$3_2_classLit = createForClass('react', 'Reactor/3', 366, Lreact_Reactor$Runs_2_classLit);
function Reactor$4(this$0, val$notifier, val$a1, val$a2, val$a3){
  this.this$01 = this$0;
  this.val$notifier2 = val$notifier;
  this.val$a13 = val$a1;
  this.val$a24 = val$a2;
  this.val$a35 = val$a3;
}

defineClass(367, 955, {}, Reactor$4);
_.run = function run_36(){
  $notify(this.this$01, this.val$notifier2, this.val$a13, this.val$a24, this.val$a35);
}
;
var Lreact_Reactor$4_2_classLit = createForClass('react', 'Reactor/4', 367, Lreact_Reactor$Runs_2_classLit);
function Signal$1(this$0){
  this.this$01 = this$0;
}

defineClass(62, 953, {}, Signal$1);
_.onEmit = function onEmit_57(value_0){
  $emit(this.this$01, value_0);
}
;
var Lreact_Signal$1_2_classLit = createForClass('react', 'Signal/1', 62, Lreact_Slot_2_classLit);
function $clinit_Slots(){
  $clinit_Slots = emptyMethod;
  NOOP_0 = new Slots$1;
}

var NOOP_0;
function Slots$1(){
}

defineClass(601, 968, {}, Slots$1);
_.onEmit_0 = function onEmit_58(){
}
;
var Lreact_Slots$1_2_classLit = createForClass('react', 'Slots/1', 601, Lreact_UnitSlot_2_classLit);
defineClass(1003, 1, {});
var Lreact_Try_2_classLit = createForClass('react', 'Try', 1003, Ljava_lang_Object_2_classLit);
function Try$Failure(cause){
  this.cause = cause;
}

defineClass(240, 1003, {}, Try$Failure);
_.get_3 = function get_22(){
  if (instanceOf(this.cause, 10)) {
    throw unwrap(this.cause);
  }
   else if (instanceOf(this.cause, 139)) {
    throw this.cause;
  }
   else {
    throw unwrap($initCause(new RuntimeException, this.cause));
  }
}
;
_.getFailure = function getFailure(){
  return this.cause;
}
;
_.isSuccess = function isSuccess(){
  return false;
}
;
_.map_1 = function map_1(func){
  return this;
}
;
_.toString$ = function toString_80(){
  return 'Failure(' + this.cause + ')';
}
;
var Lreact_Try$Failure_2_classLit = createForClass('react', 'Try/Failure', 240, Lreact_Try_2_classLit);
function Try$Success(value_0){
  this.value_0 = value_0;
}

defineClass(132, 1003, {}, Try$Success);
_.get_3 = function get_23(){
  return this.value_0;
}
;
_.getFailure = function getFailure_0(){
  throw new IllegalStateException;
}
;
_.isSuccess = function isSuccess_0(){
  return true;
}
;
_.map_1 = function map_2(func){
  var t;
  try {
    return new Try$Success(func.apply_1(this.value_0));
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 12)) {
      t = $e0;
      return new Try$Failure(t);
    }
     else 
      throw unwrap($e0);
  }
}
;
_.toString$ = function toString_81(){
  return 'Success(' + this.value_0 + ')';
}
;
var Lreact_Try$Success_2_classLit = createForClass('react', 'Try/Success', 132, Lreact_Try_2_classLit);
function UnitSignal(){
  $clinit_AbstractSignal();
}

defineClass(334, 964, {}, UnitSignal);
var Lreact_UnitSignal_2_classLit = createForClass('react', 'UnitSignal', 334, Lreact_AbstractSignal_2_classLit);
defineClass(995, 1, {});
var Ltripleplay_anim_AnimBuilder_2_classLit = createForClass('tripleplay.anim', 'AnimBuilder', 995, Ljava_lang_Object_2_classLit);
function AnimBuilder$2(val$layer){
  this.val$layer2 = val$layer;
}

defineClass(305, 1, {}, AnimBuilder$2);
_.initial = function initial_2(){
  return this.val$layer2.scaleX;
}
;
_.set_1 = function set_4(value_0){
  $setScale(this.val$layer2, value_0);
}
;
var Ltripleplay_anim_AnimBuilder$2_2_classLit = createForClass('tripleplay.anim', 'AnimBuilder/2', 305, Ljava_lang_Object_2_classLit);
function AnimBuilder$3(val$layer){
  this.val$layer2 = val$layer;
}

defineClass(306, 1, {}, AnimBuilder$3);
_.initial = function initial_3(){
  return this.val$layer2.alpha_0;
}
;
_.set_1 = function set_5(value_0){
  $setAlpha(this.val$layer2, value_0);
}
;
var Ltripleplay_anim_AnimBuilder$3_2_classLit = createForClass('tripleplay.anim', 'AnimBuilder/3', 306, Ljava_lang_Object_2_classLit);
function $clinit_Animation(){
  $clinit_Animation = emptyMethod;
  new Random;
}

function $apply_3(this$static, time){
  var remain;
  if (this$static._canceled)
    return 0;
  remain = this$static._current.apply_2(time);
  if (remain > 0)
    return remain;
  while (remain <= 0) {
    if (this$static._canceled)
      return 0;
    this$static._current = this$static._current._next;
    if (!this$static._current)
      return remain;
    this$static._current.init(time + remain);
    remain = this$static._current.apply_2(time);
  }
  return remain;
}

function $then(this$static){
  return new Animation$1(this$static, this$static);
}

function Animation(){
  this._root = this;
}

defineClass(233, 1, {});
_.init = function init_0(time){
  this._start = time;
  this._current = this;
}
;
_.toString$ = function toString_82(){
  var name_0;
  name_0 = $getName(this.___clazz$);
  name_0 = $substring(name_0, name_0.lastIndexOf('.') + 1);
  return name_0 + ':' + getHashCode(this) + ' start:' + this._start;
}
;
_._canceled = false;
_._start = 0;
var Ltripleplay_anim_Animation_2_classLit = createForClass('tripleplay.anim', 'Animation', 233, Ljava_lang_Object_2_classLit);
function $add_16(this$static, anim){
  if (this$static._added)
    throw new IllegalStateException_0('Cannot add multiple animations off the same then()');
  this$static._added = true;
  anim._root = this$static.this$01._root;
  anim._next = this$static.this$02._next;
  this$static.this$01._next = anim;
  return anim;
}

defineClass(590, 995, {});
_._added = false;
var Ltripleplay_anim_Animation$ChainBuilder_2_classLit = createForClass('tripleplay.anim', 'Animation/ChainBuilder', 590, Ltripleplay_anim_AnimBuilder_2_classLit);
function Animation$1(this$0, this$0_1){
  this.this$02 = this$0_1;
  this.this$01 = this$0;
}

defineClass(591, 590, {}, Animation$1);
var Ltripleplay_anim_Animation$1_2_classLit = createForClass('tripleplay.anim', 'Animation/1', 591, Ltripleplay_anim_Animation$ChainBuilder_2_classLit);
function Animation$2(this$0){
  this.this$01 = this$0;
}

defineClass(307, 1, {}, Animation$2);
_.toString$ = function toString_83(){
  return 'handle:' + this.this$01;
}
;
var Ltripleplay_anim_Animation$2_2_classLit = createForClass('tripleplay.anim', 'Animation/2', 307, Ljava_lang_Object_2_classLit);
function $makeComplete(this$static){
  if (!this$static._complete) {
    this$static._action.run();
    this$static._complete = true;
  }
}

function Animation$Action(action){
  $clinit_Animation();
  Animation.call(this);
  this._action = action;
}

defineClass(108, 233, {}, Animation$Action);
_.apply_2 = function apply_8(time){
  $makeComplete(this);
  return this._start - time;
}
;
_.init = function init_1(time){
  this._start = time;
  this._current = this;
  this._complete = false;
}
;
_._complete = false;
var Ltripleplay_anim_Animation$Action_2_classLit = createForClass('tripleplay.anim', 'Animation/Action', 108, Ltripleplay_anim_Animation_2_classLit);
function Animation$Delay(){
  $clinit_Animation();
  Animation.call(this);
  this._duration = 300;
}

defineClass(192, 233, {}, Animation$Delay);
_.apply_2 = function apply_9(time){
  return this._start + this._duration - time;
}
;
_._duration = 0;
var Ltripleplay_anim_Animation$Delay_2_classLit = createForClass('tripleplay.anim', 'Animation/Delay', 192, Ltripleplay_anim_Animation_2_classLit);
function $in_0(this$static, duration){
  this$static._duration = duration;
  return this$static;
}

function $using(this$static, interp){
  this$static._interp = interp;
  return this$static;
}

defineClass(589, 233, {});
_._duration = $intern_2;
var Ltripleplay_anim_Animation$Interped_2_classLit = createForClass('tripleplay.anim', 'Animation/Interped', 589, Ltripleplay_anim_Animation_2_classLit);
function $from_1(this$static, value_0){
  this$static._from = value_0;
  return this$static;
}

function $to(this$static, value_0){
  this$static._to = value_0;
  return this$static;
}

function Animation$One(target){
  $clinit_Animation();
  Animation.call(this);
  this._interp = ($clinit_Interpolator() , LINEAR);
  this._target = target;
}

defineClass(88, 589, {}, Animation$One);
_.apply_2 = function apply_10(time){
  var dt;
  dt = time - this._start;
  this._target.set_1(dt < this._duration?$apply_5(this._interp, this._from, this._to - this._from, dt, this._duration):this._to);
  return this._duration - dt;
}
;
_.init = function init_2(time){
  this._start = time;
  this._current = this;
  this._from == $intern_87 && (this._from = this._target.initial());
}
;
_.toString$ = function toString_84(){
  return $ensureNamesAreInitialized(Ltripleplay_anim_Animation$One_2_classLit) , Ltripleplay_anim_Animation$One_2_classLit.typeName + ' start:' + this._start + ' to ' + this._to;
}
;
_._from = $intern_87;
_._to = 0;
var Ltripleplay_anim_Animation$One_2_classLit = createForClass('tripleplay.anim', 'Animation/One', 88, Ltripleplay_anim_Animation$Interped_2_classLit);
function $add_17(this$static, anim){
  $add_0(this$static._accum, anim);
  return anim;
}

function $clear_2(this$static){
  this$static._anims.array = initDim(Ljava_lang_Object_2_classLit, $intern_1, 1, 0, 3, 1);
  this$static._nanims.array = initDim(Ljava_lang_Object_2_classLit, $intern_1, 1, 0, 3, 1);
  this$static._barriers.array = initDim(Ljava_lang_Object_2_classLit, $intern_1, 1, 0, 3, 1);
  this$static._accum = this$static._nanims;
}

function $onPaint(this$static, clock){
  var ii, ii0, ll, ll0, time;
  time = clock.tick;
  if (this$static._nanims.array.length != 0) {
    for (ii0 = 0 , ll0 = this$static._nanims.array.length; ii0 < ll0; ii0++) {
      $get(this$static._nanims, ii0).init(time);
    }
    $addAll_0(this$static._anims, this$static._nanims);
    this$static._nanims.array = initDim(Ljava_lang_Object_2_classLit, $intern_1, 1, 0, 3, 1);
  }
  for (ii = 0 , ll = this$static._anims.array.length; ii < ll; ii++) {
    if ($apply_3($get(this$static._anims, ii), time) <= 0) {
      this$static._anims.remove_0(ii--);
      ll -= 1;
    }
  }
  if (this$static._barriers.array.length != 0 && this$static._anims.array.length == 0 && this$static._nanims.array.length == 0 && $get(this$static._barriers, 0).nullMethod()) {
    this$static._barriers.remove_0(0);
    $addAll_0(this$static._nanims, null.nullField);
    this$static._barriers.array.length == 0 && (this$static._accum = this$static._nanims);
  }
}

function Animator(){
  this.onPaint = new Animator$1(this);
  this._anims = new ArrayList;
  this._nanims = new ArrayList;
  this._accum = this._nanims;
  this._barriers = new ArrayList;
}

defineClass(587, 995, {}, Animator);
var Ltripleplay_anim_Animator_2_classLit = createForClass('tripleplay.anim', 'Animator', 587, Ltripleplay_anim_AnimBuilder_2_classLit);
function Animator$1(this$0){
  this.this$01 = this$0;
}

defineClass(588, 953, {}, Animator$1);
_.onEmit = function onEmit_59(clock){
  $onPaint(this.this$01, clock);
}
;
var Ltripleplay_anim_Animator$1_2_classLit = createForClass('tripleplay.anim', 'Animator/1', 588, Lreact_Slot_2_classLit);
function $remove_23(this$static, entity){
  $clear_4(entity.comps, this$static.id_0);
  this$static.clear_1(entity.id_0);
}

function Component(world){
  this.id_0 = ($add_0(world._comps, this) , world._comps.array.length - 1);
}

defineClass(37, 1, $intern_88);
_.clear_1 = function clear_2(index_0){
}
;
_.toString$ = function toString_85(){
  return $getSimpleName(this.___clazz$) + '#' + this.id_0;
}
;
_.id_0 = 0;
var Ltripleplay_entity_Component_2_classLit = createForClass('tripleplay.entity', 'Component', 37, Ljava_lang_Object_2_classLit);
function $add_18(this$static, entityId, dv){
  this$static._blocks[~~(entityId / 256)][entityId % 256] += dv;
}

function $get_12(this$static, entityId){
  return this$static._blocks[~~(entityId / 256)][entityId % 256];
}

function $set_8(this$static, entityId, value_0){
  this$static._blocks[~~(entityId / 256)][entityId % 256] = value_0;
}

function Component$FScalar(world){
  Component.call(this, world);
  this._blocks = initDim(F_classLit, $intern_1, 66, 32, 0, 2);
}

defineClass(116, 37, $intern_88, Component$FScalar);
_.init_0 = function init_3(entityId){
  var blockIdx, blocks;
  blockIdx = ~~(entityId / 256);
  if (blockIdx >= this._blocks.length) {
    blocks = initDim(F_classLit, $intern_1, 66, this._blocks.length * 2, 0, 2);
    arraycopy(this._blocks, 0, blocks, 0, this._blocks.length);
    this._blocks = blocks;
  }
  this._blocks[blockIdx] == null && (this._blocks[blockIdx] = initDim(F_classLit, $intern_79, 0, 256, 7, 1));
}
;
var Ltripleplay_entity_Component$FScalar_2_classLit = createForClass('tripleplay.entity', 'Component/FScalar', 116, Ltripleplay_entity_Component_2_classLit);
function $get_13(this$static, entityId){
  var block, value_0;
  block = this$static._blocks[~~(entityId / 256)];
  value_0 = block[entityId % 256];
  return value_0;
}

function $init_0(this$static, entityId){
  var blockIdx, blocks;
  blockIdx = ~~(entityId / 256);
  if (blockIdx >= this$static._blocks.length) {
    blocks = initDim(Ljava_lang_Object_2_classLit, $intern_1, 4, this$static._blocks.length * 2, 0, 2);
    arraycopy(this$static._blocks, 0, blocks, 0, this$static._blocks.length);
    this$static._blocks = blocks;
  }
  this$static._blocks[blockIdx] == null && (this$static._blocks[blockIdx] = initDim(Ljava_lang_Object_2_classLit, $intern_1, 1, 256, 3, 1));
}

function $set_9(this$static, entityId, value_0){
  this$static._blocks[~~(entityId / 256)][entityId % 256] = value_0;
}

function Component$Generic(world){
  Component.call(this, world);
  this._blocks = initDim(Ljava_lang_Object_2_classLit, $intern_1, 4, 32, 0, 2);
}

defineClass(157, 37, $intern_88, Component$Generic);
_.clear_1 = function clear_3(entityId){
  var block, idx;
  block = this._blocks[~~(entityId / 256)];
  idx = entityId % 256;
  block[idx] = null;
}
;
_.init_0 = function init_4(entityId){
  $init_0(this, entityId);
}
;
var Ltripleplay_entity_Component$Generic_2_classLit = createForClass('tripleplay.entity', 'Component/Generic', 157, Ltripleplay_entity_Component_2_classLit);
function $add_19(this$static, entityId, dv){
  this$static._blocks[~~(entityId / 256)][entityId % 256] += dv;
}

function $get_14(this$static, entityId){
  return this$static._blocks[~~(entityId / 256)][entityId % 256];
}

function $set_10(this$static, entityId, value_0){
  this$static._blocks[~~(entityId / 256)][entityId % 256] = value_0;
}

function Component$IScalar(world){
  Component.call(this, world);
  this._blocks = initDim(I_classLit, $intern_1, 47, 32, 0, 2);
}

defineClass(92, 37, $intern_88, Component$IScalar);
_.init_0 = function init_5(entityId){
  var blockIdx, blocks;
  blockIdx = ~~(entityId / 256);
  if (blockIdx >= this._blocks.length) {
    blocks = initDim(I_classLit, $intern_1, 47, this._blocks.length * 2, 0, 2);
    arraycopy(this._blocks, 0, blocks, 0, this._blocks.length);
    this._blocks = blocks;
  }
  this._blocks[blockIdx] == null && (this._blocks[blockIdx] = initDim(I_classLit, $intern_37, 0, 256, 7, 1));
}
;
var Ltripleplay_entity_Component$IScalar_2_classLit = createForClass('tripleplay.entity', 'Component/IScalar', 92, Ltripleplay_entity_Component_2_classLit);
function $get_15(this$static, entityId, into){
  var block, idx;
  block = this$static._blocks[~~(entityId / 256)];
  idx = 2 * (entityId % 256);
  into.x_0 = block[idx];
  into.y_0 = block[idx + 1];
  return into;
}

function $getX(this$static, entityId){
  return this$static._blocks[~~(entityId / 256)][2 * (entityId % 256)];
}

function $setX(this$static, entityId, x_0){
  this$static._blocks[~~(entityId / 256)][2 * (entityId % 256)] = x_0;
}

function $setY(this$static, entityId, y_0){
  this$static._blocks[~~(entityId / 256)][2 * (entityId % 256) + 1] = y_0;
}

function Component$XY(world){
  Component.call(this, world);
  this._blocks = initDim(F_classLit, $intern_1, 66, 32, 0, 2);
}

defineClass(789, 37, $intern_88, Component$XY);
_.init_0 = function init_6(entityId){
  var blockIdx, blocks;
  blockIdx = ~~(entityId / 256);
  if (blockIdx >= this._blocks.length) {
    blocks = initDim(F_classLit, $intern_1, 66, this._blocks.length * 2, 0, 2);
    arraycopy(this._blocks, 0, blocks, 0, this._blocks.length);
    this._blocks = blocks;
  }
  this._blocks[blockIdx] == null && (this._blocks[blockIdx] = initDim(F_classLit, $intern_79, 0, 512, 7, 1));
}
;
var Ltripleplay_entity_Component$XY_2_classLit = createForClass('tripleplay.entity', 'Component/XY', 789, Ltripleplay_entity_Component_2_classLit);
function $add_20(this$static, comp){
  $checkDisposed(this$static, 'Cannot add components to disposed entity.');
  $set_12(this$static.comps, comp.id_0);
  $init_0(comp, this$static.id_0);
  $queueChange(this$static);
  return this$static;
}

function $add_21(this$static, c1, c2, rest){
  var cn, cn$index, cn$max;
  $checkDisposed(this$static, 'Cannot add components to disposed entity.');
  $set_12(this$static.comps, c1.id_0);
  c1.init_0(this$static.id_0);
  $set_12(this$static.comps, c2.id_0);
  c2.init_0(this$static.id_0);
  for (cn$index = 0 , cn$max = rest.length; cn$index < cn$max; ++cn$index) {
    cn = rest[cn$index];
    $set_12(this$static.comps, cn.id_0);
    cn.init_0(this$static.id_0);
  }
  $queueChange(this$static);
  return this$static;
}

function $checkDisposed(this$static, error){
  if ((this$static._flags & 2) != 0)
    throw new IllegalStateException_0(error);
}

function $dispose(this$static){
  if ((this$static._flags & 2) == 0) {
    this$static._flags |= 2;
    $add_29(this$static.world.toRemove, this$static);
  }
}

function $has(this$static, comp){
  return $isSet_2(this$static.comps, comp.id_0);
}

function $queueChange(this$static){
  if ((this$static._flags & 5) == 0)
    return;
  if ((this$static._flags & 8) != 0)
    return;
  this$static._flags |= 8;
  $add_29(this$static.world.toChange, this$static);
}

function $remove_24(this$static, comp){
  $checkDisposed(this$static, 'Cannot remove components from disposed entity.');
  $clear_4(this$static.comps, comp.id_0);
  $queueChange(this$static);
  return this$static;
}

function $setEnabled_1(this$static, enabled){
  var isEnabled;
  $checkDisposed(this$static, 'Cannot modify disposed entity.');
  isEnabled = (this$static._flags & 1) != 0;
  if (isEnabled && !enabled) {
    this$static._flags &= -2;
    $add_29(this$static.world.toRemove, this$static);
  }
   else if (!isEnabled && enabled) {
    this$static._flags |= 1;
    $add_29(this$static.world.toAdd, this$static);
  }
}

function Entity_0(world, id_0){
  this.systems = new BitVec;
  this.comps = new BitVec;
  this.world = world;
  this.id_0 = id_0;
}

defineClass(199, 1, {15:1, 14:1, 199:1}, Entity_0);
_.close_0 = function close_17(){
  $dispose(this);
}
;
_.toString$ = function toString_86(){
  return '[id=' + this.id_0 + ', sys=' + this.systems + ', comps=' + this.comps + ', flags=' + toUnsignedRadixString(this._flags, 2) + ']';
}
;
_._flags = 0;
_.id_0 = 0;
var Ltripleplay_entity_Entity_2_classLit = createForClass('tripleplay.entity', 'Entity', 199, Ljava_lang_Object_2_classLit);
function $add_22(this$static, elem){
  this$static._size == this$static._elems.length && $expand(this$static, ~~(this$static._elems.length * 3 / 2) + 1);
  this$static._elems[this$static._size++] = elem;
  return this$static._size;
}

function $expand(this$static, capacity){
  var elems;
  elems = initDim(I_classLit, $intern_37, 0, capacity, 7, 1);
  arraycopy(this$static._elems, 0, elems, 0, this$static._elems.length);
  this$static._elems = elems;
}

function $get_16(this$static, index_0){
  return this$static._elems[index_0];
}

function $remove_25(this$static, elem){
  var ee, ii, ll;
  for (ii = 0 , ll = this$static._size; ii < ll; ii++) {
    ee = this$static._elems[ii];
    if (ee == elem) {
      this$static._elems[ii] = this$static._elems[--this$static._size];
      return ii;
    }
  }
  return -1;
}

function $removeLast(this$static){
  return this$static._elems[--this$static._size];
}

function IntBag(){
  this._elems = initDim(I_classLit, $intern_37, 0, 16, 7, 1);
}

defineClass(205, 1, {}, IntBag);
_.toString$ = function toString_87(){
  var buf, ii, ll;
  buf = new StringBuilder_1('{');
  for (ii = 0 , ll = this._size; ii < ll; ii++) {
    ii > 0 && (buf.string += ',' , buf);
    $append_4(buf, this._elems[ii]);
  }
  return (buf.string += '}' , buf).string;
}
;
_._size = 0;
var Ltripleplay_entity_IntBag_2_classLit = createForClass('tripleplay.entity', 'IntBag', 205, Ljava_lang_Object_2_classLit);
function World$1(this$0){
  this.this$01 = this$0;
}

defineClass(740, 953, {}, World$1);
_.onEmit = function onEmit_60(clk){
  $update(this.this$01, clk);
}
;
var Ltripleplay_entity_World$1_2_classLit = createForClass('tripleplay.entity', 'World/1', 740, Lreact_Slot_2_classLit);
function $onEmit_28(this$static){
  $paint(this$static.this$01);
}

function World$2(this$0){
  this.this$01 = this$0;
}

defineClass(741, 953, {}, World$2);
_.onEmit = function onEmit_61(clk){
  $onEmit_28(this, clk);
}
;
var Ltripleplay_entity_World$2_2_classLit = createForClass('tripleplay.entity', 'World/2', 741, Lreact_Slot_2_classLit);
function $findNext_0(this$static, idx){
  var e;
  while (idx < this$static.this$01._entities.length) {
    e = this$static.this$01._entities[idx];
    if (!!e && (e._flags & 2) == 0)
      return idx;
    ++idx;
  }
  return -1;
}

function $next_6(this$static){
  var next;
  next = this$static.this$01._entities[this$static._nextIdx];
  this$static._nextIdx = $findNext_0(this$static, this$static._nextIdx + 1);
  return next;
}

function World$3(this$0){
  this.this$01 = this$0;
  this._nextIdx = $findNext_0(this, 0);
}

defineClass(252, 1, {}, World$3);
_.hasNext = function hasNext_24(){
  return this._nextIdx >= 0;
}
;
_.next_0 = function next_25(){
  return $next_6(this);
}
;
_.remove_1 = function remove_51(){
  throw new UnsupportedOperationException;
}
;
_._nextIdx = 0;
var Ltripleplay_entity_World$3_2_classLit = createForClass('tripleplay.entity', 'World/3', 252, Ljava_lang_Object_2_classLit);
function $clinit_Log(){
  $clinit_Log = emptyMethod;
  log_1 = new Logger('tpgame');
}

var log_1;
function $clinit_ScreenStack(){
  $clinit_ScreenStack = emptyMethod;
  NOOP_1 = new ScreenStack$1;
}

function $add_23(this$static, screen_0){
  var e;
  if ($indexOf_0(this$static._screens, screen_0, 0) != -1) {
    throw new IllegalArgumentException_0('Cannot add screen to stack twice.');
  }
  $add(this$static._screens, 0, screen_0);
  try {
    screen_0.wasAdded();
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 10)) {
      e = $e0;
      $warning(($clinit_Log() , log_1), 'Screen choked', initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [e]));
    }
     else 
      throw unwrap($e0);
  }
}

function $addAndShow(this$static, screen_0){
  $add_23(this$static, screen_0);
  $justShow(this$static, screen_0);
}

function $hide(this$static, screen_0){
  var e;
  $remove_22(this$static._rootLayer, screen_0.layer);
  try {
    screen_0.wasHidden();
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 10)) {
      e = $e0;
      $warning(($clinit_Log() , log_1), 'Screen choked', initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [e]));
    }
     else 
      throw unwrap($e0);
  }
}

function $justRemove(this$static, screen_0){
  var removed;
  removed = $remove_0(this$static._screens, screen_0);
  return removed;
}

function $justShow(this$static, screen_0){
  var e;
  $add_13(this$static._rootLayer, $setTranslation(screen_0.layer, this$static.originX, this$static.originY));
  try {
    screen_0.wasShown();
  }
   catch ($e0) {
    $e0 = wrap_0($e0);
    if (instanceOf($e0, 10)) {
      e = $e0;
      $warning(($clinit_Log() , log_1), 'Screen choked', initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, [e]));
    }
     else 
      throw unwrap($e0);
  }
}

function $push_0(this$static, screen_0, trans){
  var otop;
  if (this$static._screens.array.length == 0) {
    $add_23(this$static, screen_0);
    $justShow(this$static, screen_0);
  }
   else {
    otop = this$static._screens.array.length == 0?null:$get(this$static._screens, 0);
    $transition(this$static, new ScreenStack$2(this$static, this$static, otop, screen_0, trans, otop));
  }
}

function $remove_26(this$static, screen_0, trans){
  var otop;
  if ((this$static._screens.array.length == 0?null:$get(this$static._screens, 0)) != screen_0)
    return $justRemove(this$static, screen_0);
  if (this$static._screens.array.length > 1) {
    otop = this$static._screens.remove_0(0);
    $transition(this$static, new ScreenStack$5(this$static, this$static, otop, this$static._screens.array.length == 0?null:$get(this$static._screens, 0), trans, otop));
  }
   else {
    $hide(this$static, screen_0);
    $justRemove(this$static, screen_0);
  }
  return true;
}

function $replace_1(this$static, screen_0, trans){
  var otop;
  if (this$static._screens.array.length == 0) {
    $add_23(this$static, screen_0);
    $justShow(this$static, screen_0);
  }
   else {
    otop = this$static._screens.remove_0(0);
    $transition(this$static, new ScreenStack$4(this$static, this$static, otop, screen_0, trans, otop));
  }
}

function $transition(this$static, transitor){
  !!this$static._transitor && $complete(this$static._transitor);
  this$static._transitor = transitor;
  $init_1(this$static._transitor);
}

function ScreenStack(game, rootLayer){
  $clinit_ScreenStack();
  this._screens = new ArrayList;
  this._game = game;
  this._rootLayer = rootLayer;
}

defineClass(445, 1, {}, ScreenStack);
_.originX = 0;
_.originY = 0;
var NOOP_1;
var Ltripleplay_game_ScreenStack_2_classLit = createForClass('tripleplay.game', 'ScreenStack', 445, Ljava_lang_Object_2_classLit);
defineClass(974, 1, {});
_.complete_0 = function complete(oscreen, nscreen){
}
;
_.init_1 = function init_7(plat, oscreen, nscreen){
}
;
var Ltripleplay_game_ScreenStack$Transition_2_classLit = createForClass('tripleplay.game', 'ScreenStack/Transition', 974, Ljava_lang_Object_2_classLit);
function ScreenStack$1(){
}

defineClass(449, 974, {}, ScreenStack$1);
_.update_3 = function update_25(oscreen, nscreen, elapsed){
  return true;
}
;
var Ltripleplay_game_ScreenStack$1_2_classLit = createForClass('tripleplay.game', 'ScreenStack/1', 449, Ltripleplay_game_ScreenStack$Transition_2_classLit);
function $complete(this$static){
  this$static.this$01_0._transitor = null;
  this$static._onPaint.close_0();
  this$static._trans.complete_0(this$static._oscreen, this$static._nscreen);
  $setTranslation(this$static._nscreen.layer, this$static.this$01_0.originX, this$static.this$01_0.originY);
  this$static._nscreen.showTransitionCompleted();
  this$static.onComplete_0();
}

function $init_1(this$static){
  this$static.showNewScreen();
  this$static._trans.init_1(this$static.this$01_0._game.plat, this$static._oscreen, this$static._nscreen);
  this$static._trans == ($clinit_ScreenStack() , NOOP_1)?(this$static.this$01_0._transitor = null , this$static._onPaint.close_0() , this$static._trans.complete_0(this$static._oscreen, this$static._nscreen) , $setTranslation(this$static._nscreen.layer, this$static.this$01_0.originX, this$static.this$01_0.originY) , this$static._nscreen.showTransitionCompleted() , this$static.onComplete_0()):(this$static._onPaint = $addConnection(this$static.this$01_0._game.paint, new ScreenStack$Transitor$1(this$static)));
}

function $paint_2(this$static, clock){
  if (this$static._skipFrames > 0)
    this$static._skipFrames -= 1;
  else {
    this$static._elapsed += clock.dt;
    this$static._trans.update_3(this$static._oscreen, this$static._nscreen, this$static._elapsed) && (this$static.this$01_0._transitor = null , this$static._onPaint.close_0() , this$static._trans.complete_0(this$static._oscreen, this$static._nscreen) , $setTranslation(this$static._nscreen.layer, this$static.this$01_0.originX, this$static.this$01_0.originY) , this$static._nscreen.showTransitionCompleted() , this$static.onComplete_0());
  }
}

function ScreenStack$Transitor(this$0, oscreen, nscreen, trans){
  this.this$01_0 = this$0;
  this._onPaint = ($clinit_Closeable$Util() , NOOP);
  this._oscreen = oscreen;
  this._nscreen = nscreen;
  this._trans = trans;
}

defineClass(222, 1, {});
_.onComplete_0 = function onComplete(){
}
;
_.showNewScreen = function showNewScreen(){
  $addAndShow(this.this$01_0, this._nscreen);
}
;
_._elapsed = 0;
_._skipFrames = 0;
var Ltripleplay_game_ScreenStack$Transitor_2_classLit = createForClass('tripleplay.game', 'ScreenStack/Transitor', 222, Ljava_lang_Object_2_classLit);
function ScreenStack$2(this$0, this$0_1, $anonymous0, $anonymous1, $anonymous2, val$otop){
  this.this$02 = this$0_1;
  this.val$otop6 = val$otop;
  ScreenStack$Transitor.call(this, this$0, $anonymous0, $anonymous1, $anonymous2);
}

defineClass(450, 222, {}, ScreenStack$2);
_.onComplete_0 = function onComplete_0(){
  $hide(this.this$02, this.val$otop6);
}
;
var Ltripleplay_game_ScreenStack$2_2_classLit = createForClass('tripleplay.game', 'ScreenStack/2', 450, Ltripleplay_game_ScreenStack$Transitor_2_classLit);
function ScreenStack$4(this$0, this$0_1, $anonymous0, $anonymous1, $anonymous2, val$otop){
  this.this$02 = this$0_1;
  this.val$otop6 = val$otop;
  ScreenStack$Transitor.call(this, this$0, $anonymous0, $anonymous1, $anonymous2);
}

defineClass(451, 222, {}, ScreenStack$4);
_.onComplete_0 = function onComplete_1(){
  $hide(this.this$02, this.val$otop6);
}
;
var Ltripleplay_game_ScreenStack$4_2_classLit = createForClass('tripleplay.game', 'ScreenStack/4', 451, Ltripleplay_game_ScreenStack$Transitor_2_classLit);
defineClass(447, 222, {});
_.showNewScreen = function showNewScreen_0(){
  $justShow(this.this$01, this._nscreen);
}
;
var Ltripleplay_game_ScreenStack$Untransitor_2_classLit = createForClass('tripleplay.game', 'ScreenStack/Untransitor', 447, Ltripleplay_game_ScreenStack$Transitor_2_classLit);
function ScreenStack$5(this$0, this$0_1, $anonymous0, $anonymous1, $anonymous2, val$otop){
  this.this$02 = this$0_1;
  this.val$otop6 = val$otop;
  this.this$01 = this$0;
  ScreenStack$Transitor.call(this, this$0, $anonymous0, $anonymous1, $anonymous2);
}

defineClass(452, 447, {}, ScreenStack$5);
_.onComplete_0 = function onComplete_2(){
  $hide(this.this$02, this.val$otop6);
}
;
var Ltripleplay_game_ScreenStack$5_2_classLit = createForClass('tripleplay.game', 'ScreenStack/5', 452, Ltripleplay_game_ScreenStack$Untransitor_2_classLit);
function ScreenStack$Transitor$1(this$1){
  this.this$11 = this$1;
}

defineClass(448, 953, {}, ScreenStack$Transitor$1);
_.onEmit = function onEmit_62(clock){
  $paint_2(this.this$11, clock);
}
;
var Ltripleplay_game_ScreenStack$Transitor$1_2_classLit = createForClass('tripleplay.game', 'ScreenStack/Transitor/1', 448, Lreact_Slot_2_classLit);
defineClass(1008, 974, {});
_.complete_0 = function complete_0(oscreen, nscreen){
}
;
_.init_1 = function init_8(plat, oscreen, nscreen){
}
;
var Ltripleplay_game_trans_AbstractTransition_2_classLit = createForClass('tripleplay.game.trans', 'AbstractTransition', 1008, Ltripleplay_game_ScreenStack$Transition_2_classLit);
defineClass(710, 1008, {});
var Ltripleplay_game_trans_InterpedTransition_2_classLit = createForClass('tripleplay.game.trans', 'InterpedTransition', 710, Ltripleplay_game_trans_AbstractTransition_2_classLit);
function $dir(this$static){
  this$static._dir = 3;
  return this$static;
}

function SlideTransition(stack_0){
  this._interp = ($clinit_Interpolator() , EASE_INOUT);
  this._originX = stack_0.originX;
  this._originY = stack_0.originY;
}

defineClass(64, 710, {}, SlideTransition);
_.complete_0 = function complete_1(oscreen, nscreen){
  $setTranslation(oscreen.layer, this._osx, this._osy);
}
;
_.init_1 = function init_9(plat, oscreen, nscreen){
  switch (this._dir) {
    case 0:
      this._odx = this._originX;
      this._ody = this._originY - oscreen.game_0().plat.graphics.viewSize.height_0;
      this._nsx = this._originX;
      this._nsy = this._originY + nscreen.game_0().plat.graphics.viewSize.height_0;
      break;
    case 1:
      this._odx = this._originX;
      this._ody = this._originY + oscreen.game_0().plat.graphics.viewSize.height_0;
      this._nsx = this._originX;
      this._nsy = this._originY - nscreen.game_0().plat.graphics.viewSize.height_0;
      break;
    case 2:
    default:this._odx = this._originX - oscreen.game_0().plat.graphics.viewSize.width_0;
      this._ody = this._originY;
      this._nsx = this._originX + nscreen.game_0().plat.graphics.viewSize.width_0;
      this._nsy = this._originY;
      break;
    case 3:
      this._odx = this._originX + oscreen.game_0().plat.graphics.viewSize.width_0;
      this._ody = this._originY;
      this._nsx = this._originX - nscreen.game_0().plat.graphics.viewSize.width_0;
      this._nsy = this._originY;
  }
  this._osx = oscreen.layer.transform.tx;
  this._osy = oscreen.layer.transform.ty;
  $setTranslation(nscreen.layer, this._nsx, this._nsy);
}
;
_.update_3 = function update_26(oscreen, nscreen, elapsed){
  var nx, ny, ox, oy;
  ox = $applyClamp(this._interp, this._originX, this._odx - this._originX, elapsed);
  oy = $applyClamp(this._interp, this._originY, this._ody - this._originY, elapsed);
  $setTranslation(oscreen.layer, ox, oy);
  nx = $applyClamp(this._interp, this._nsx, this._originX - this._nsx, elapsed);
  ny = $applyClamp(this._interp, this._nsy, this._originY - this._nsy, elapsed);
  $setTranslation(nscreen.layer, nx, ny);
  return elapsed >= 500;
}
;
_._dir = 2;
_._nsx = 0;
_._nsy = 0;
_._odx = 0;
_._ody = 0;
_._originX = 0;
_._originY = 0;
_._osx = 0;
_._osy = 0;
var Ltripleplay_game_trans_SlideTransition_2_classLit = createForClass('tripleplay.game.trans', 'SlideTransition', 64, Ltripleplay_game_trans_InterpedTransition_2_classLit);
function $clinit_TPPlatform(){
  $clinit_TPPlatform = emptyMethod;
  _default = new TPPlatform$1;
  _instance = _default;
}

function $hideNativeOverlays(this$static, area){
  if (!this$static._hidden && !area || !!this$static._hidden && $equals_5(this$static._hidden, area))
    return;
  this$static._hidden = !area?null:new Rectangle_1(area);
}

defineClass(935, 1, {});
var _default, _instance;
var Ltripleplay_platform_TPPlatform_2_classLit = createForClass('tripleplay.platform', 'TPPlatform', 935, Ljava_lang_Object_2_classLit);
function TPPlatform$1(){
  $clinit_AbstractValue();
  new Value(null);
  $clinit_AbstractSignal();
}

defineClass(936, 935, {}, TPPlatform$1);
var Ltripleplay_platform_TPPlatform$1_2_classLit = createForClass('tripleplay.platform', 'TPPlatform/1', 936, Ltripleplay_platform_TPPlatform_2_classLit);
function Background$1(val$color){
  this.val$color1 = val$color;
  Background.call(this);
}

defineClass(52, 131, {}, Background$1);
_.instantiate = function instantiate_1(size_0){
  return new Background$LayerInstance(this, size_0, new Background$1$1(this.val$color1, size_0));
}
;
_.val$color1 = 0;
var Ltripleplay_ui_Background$1_2_classLit = createForClass('tripleplay.ui', 'Background/1', 52, Ltripleplay_ui_Background_2_classLit);
function Background$1$1(val$color, val$size){
  this.val$color2 = val$color;
  this.val$size3 = val$size;
  Layer.call(this);
}

defineClass(646, 21, $intern_59, Background$1$1);
_.paintImpl = function paintImpl_5(surf){
  $fillRect_0($setFillColor(surf, this.val$color2), 0, 0, this.val$size3.width_0, this.val$size3.height_0);
}
;
_.val$color2 = 0;
var Ltripleplay_ui_Background$1$1_2_classLit = createForClass('tripleplay.ui', 'Background/1/1', 646, Lplayn_scene_Layer_2_classLit);
function Background$2(val$bgColor){
  this.val$bgColor1 = val$bgColor;
  this.val$ulColor2 = $intern_67;
  this.val$brColor3 = $intern_66;
  Background.call(this);
}

defineClass(321, 131, {}, Background$2);
_.instantiate = function instantiate_2(size_0){
  return new Background$LayerInstance(this, size_0, new Background$2$1(size_0, this.val$bgColor1, this.val$ulColor2, this.val$brColor3));
}
;
_.val$bgColor1 = 0;
_.val$brColor3 = 0;
_.val$ulColor2 = 0;
var Ltripleplay_ui_Background$2_2_classLit = createForClass('tripleplay.ui', 'Background/2', 321, Ltripleplay_ui_Background_2_classLit);
function Background$2$1(val$size, val$bgColor, val$ulColor, val$brColor){
  this.val$size2 = val$size;
  this.val$bgColor3 = val$bgColor;
  this.val$ulColor4 = val$ulColor;
  this.val$brColor5 = val$brColor;
  Layer.call(this);
}

defineClass(647, 21, $intern_59, Background$2$1);
_.paintImpl = function paintImpl_6(surf){
  var height, width_0;
  width_0 = this.val$size2.width_0;
  height = this.val$size2.height_0;
  $fillRect_0($setFillColor(surf, this.val$bgColor3), 0, 0, width_0, height);
  $drawLine($drawLine($setFillColor(surf, this.val$ulColor4), 0, 0, width_0, 0, 2), 0, 0, 0, height, 2);
  $drawLine($drawLine($drawLine($drawLine($setFillColor(surf, this.val$brColor5), width_0, 0, width_0, height, 1), 1, height - 1, width_0 - 1, height - 1, 1), 0, height, width_0, height, 1), width_0 - 1, 1, width_0 - 1, height - 1, 1);
}
;
_.val$bgColor3 = 0;
_.val$brColor5 = 0;
_.val$ulColor4 = 0;
var Ltripleplay_ui_Background$2$1_2_classLit = createForClass('tripleplay.ui', 'Background/2/1', 647, Lplayn_scene_Layer_2_classLit);
function Background$3(val$bgColor, val$color, val$thickness){
  this.val$bgColor1 = val$bgColor;
  this.val$color2 = val$color;
  this.val$thickness3 = val$thickness;
  Background.call(this);
}

defineClass(322, 131, {}, Background$3);
_.instantiate = function instantiate_3(size_0){
  return new Background$LayerInstance(this, size_0, new Background$3$1(size_0, this.val$bgColor1, this.val$color2, this.val$thickness3));
}
;
_.val$bgColor1 = 0;
_.val$color2 = 0;
_.val$thickness3 = 0;
var Ltripleplay_ui_Background$3_2_classLit = createForClass('tripleplay.ui', 'Background/3', 322, Ltripleplay_ui_Background_2_classLit);
function Background$3$1(val$size, val$bgColor, val$color, val$thickness){
  this.val$size2 = val$size;
  this.val$bgColor3 = val$bgColor;
  this.val$color4 = val$color;
  this.val$thickness5 = val$thickness;
  Layer.call(this);
}

defineClass(648, 21, $intern_59, Background$3$1);
_.paintImpl = function paintImpl_7(surf){
  var height, width_0;
  width_0 = this.val$size2.width_0;
  height = this.val$size2.height_0;
  $fillRect_0($setFillColor(surf, this.val$bgColor3), 0, 0, width_0, height);
  $fillRect_0($fillRect_0($fillRect_0($fillRect_0($setFillColor(surf, this.val$color4), 0, 0, width_0, this.val$thickness5), 0, 0, this.val$thickness5, height), width_0 - this.val$thickness5, 0, this.val$thickness5, height), 0, height - this.val$thickness5, width_0, this.val$thickness5);
}
;
_.val$bgColor3 = 0;
_.val$color4 = 0;
_.val$thickness5 = 0;
var Ltripleplay_ui_Background$3$1_2_classLit = createForClass('tripleplay.ui', 'Background/3/1', 648, Lplayn_scene_Layer_2_classLit);
function Background$Instance(this$0, size_0){
  this.this$01 = this$0;
  this.size_0 = new Dimension_1(size_0);
}

defineClass(320, 1, $intern_72);
var Ltripleplay_ui_Background$Instance_2_classLit = createForClass('tripleplay.ui', 'Background/Instance', 320, Ljava_lang_Object_2_classLit);
function Background$LayerInstance(this$0, size_0, layer){
  Background$Instance.call(this, this$0, size_0);
  this._layer = layer;
}

defineClass(153, 320, $intern_72, Background$LayerInstance);
_.addTo = function addTo_0(parent_0, x_0, y_0, depthAdjust){
  $setDepth(this._layer, -10 + depthAdjust);
  $translate($transform(this._layer), x_0, y_0);
  $add_13(parent_0, this._layer);
}
;
_.close_0 = function close_18(){
  this._layer.close_0();
}
;
var Ltripleplay_ui_Background$LayerInstance_2_classLit = createForClass('tripleplay.ui', 'Background/LayerInstance', 153, Ltripleplay_ui_Background$Instance_2_classLit);
function Behavior$1(this$0){
  this.this$01 = this$0;
}

defineClass(660, 953, {}, Behavior$1);
_.onEmit = function onEmit_63(selected){
  $updateSelected(this.this$01, selected.value_0);
}
;
var Ltripleplay_ui_Behavior$1_2_classLit = createForClass('tripleplay.ui', 'Behavior/1', 660, Lreact_Slot_2_classLit);
function Behavior$Select(owner){
  Behavior.call(this, owner);
}

defineClass(325, 241, {});
_.onCancel = function onCancel_0(iact){
  $updateSelected(this, false);
}
;
_.onClick = function onClick_1(iact){
}
;
_.onHover = function onHover_0(iact, inBounds){
  $updateSelected(this, inBounds);
}
;
_.onPress = function onPress_0(iact){
  $updateSelected(this, true);
}
;
_.onRelease = function onRelease_0(iact){
  return $updateSelected(this, false);
}
;
var Ltripleplay_ui_Behavior$Select_2_classLit = createForClass('tripleplay.ui', 'Behavior/Select', 325, Ltripleplay_ui_Behavior_2_classLit);
function $clinit_Behavior$Click(){
  $clinit_Behavior$Click = emptyMethod;
  DEBOUNCE_DELAY = ($clinit_Style() , new Style$3(true, valueOf(500)));
}

function $click(this$static){
  !!this$static._actionSound && this$static._actionSound.play_0();
  $emit(this$static.clicked, this$static._owner);
}

function Behavior$Click(owner){
  $clinit_Behavior$Click();
  Behavior$Select.call(this, owner);
  this.clicked = ($clinit_AbstractSignal() , new Signal);
}

defineClass(659, 325, {}, Behavior$Click);
_.layout = function layout_6(){
  this._actionSound = $resolveStyle(this, ($clinit_Style() , ACTION_SOUND));
  this._debounceDelay = $resolveStyle(this, DEBOUNCE_DELAY).value_0;
}
;
_.onClick = function onClick_2(iact){
  this._lastClickStamp = iact.event_0.time;
  !!this._actionSound && this._actionSound.play_0();
  $emit(this.clicked, this._owner);
}
;
_.onPress = function onPress_1(iact){
  iact.event_0.time - this._lastClickStamp > this._debounceDelay && $updateSelected(this, true);
}
;
_._debounceDelay = 0;
_._lastClickStamp = 0;
var DEBOUNCE_DELAY;
var Ltripleplay_ui_Behavior$Click_2_classLit = createForClass('tripleplay.ui', 'Behavior/Click', 659, Ltripleplay_ui_Behavior$Select_2_classLit);
function $click_0(this$static){
  !!this$static._actionSound && this$static._actionSound.play_0();
  $emit(this$static.clicked, this$static._owner);
}

function Behavior$Toggle(owner){
  Behavior.call(this, owner);
  this.clicked = ($clinit_AbstractSignal() , new Signal);
  this.selected = ($clinit_AbstractValue() , new Value(($clinit_Boolean() , $clinit_Boolean() , FALSE)));
  $addConnection(this.selected, new Behavior$1(this));
}

defineClass(242, 241, {}, Behavior$Toggle);
_.onCancel = function onCancel_1(iact){
  this.selected.updateAndNotify(($clinit_Boolean() , this._anchorState?TRUE:FALSE), false);
}
;
_.onClick = function onClick_3(iact){
  !!this._actionSound && this._actionSound.play_0();
  $emit(this.clicked, this._owner);
}
;
_.onHover = function onHover_1(iact, inBounds){
  this.selected.updateAndNotify(($clinit_Boolean() , (inBounds?!this._anchorState:this._anchorState)?TRUE:FALSE), false);
}
;
_.onPress = function onPress_2(iact){
  this._anchorState = $isSet_0(this._owner, ($clinit_Element$Flag() , SELECTED));
  this.selected.updateAndNotify(($clinit_Boolean() , this._anchorState?FALSE:TRUE), false);
}
;
_.onRelease = function onRelease_1(iact){
  return this._anchorState != $isSet_0(this._owner, ($clinit_Element$Flag() , SELECTED));
}
;
_._anchorState = false;
var Ltripleplay_ui_Behavior$Toggle_2_classLit = createForClass('tripleplay.ui', 'Behavior/Toggle', 242, Ltripleplay_ui_Behavior_2_classLit);
function CheckBox$1(this$0){
  this.this$01 = this$0;
}

defineClass(655, 953, {}, CheckBox$1);
_.onEmit = function onEmit_64(checked){
  $updateCheckViz(this.this$01, checked.value_0);
}
;
var Ltripleplay_ui_CheckBox$1_2_classLit = createForClass('tripleplay.ui', 'CheckBox/1', 655, Lreact_Slot_2_classLit);
function $initChildren(this$static, children){
  if (!this$static._children.isEmpty())
    throw new IllegalStateException;
  $setChildren(this$static, children);
}

function $setChildren(this$static, children){
  var child, child$iterator, child$iterator0;
  for (child$iterator0 = this$static._children.iterator(); child$iterator0.hasNext();) {
    child = child$iterator0.next_0();
    $didRemove(this$static, child, false);
  }
  for (child$iterator = (this$static._children = children).iterator(); child$iterator.hasNext();) {
    child = child$iterator.next_0();
    $didAdd(this$static, child);
  }
  $invalidate(this$static);
}

function $setLayout(this$static, layout){
  this$static._layout = layout;
  $invalidate(this$static);
}

defineClass(623, 22, $intern_47);
_.childAt = function childAt_0(index_0){
  return this._children.get_0(index_0);
}
;
_.childCount = function childCount_0(){
  return this._children.size_1();
}
;
_.getLayout = function getLayout_0(){
  if (!this._layout)
    throw new IllegalStateException;
  return this._layout;
}
;
_.iterator = function iterator_34(){
  return this._children.iterator();
}
;
_.stylesheet = function stylesheet_0(){
  return this._stylesheet;
}
;
var Ltripleplay_ui_Composite_2_classLit = createForClass('tripleplay.ui', 'Composite', 623, Ltripleplay_ui_Container_2_classLit);
defineClass(999, 1, {});
_.adjustHintX = function adjustHintX(hintX){
  return hintX;
}
;
_.adjustHintY = function adjustHintY(hintY){
  return hintY;
}
;
_.adjustPreferredSize = function adjustPreferredSize(psize, hintX, hintY){
}
;
var Ltripleplay_ui_Layout$Constraint_2_classLit = createForClass('tripleplay.ui', 'Layout/Constraint', 999, Ljava_lang_Object_2_classLit);
function Constraints$2(){
  this.val$height1 = 30;
}

defineClass(790, 999, {}, Constraints$2);
_.adjustHintY = function adjustHintY_0(hintY){
  return min_0(this.val$height1, hintY);
}
;
_.adjustPreferredSize = function adjustPreferredSize_0(psize, hintX, hintY){
  psize.height_0 = this.val$height1;
}
;
_.val$height1 = 0;
var Ltripleplay_ui_Constraints$2_2_classLit = createForClass('tripleplay.ui', 'Constraints/2', 790, Ltripleplay_ui_Layout$Constraint_2_classLit);
function Constraints$3(val$width, val$height){
  this.val$width1 = val$width;
  this.val$height2 = val$height;
}

defineClass(99, 999, {}, Constraints$3);
_.adjustHintX = function adjustHintX_0(hintX){
  return min_0(this.val$width1, hintX);
}
;
_.adjustHintY = function adjustHintY_1(hintY){
  return min_0(this.val$height2, hintY);
}
;
_.adjustPreferredSize = function adjustPreferredSize_1(psize, hintX, hintY){
  psize.width_0 = this.val$width1;
  psize.height_0 = this.val$height2;
}
;
_.val$height2 = 0;
_.val$width1 = 0;
var Ltripleplay_ui_Constraints$3_2_classLit = createForClass('tripleplay.ui', 'Constraints/3', 99, Ltripleplay_ui_Layout$Constraint_2_classLit);
function Element$1(this$0){
  this.this$01 = this$0;
}

defineClass(615, 1, {}, Element$1);
_.hitTest = function hitTest(layer, p){
  var hit;
  hit = null;
  if ($isSet_0(this.this$01, ($clinit_Element$Flag() , VISIBLE_2)) && $contains_2(this.this$01, p.x_0, p.y_0)) {
    $isSet_0(this.this$01, HIT_DESCEND) && (hit = layer.hitTestDefault(p));
    !hit && $isSet_0(this.this$01, HIT_ABSORB) && (hit = layer);
  }
  return hit;
}
;
_.toString$ = function toString_88(){
  return '<' + this.this$01._size + '>';
}
;
var Ltripleplay_ui_Element$1_2_classLit = createForClass('tripleplay.ui', 'Element/1', 615, Ljava_lang_Object_2_classLit);
function Element$6(this$0, val$styles){
  this.this$01 = this$0;
  this.val$styles2 = val$styles;
}

defineClass(151, 968, {}, Element$6);
_.onEmit_0 = function onEmit_65(){
  this.this$01.invalidate();
  this.val$styles2 && (this.this$01._ldata = null);
}
;
_.val$styles2 = false;
var Ltripleplay_ui_Element$6_2_classLit = createForClass('tripleplay.ui', 'Element/6', 151, Lreact_UnitSlot_2_classLit);
function Element$7(this$0){
  this.this$01 = this$0;
  GroupLayer.call(this);
}

defineClass(616, 188, $intern_59, Element$7);
_.name_1 = function name_12(){
  return this.this$01 + ' layer';
}
;
var Ltripleplay_ui_Element$7_2_classLit = createForClass('tripleplay.ui', 'Element/7', 616, Lplayn_scene_GroupLayer_2_classLit);
function $clinit_Element$Binding(){
  $clinit_Element$Binding = emptyMethod;
  NONE = new Element$Binding$1;
}

defineClass(610, 1, {});
var NONE;
var Ltripleplay_ui_Element$Binding_2_classLit = createForClass('tripleplay.ui', 'Element/Binding', 610, Ljava_lang_Object_2_classLit);
function Element$Binding$1(){
  $clinit_Closeable$Util();
  this.next = null;
}

defineClass(614, 610, {}, Element$Binding$1);
var Ltripleplay_ui_Element$Binding$1_2_classLit = createForClass('tripleplay.ui', 'Element/Binding/1', 614, Ltripleplay_ui_Element$Binding_2_classLit);
function $clinit_Element$Flag(){
  $clinit_Element$Flag = emptyMethod;
  VALID = new Element$Flag('VALID', 0, 1);
  ENABLED = new Element$Flag('ENABLED', 1, 2);
  VISIBLE_2 = new Element$Flag('VISIBLE', 2, 4);
  SELECTED = new Element$Flag('SELECTED', 3, 8);
  WILL_DISPOSE = new Element$Flag('WILL_DISPOSE', 4, 16);
  HIT_DESCEND = new Element$Flag('HIT_DESCEND', 5, 32);
  HIT_ABSORB = new Element$Flag('HIT_ABSORB', 6, 64);
  IS_REMOVING = new Element$Flag('IS_REMOVING', 7, 128);
  IS_ADDING = new Element$Flag('IS_ADDING', 8, 256);
}

function Element$Flag(enum$name, enum$ordinal, mask){
  Enum.call(this, enum$name, enum$ordinal);
  this.mask = mask;
}

function values_37(){
  $clinit_Element$Flag();
  return initValues(getClassLiteralForArray(Ltripleplay_ui_Element$Flag_2_classLit, 1), $intern_1, 80, 0, [VALID, ENABLED, VISIBLE_2, SELECTED, WILL_DISPOSE, HIT_DESCEND, HIT_ABSORB, IS_REMOVING, IS_ADDING]);
}

defineClass(80, 7, {3:1, 9:1, 7:1, 80:1}, Element$Flag);
_.mask = 0;
var ENABLED, HIT_ABSORB, HIT_DESCEND, IS_ADDING, IS_REMOVING, SELECTED, VALID, VISIBLE_2, WILL_DISPOSE;
var Ltripleplay_ui_Element$Flag_2_classLit = createForEnum('tripleplay.ui', 'Element/Flag', 80, Ljava_lang_Enum_2_classLit, values_37);
function Element$LayoutData(this$0){
  this.this$01_1 = this$0;
  this.bg = resolveStyle(this.this$01_1, ($clinit_Style() , BACKGROUND));
}

defineClass(150, 1, {}, Element$LayoutData);
_.computeSize_0 = function computeSize_1(hintX, hintY){
  return new Dimension_0(0, 0);
}
;
_.layout_1 = function layout_7(left, top_0, width_0, height){
}
;
var Ltripleplay_ui_Element$LayoutData_2_classLit = createForClass('tripleplay.ui', 'Element/LayoutData', 150, Ljava_lang_Object_2_classLit);
function $adjustSize(this$static, dim){
  dim.width_0 = $apply_4(this$static.prefWidth, dim.width_0);
  dim.height_0 = $apply_4(this$static.prefHeight, dim.height_0);
  return dim;
}

function $select_0(pref, base){
  return pref == 0?base:pref;
}

function Element$SizableLayoutData(this$0, delegate, prefSize){
  Element$LayoutData.call(this, this$0);
  $clinit_Element$Take();
  this.layoutDelegate = delegate;
  this.sizeDelegate = delegate;
  if (prefSize) {
    this.prefWidth = prefSize.width_0;
    this.prefHeight = prefSize.height_0;
  }
   else {
    this.prefWidth = this.prefHeight = 0;
  }
}

function Element$SizableLayoutData_0(this$0, prefSize){
  Element$LayoutData.call(this, this$0);
  $clinit_Element$Take();
  this.layoutDelegate = null;
  this.sizeDelegate = null;
  if (prefSize) {
    this.prefWidth = prefSize.width_0;
    this.prefHeight = prefSize.height_0;
  }
   else {
    this.prefWidth = this.prefHeight = 0;
  }
}

defineClass(236, 150, {}, Element$SizableLayoutData, Element$SizableLayoutData_0);
_.computeSize_0 = function computeSize_2(hintX, hintY){
  return $adjustSize(this, !this.sizeDelegate?new Dimension_0(this.prefWidth, this.prefHeight):this.sizeDelegate.computeSize_0($select_0(this.prefWidth, hintX), $select_0(this.prefHeight, hintY)));
}
;
_.layout_1 = function layout_8(left, top_0, width_0, height){
  !!this.layoutDelegate && this.layoutDelegate.layout_1(left, top_0, width_0, height);
}
;
_.prefHeight = 0;
_.prefWidth = 0;
var Ltripleplay_ui_Element$SizableLayoutData_2_classLit = createForClass('tripleplay.ui', 'Element/SizableLayoutData', 236, Ltripleplay_ui_Element$LayoutData_2_classLit);
function $clinit_Element$Take(){
  $clinit_Element$Take = emptyMethod;
  MAX = new Element$Take$1;
  MIN = new Element$Take$2;
  PREFERRED_IF_SET = new Element$Take$3;
}

function Element$Take(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_38(){
  $clinit_Element$Take();
  return initValues(getClassLiteralForArray(Ltripleplay_ui_Element$Take_2_classLit, 1), $intern_1, 109, 0, [MAX, MIN, PREFERRED_IF_SET]);
}

defineClass(109, 7, $intern_89);
var MAX, MIN, PREFERRED_IF_SET;
var Ltripleplay_ui_Element$Take_2_classLit = createForEnum('tripleplay.ui', 'Element/Take', 109, Ljava_lang_Enum_2_classLit, values_38);
function Element$Take$1(){
  Element$Take.call(this, 'MAX', 0);
}

defineClass(611, 109, $intern_89, Element$Take$1);
var Ltripleplay_ui_Element$Take$1_2_classLit = createForEnum('tripleplay.ui', 'Element/Take/1', 611, Ltripleplay_ui_Element$Take_2_classLit, null);
function Element$Take$2(){
  Element$Take.call(this, 'MIN', 1);
}

defineClass(612, 109, $intern_89, Element$Take$2);
var Ltripleplay_ui_Element$Take$2_2_classLit = createForEnum('tripleplay.ui', 'Element/Take/2', 612, Ltripleplay_ui_Element$Take_2_classLit, null);
function $apply_4(preferred, original){
  return preferred == 0?original:preferred;
}

function Element$Take$3(){
  Element$Take.call(this, 'PREFERRED_IF_SET', 2);
}

defineClass(613, 109, $intern_89, Element$Take$3);
var Ltripleplay_ui_Element$Take$3_2_classLit = createForEnum('tripleplay.ui', 'Element/Take/3', 613, Ltripleplay_ui_Element$Take_2_classLit, null);
function $clinit_Field(){
  $clinit_Field = emptyMethod;
  $clinit_Style();
  new Style$Flag(false, true);
  new Style$Flag(false, true);
  new Style$Flag(false, true);
  new Style$Flag(false, false);
  TEXT_TYPE = new Style$3(false, ($clinit_Keyboard$TextType() , DEFAULT));
  VALIDATOR = new Style$3(true, null);
  TRANSFORMER = new Style$3(true, null);
  new Style$3(false, null);
  new Style$Flag(false, false);
}

function $startEdit(this$static){
  $clinit_TPPlatform();
  $onSuccess($getText_0((!this$static._parent?null:this$static._parent.root_0()).iface.plat.input_0, this$static._popupLabel, this$static.text_0._value), new Field$3(this$static));
}

function Field(){
  $clinit_Field();
  Field_0.call(this, ($clinit_Styles() , $clinit_Styles() , _noneSingleton));
}

function Field_0(styles){
  TextWidget.call(this);
  $setStyles(this, styles);
  this.text_0 = ($clinit_AbstractValue() , new Value(''));
  this._finishedEditing = ($clinit_AbstractSignal() , new Signal);
  $clinit_TPPlatform();
  this.text_0.updateAndNotify('', false);
  $addConnection(this.text_0, new Element$6(this, true));
}

defineClass(237, 28, $intern_50, Field);
_.createBehavior = function createBehavior_5(){
  return new Field$2(this, this);
}
;
_.createLayoutData = function createLayoutData_3(hintX, hintY){
  return new Field$FieldLayoutData(this, hintX, hintY);
}
;
_.getStyleClass = function getStyleClass_8(){
  return Ltripleplay_ui_Field_2_classLit;
}
;
_.icon_0 = function icon_4(){
  return null;
}
;
_.text_1 = function text_43(){
  var ctext;
  ctext = this.text_0._value;
  return ctext == null || ctext.length == 0?' ':ctext;
}
;
_.wasRemoved = function wasRemoved_2(){
  $wasRemoved_1(this);
  $clinit_TPPlatform();
}
;
_._fullTimeNative = false;
var TEXT_TYPE, TRANSFORMER, VALIDATOR;
var Ltripleplay_ui_Field_2_classLit = createForClass('tripleplay.ui', 'Field', 237, Ltripleplay_ui_TextWidget_2_classLit);
function Field$2(this$0, $anonymous0){
  this.this$01 = this$0;
  Behavior$Select.call(this, $anonymous0);
}

defineClass(657, 325, {}, Field$2);
_.onClick = function onClick_4(iact){
  this.this$01._fullTimeNative || $startEdit(this.this$01);
}
;
var Ltripleplay_ui_Field$2_2_classLit = createForClass('tripleplay.ui', 'Field/2', 657, Ltripleplay_ui_Behavior$Select_2_classLit);
function Field$3(this$0){
  this.this$01 = this$0;
}

defineClass(658, 953, {}, Field$3);
_.onEmit = function onEmit_66(result){
  result != null && this.this$01.text_0.updateAndNotify(result, false);
  $emit(this.this$01._finishedEditing, ($clinit_Boolean() , result != null?TRUE:FALSE));
}
;
var Ltripleplay_ui_Field$3_2_classLit = createForClass('tripleplay.ui', 'Field/3', 658, Lreact_Slot_2_classLit);
function $accommodateIcon(this$static, hints, haveText){
  if (this$static.icon) {
    if ($horizontal(this$static.iconPos)) {
      hints.width_0 -= this$static.icon.width_1();
      haveText && (hints.width_0 -= this$static.iconGap);
    }
     else {
      hints.height_0 -= this$static.icon.height_1();
      haveText && (hints.height_0 -= this$static.iconGap);
    }
  }
}

function $addTextSize(this$static, size_0){
  if (this$static.text_0) {
    size_0.width_0 += this$static.text_0.width_1();
    size_0.height_0 += this$static.text_0.height_1();
  }
}

function $layout_1(this$static, left, top_0, width_0, height){
  var ctx, cty, ihei, iheight, iwid, iwidth, ix, iy, tlayer, tx, ty, usedHeight, usedWidth;
  tx = left;
  ty = top_0;
  usedWidth = 0;
  usedHeight = 0;
  if (!!this$static.icon && !!this$static.iconPos) {
    ix = left;
    iy = top_0;
    iwidth = this$static.icon.width_1();
    iheight = this$static.icon.height_1();
    switch (this$static.iconPos.ordinal) {
      case 0:
        tx += iwidth + this$static.iconGap;
        iy += this$static.valign.offset(iheight, height);
        usedWidth = iwidth + this$static.iconGap;
        break;
      case 1:
        ty += iheight + this$static.iconGap;
        ix += this$static.halign.offset(iwidth, width_0);
        usedHeight = iheight + this$static.iconGap;
        break;
      case 2:
        ix += width_0 - iwidth;
        iy += this$static.valign.offset(iheight, height);
        usedWidth = iwidth + this$static.iconGap;
        break;
      case 3:
        iy += height - iheight;
        ix += this$static.halign.offset(iwidth, width_0);
        usedHeight = iheight + this$static.iconGap;
    }
    if (this$static.this$01_0._renderedIcon == this$static.icon) {
      $setTranslation(this$static.this$01_0._ilayer, ix, iy);
    }
     else {
      !!this$static.this$01_0._ilayer && this$static.this$01_0._ilayer.close_0();
      $addAt(this$static.this$01_0.layer, this$static.this$01_0._ilayer = this$static.icon.render(), ix, iy);
    }
  }
   else if (!this$static.icon && !!this$static.this$01_0._ilayer) {
    this$static.this$01_0._ilayer.close_0();
    this$static.this$01_0._ilayer = null;
  }
  this$static.this$01_0._renderedIcon = this$static.icon;
  if (!this$static.text_0)
    $close_8(this$static.this$01_0._tglyph);
  else {
    $updateTextGlyph(this$static, tx, ty, width_0 - usedWidth, height - usedHeight);
    if (!!this$static.this$01_0._ilayer && this$static.iconCuddle) {
      tlayer = this$static.this$01_0._tglyph._layer;
      ctx = !tlayer?0:tlayer.transform.tx;
      cty = !tlayer?0:tlayer.transform.ty;
      ix = this$static.this$01_0._ilayer.transform.tx;
      iy = this$static.this$01_0._ilayer.transform.ty;
      iwid = this$static.icon.width_1();
      ihei = this$static.icon.height_1();
      switch (this$static.iconPos.ordinal) {
        case 0:
          ix = ctx - iwid - this$static.iconGap;
          break;
        case 1:
          iy = cty - ihei - this$static.iconGap;
          break;
        case 2:
          ix = ctx + this$static.text_0.width_1() + this$static.iconGap;
          break;
        case 3:
          iy = cty + this$static.text_0.height_1() + this$static.iconGap;
      }
      $setTranslation(this$static.this$01_0._ilayer, ix, iy);
    }
  }
}

function $updateTextGlyph(this$static, tx, ty, availWidth, availHeight){
  var aheight, awidth, canvas, ox, oy, tgheight, tgwidth, theight, twidth;
  twidth = ceil_0(this$static.text_0.width_1());
  theight = ceil_0(this$static.text_0.height_1());
  awidth = ceil_0(availWidth);
  aheight = ceil_0(availHeight);
  if (twidth <= 0 || theight <= 0 || awidth <= 0 || aheight <= 0)
    return;
  if (this$static.autoShrink && twidth > availWidth) {
    while (twidth > availWidth && this$static.text_0.style_0.font_0.size_0 > 6) {
      this$static.text_0 = this$static.text_0.resize(this$static.text_0.style_0.font_0.size_0 - 1);
      twidth = ceil_0(this$static.text_0.width_1());
    }
    theight = ceil_0(this$static.text_0.height_1());
  }
  tgwidth = awidth < twidth?awidth:twidth;
  tgheight = aheight < theight?aheight:theight;
  ox = ifloor(this$static.halign.offset(twidth, awidth));
  oy = ifloor(this$static.valign.offset(theight, aheight));
  if (!this$static.text_0.equals$(this$static.this$01_0._renderedText) || tgwidth != this$static.this$01_0._tglyph._preparedWidth || tgheight != this$static.this$01_0._tglyph._preparedHeight) {
    $prepare(this$static.this$01_0._tglyph, $root(this$static.this$01_0).iface.plat.graphics, tgwidth, tgheight);
    canvas = $clear_1(this$static.this$01_0._tglyph._layer.canvas);
    this$static.text_0.render_1(canvas, ox < 0?ox:0, oy < 0?oy:0);
    $end_1(this$static.this$01_0._tglyph._layer);
    this$static.this$01_0._renderedText = this$static.text_0;
  }
  $setTranslation(this$static.this$01_0._tglyph._layer, tx + (ox > 0?ox:0), ty + (oy > 0?oy:0));
}

function TextWidget$TextLayoutData(this$0, hintX, hintY){
  var curtext, haveText, hints, icon, style;
  this.this$01_0 = this$0;
  Element$LayoutData.call(this, this$0);
  this.halign = resolveStyle(this.this$01_0, ($clinit_Style() , HALIGN));
  this.valign = resolveStyle(this.this$01_0, VALIGN);
  this.iconPos = resolveStyle(this.this$01_0, ICON_POS);
  this.iconGap = resolveStyle(this.this$01_0, ICON_GAP).value_0;
  this.iconCuddle = resolveStyle(this.this$01_0, ICON_CUDDLE).value_0;
  resolveStyle(this.this$01_0, ICON_EFFECT);
  this.wrap = resolveStyle(this.this$01_0, TEXT_WRAP).value_0;
  this.autoShrink = resolveStyle(this.this$01_0, AUTO_SHRINK).value_0;
  this.gfx = $root(this.this$01_0).iface.plat.graphics;
  curtext = this$0.text_1();
  haveText = curtext != null && curtext.length > 0;
  hints = $subtractFrom(this.bg.insets, new Dimension_0(hintX, hintY));
  icon = this$0.icon_0();
  this.icon = !icon?null:icon;
  $accommodateIcon(this, hints, haveText);
  if (haveText) {
    style = new TextStyle(resolveStyle(this$0, FONT_0), maskUndefined(resolveStyle(this$0, TEXT_EFFECT)) !== maskUndefined(($clinit_Style$TextEffect() , PIXEL_OUTLINE)), resolveStyle(this$0, COLOR).value_0, resolveStyle(this$0, TEXT_EFFECT).createEffectRenderer(this$0), resolveStyle(this$0, UNDERLINE).value_0);
    hints.width_0 > 0 && this.wrap?(this.text_0 = new StyledText$Block(this.gfx, curtext, style, new TextWrap(hints.width_0), toAlignment(resolveStyle(this$0, HALIGN)))):(this.text_0 = new StyledText$Span(this.gfx, curtext, style));
  }
}

defineClass(238, 150, {}, TextWidget$TextLayoutData);
_.computeSize_0 = function computeSize_3(hintX, hintY){
  var availWidth, size_0, twidth, usedWidth;
  if (!!this.text_0 && this.autoShrink) {
    usedWidth = 0;
    !!this.icon && $horizontal(this.iconPos) && (usedWidth = this.icon.width_1() + this.iconGap);
    twidth = this.text_0.width_1();
    availWidth = hintX - usedWidth;
    if (twidth > availWidth) {
      while (twidth > availWidth && this.text_0.style_0.font_0.size_0 > 6) {
        this.text_0 = this.text_0.resize(this.text_0.style_0.font_0.size_0 - 1);
        twidth = ceil_0(this.text_0.width_1());
      }
    }
  }
  size_0 = new Dimension;
  $addTextSize(this, size_0);
  if (this.icon) {
    if ($horizontal(this.iconPos)) {
      size_0.width_0 += this.icon.width_1();
      !!this.text_0 && (size_0.width_0 += this.iconGap);
      size_0.height_0 = max_1(size_0.height_0, this.icon.height_1());
    }
     else {
      size_0.width_0 = max_1(size_0.width_0, this.icon.width_1());
      size_0.height_0 += this.icon.height_1();
      !!this.text_0 && (size_0.height_0 += this.iconGap);
    }
  }
  return size_0;
}
;
_.layout_1 = function layout_9(left, top_0, width_0, height){
  $layout_1(this, left, top_0, width_0, height);
}
;
_.toString$ = function toString_89(){
  return 'TextLayoutData[text=' + this.text_0 + ', icon=' + this.icon + ']';
}
;
_.autoShrink = false;
_.iconCuddle = false;
_.iconGap = 0;
_.wrap = false;
var Ltripleplay_ui_TextWidget$TextLayoutData_2_classLit = createForClass('tripleplay.ui', 'TextWidget/TextLayoutData', 238, Ltripleplay_ui_Element$LayoutData_2_classLit);
function Field$FieldLayoutData(this$0, hintX, hintY){
  this.this$01 = this$0;
  TextWidget$TextLayoutData.call(this, this$0, hintX, hintY);
}

defineClass(656, 238, {}, Field$FieldLayoutData);
_.layout_1 = function layout_10(left, top_0, width_0, height){
  $layout_1(this, left, top_0, width_0, height);
  this.this$01._fullTimeNative = ($clinit_Field() , $clinit_TPPlatform() , false);
  this.this$01._fullTimeNative && $clinit_TPPlatform();
  resolveStyle(this.this$01, VALIDATOR);
  resolveStyle(this.this$01, TRANSFORMER);
  resolveStyle(this.this$01, TEXT_TYPE);
}
;
var Ltripleplay_ui_Field$FieldLayoutData_2_classLit = createForClass('tripleplay.ui', 'Field/FieldLayoutData', 656, Ltripleplay_ui_TextWidget$TextLayoutData_2_classLit);
function $clinit_IconEffect(){
  $clinit_IconEffect = emptyMethod;
  NONE_0 = new IconEffect$1;
}

defineClass(1002, 1, {});
var NONE_0;
var Ltripleplay_ui_IconEffect_2_classLit = createForClass('tripleplay.ui', 'IconEffect', 1002, Ljava_lang_Object_2_classLit);
function IconEffect$1(){
}

defineClass(651, 1002, {}, IconEffect$1);
var Ltripleplay_ui_IconEffect$1_2_classLit = createForClass('tripleplay.ui', 'IconEffect/1', 651, Ltripleplay_ui_IconEffect_2_classLit);
function $height_0(this$static){
  return this$static.val$source1.isLoaded()?this$static.val$source1.tile_0().displayHeight:0;
}

function $state(this$static){
  return $map(this$static.val$source1.tileAsync(), new Functions$8(this$static));
}

function $width_0(this$static){
  return this$static.val$source1.isLoaded()?this$static.val$source1.tile_0().displayWidth:0;
}

function Icons$1(val$source){
  this.val$source1 = val$source;
}

defineClass(91, 1, {}, Icons$1);
_.height_1 = function height_5(){
  return $height_0(this);
}
;
_.render = function render(){
  return new ImageLayer_0(this.val$source1);
}
;
_.state_0 = function state_0(){
  return $state(this);
}
;
_.width_1 = function width_6(){
  return $width_0(this);
}
;
var Ltripleplay_ui_Icons$1_2_classLit = createForClass('tripleplay.ui', 'Icons/1', 91, Ljava_lang_Object_2_classLit);
defineClass(778, 1, {});
_.height_1 = function height_6(){
  return $height_0(this.icon);
}
;
_.render = function render_0(){
  return new ImageLayer_0(this.icon.val$source1);
}
;
_.state_0 = function state_1(){
  return $state(this.icon);
}
;
_.width_1 = function width_7(){
  return $width_0(this.icon);
}
;
var Ltripleplay_ui_Icons$Aggregated_2_classLit = createForClass('tripleplay.ui', 'Icons/Aggregated', 778, Ljava_lang_Object_2_classLit);
function Icons$2($anonymous0, val$scale){
  this.val$scale2 = val$scale;
  this.icon = $anonymous0;
}

defineClass(136, 778, {}, Icons$2);
_.height_1 = function height_7(){
  return $height_0(this.icon) * this.val$scale2;
}
;
_.render = function render_1(){
  return $setScale(new ImageLayer_0(this.icon.val$source1), this.val$scale2);
}
;
_.width_1 = function width_8(){
  return $width_0(this.icon) * this.val$scale2;
}
;
_.val$scale2 = 0;
var Ltripleplay_ui_Icons$2_2_classLit = createForClass('tripleplay.ui', 'Icons/2', 136, Ltripleplay_ui_Icons$Aggregated_2_classLit);
function $addRoot(this$static, root){
  $add_0(this$static._roots, root);
  return root;
}

function $createRoot(this$static, layout, sheet_0, parent_0){
  var root;
  root = $addRoot(this$static, new Root(this$static, layout, sheet_0));
  $add_13(parent_0, root.layer);
  return root;
}

function $disposeRoot(this$static, root){
  if (!$remove_0(this$static._roots, root))
    return false;
  $set_1(root, ($clinit_Element$Flag() , WILL_DISPOSE), true);
  $wasRemoved_0(root);
  $close_4(root.layer);
  return true;
}

function $paint_3(this$static){
  var ii, ll;
  for (ii = 0 , ll = this$static._roots.array.length; ii < ll; ii++)
    $validate($get(this$static._roots, ii));
}

function Interface(plat, frame_0){
  this.anim = new Animator;
  this._roots = new ArrayList;
  this.plat = plat;
  this.frame_0 = frame_0;
  this._onFrame = ($clinit_Closeable$Util() , new Closeable$Util$2(initValues(getClassLiteralForArray(Lreact_Closeable_2_classLit, 1), $intern_1, 14, 0, [$addConnection(frame_0, new Interface$1(this)), $addConnection(frame_0, this.anim.onPaint)])));
}

defineClass(575, 1, $intern_72, Interface);
_.close_0 = function close_19(){
  $close_6(this._onFrame);
}
;
var Ltripleplay_ui_Interface_2_classLit = createForClass('tripleplay.ui', 'Interface', 575, Ljava_lang_Object_2_classLit);
function $onEmit_29(this$static){
  $paint_3(this$static.this$01);
}

function Interface$1(this$0){
  this.this$01 = this$0;
}

defineClass(576, 953, {}, Interface$1);
_.onEmit = function onEmit_67(clock){
  $onEmit_29(this, clock);
}
;
var Ltripleplay_ui_Interface$1_2_classLit = createForClass('tripleplay.ui', 'Interface/1', 576, Lreact_Slot_2_classLit);
function $setBounds_0(elem, x_0, y_0, width_0, height){
  elem.setLocation(x_0, y_0);
  elem.setSize(width_0, height);
}

defineClass(998, 1, {});
var Ltripleplay_ui_Layout_2_classLit = createForClass('tripleplay.ui', 'Layout', 998, Ljava_lang_Object_2_classLit);
function $clinit_Log_0(){
  $clinit_Log_0 = emptyMethod;
  log_2 = new Logger('tpui');
}

var log_2;
function $clinit_Menu(){
  $clinit_Menu = emptyMethod;
  FADE_IN = new Menu$1;
  FADE_OUT = new Menu$2;
  OPENER = ($clinit_Style() , new Style$3(true, FADE_IN));
  CLOSER = new Style$3(true, FADE_OUT);
}

function $activate_0(this$static){
  var doActivation;
  if (this$static._active)
    return;
  this$static._defunct = false;
  doActivation = new Menu$7(this$static);
  $isSet_0(this$static, ($clinit_Element$Flag() , VALID))?$run_1(doActivation):(this$static._postLayout = doActivation);
}

function $connectItem(this$static, item_0){
  $add_0(this$static._items, item_0);
  $setRelay(item_0, ($clinit_Closeable$Util() , new Closeable$Util$2(initValues(getClassLiteralForArray(Lreact_Closeable_2_classLit, 1), $intern_1, 14, 0, [$addConnection($events(item_0.layer), this$static._itemListener.pointer), $addConnection($events(item_0.layer), this$static._itemListener.mouse)]))));
}

function $deactivate(this$static){
  $fastForward(this$static);
  this$static._active = false;
  this$static._defunct = true;
  this$static._complete = new Menu$8(this$static);
  this$static._anim = new Animation$2($add_16($then(resolveStyle(this$static, CLOSER).go(this$static, this$static._animator)), new Animation$Action(this$static._complete)));
}

function $disconnectItem(this$static, item_0){
  var itemIdx;
  itemIdx = $indexOf_0(this$static._items, item_0, 0);
  this$static._items.remove_0(itemIdx);
  $setRelay(item_0, ($clinit_Closeable$Util() , NOOP));
}

function $fastForward(this$static){
  if (this$static._anim) {
    this$static._anim.this$01._root._canceled = true;
    this$static._complete.run();
  }
}

function $getHover(this$static, e){
  var hit, item_0, item$iterator;
  hit = $hitTest(this$static.layer, screenToLayer(this$static.layer, e.x_0, e.y_0));
  for (item$iterator = new AbstractList$IteratorImpl(this$static._items); item$iterator.i < item$iterator.this$01_0.size_1();) {
    item_0 = (checkCriticalElement(item$iterator.i < item$iterator.this$01_0.size_1()) , item$iterator.this$01_0.get_0(item$iterator.last = item$iterator.i++));
    if ($isSet_0(item_0, ($clinit_Element$Flag() , VISIBLE_2)) && item_0.layer == hit) {
      return item_0;
    }
  }
  return null;
}

function $init_2(this$static, animator){
  this$static._animator = animator;
}

function $onClosed(this$static){
  this$static._complete = null;
  this$static._anim = null;
  $emit(this$static._deactivated, this$static);
  this$static._selector.selected.updateAndNotify(null, false);
}

function $onOpened(this$static){
  var pd, pe;
  this$static._complete = null;
  this$static._anim = null;
  this$static._active = true;
  pd = this$static._pendingDrag;
  pe = this$static._pendingEnd;
  this$static._pendingDrag = this$static._pendingEnd = null;
  pe?$onPointerEnd(this$static, pe):!!pd && $onPointerDrag(this$static, pd);
}

function $onPointerDrag(this$static, e){
  if (!this$static._active) {
    this$static._pendingDrag = e;
    return;
  }
  this$static._selector.selected.updateAndNotify($getHover(this$static, e), false);
}

function $onPointerEnd(this$static, e){
  var hover;
  if (!this$static._active) {
    this$static._pendingEnd = e;
    return;
  }
  hover = $getHover(this$static, e);
  this$static._selector.selected._value;
  this$static._selector.selected.updateAndNotify(hover, false);
  if (!hover)
    return;
  if ($isSet_0(this$static, ($clinit_Element$Flag() , VISIBLE_2)) && $isSet_0(hover, ENABLED)) {
    $click_0(hover._behave);
    $emit(this$static._itemTriggered, hover);
    $deactivate(this$static);
  }
}

function $open(this$static){
  return resolveStyle(this$static, OPENER).go(this$static, this$static._animator);
}

function Menu(layout){
  $clinit_Menu();
  Elements.call(this, layout);
  this._descendantAdded = new Menu$3(this);
  this._descendantRemoved = new Menu$4(this);
  this._itemListener = new Menu$ItemListener(this);
  this._deactivated = ($clinit_AbstractSignal() , new Signal);
  this._itemTriggered = new Signal;
  this._selector = new Selector;
  this._items = new ArrayList;
  $setHitTester(this.layer, new Menu$5);
  $addConnection($events(this.layer), new Menu$6(this));
  $addConnection(this._childAdded, this._descendantAdded);
  $addConnection(this._childRemoved, this._descendantRemoved);
}

defineClass(622, 34, $intern_48, Menu);
_.getStyleClass = function getStyleClass_9(){
  return Ltripleplay_ui_Menu_2_classLit;
}
;
_.layout = function layout_11(){
  $layout(this);
  if (this._postLayout) {
    $run_1(this._postLayout);
    this._postLayout = null;
  }
}
;
_._active = false;
_._defunct = false;
var CLOSER, FADE_IN, FADE_OUT, OPENER;
var Ltripleplay_ui_Menu_2_classLit = createForClass('tripleplay.ui', 'Menu', 622, Ltripleplay_ui_Elements_2_classLit);
function Menu$1(){
}

defineClass(664, 1, {}, Menu$1);
_.go = function go(menu, animator){
  $setAlpha(menu.layer, 0);
  return $in_0($using($to($add_17(animator, new Animation$One(new AnimBuilder$3(menu.layer))), 1), ($clinit_Interpolator() , EASE_IN)), 200);
}
;
var Ltripleplay_ui_Menu$1_2_classLit = createForClass('tripleplay.ui', 'Menu/1', 664, Ljava_lang_Object_2_classLit);
function Menu$2(){
}

defineClass(665, 1, {}, Menu$2);
_.go = function go_0(menu, animator){
  return $in_0($using($to($add_17(animator, new Animation$One(new AnimBuilder$3(menu.layer))), 0), ($clinit_Interpolator() , EASE_IN)), 40);
}
;
var Ltripleplay_ui_Menu$2_2_classLit = createForClass('tripleplay.ui', 'Menu/2', 665, Ljava_lang_Object_2_classLit);
function $onEmit_30(this$static, elem){
  var child, child$iterator;
  if (instanceOf(elem, 22)) {
    for (child$iterator = elem.iterator(); child$iterator.hasNext();) {
      child = child$iterator.next_0();
      $onEmit_30(this$static, child);
    }
    instanceOf(elem, 34) && this$static.visitElems(elem);
  }
   else 
    instanceOf(elem, 174) && this$static.visitItem(elem);
}

defineClass(1004, 953, {});
_.onEmit = function onEmit_68(elem){
  $onEmit_30(this, elem);
}
;
var Ltripleplay_ui_Menu$DescendingSlot_2_classLit = createForClass('tripleplay.ui', 'Menu/DescendingSlot', 1004, Lreact_Slot_2_classLit);
function Menu$3(this$0_1){
  this.this$02 = this$0_1;
}

defineClass(666, 1004, {}, Menu$3);
_.visitElems = function visitElems(elems){
  $addConnection(elems._childAdded, this.this$02._descendantAdded);
  $addConnection(elems._childRemoved, this.this$02._descendantRemoved);
}
;
_.visitItem = function visitItem(item_0){
  $connectItem(this.this$02, item_0);
}
;
var Ltripleplay_ui_Menu$3_2_classLit = createForClass('tripleplay.ui', 'Menu/3', 666, Ltripleplay_ui_Menu$DescendingSlot_2_classLit);
function Menu$4(this$0_1){
  this.this$02 = this$0_1;
}

defineClass(667, 1004, {}, Menu$4);
_.visitElems = function visitElems_0(elems){
  $removeConnection(elems._childAdded, this.this$02._descendantAdded);
  $removeConnection(elems._childRemoved, this.this$02._descendantRemoved);
}
;
_.visitItem = function visitItem_0(item_0){
  $disconnectItem(this.this$02, item_0);
}
;
var Ltripleplay_ui_Menu$4_2_classLit = createForClass('tripleplay.ui', 'Menu/4', 667, Ltripleplay_ui_Menu$DescendingSlot_2_classLit);
function Menu$5(){
}

defineClass(668, 1, {}, Menu$5);
_.hitTest = function hitTest_0(layer, p){
  var descendant;
  descendant = layer.hitTestDefault(p);
  return !descendant?layer:descendant;
}
;
var Ltripleplay_ui_Menu$5_2_classLit = createForClass('tripleplay.ui', 'Menu/5', 668, Ljava_lang_Object_2_classLit);
function Menu$6(this$0){
  this.this$01 = this$0;
}

defineClass(669, 975, {}, Menu$6);
_.onStart = function onStart_1(iact){
  iact.hitLayer == this.this$01.layer && $deactivate(this.this$01);
}
;
var Ltripleplay_ui_Menu$6_2_classLit = createForClass('tripleplay.ui', 'Menu/6', 669, Lplayn_scene_Pointer$Listener_2_classLit);
function $run_1(this$static){
  $fastForward(this$static.this$01);
  this$static.this$01._complete = new Menu$7$1(this$static);
  this$static.this$01._anim = new Animation$2($add_16($then($open(this$static.this$01)), new Animation$Action(this$static.this$01._complete)));
}

function Menu$7(this$0){
  this.this$01 = this$0;
}

defineClass(670, 1, {}, Menu$7);
_.run = function run_37(){
  $run_1(this);
}
;
var Ltripleplay_ui_Menu$7_2_classLit = createForClass('tripleplay.ui', 'Menu/7', 670, Ljava_lang_Object_2_classLit);
function Menu$7$1(this$1){
  this.this$11 = this$1;
}

defineClass(671, 1, {}, Menu$7$1);
_.run = function run_38(){
  $onOpened(this.this$11.this$01);
}
;
var Ltripleplay_ui_Menu$7$1_2_classLit = createForClass('tripleplay.ui', 'Menu/7/1', 671, Ljava_lang_Object_2_classLit);
function Menu$8(this$0){
  this.this$01 = this$0;
}

defineClass(672, 1, {}, Menu$8);
_.run = function run_39(){
  $onClosed(this.this$01);
}
;
var Ltripleplay_ui_Menu$8_2_classLit = createForClass('tripleplay.ui', 'Menu/8', 672, Ljava_lang_Object_2_classLit);
function Menu$ItemListener(this$0){
  this.this$01 = this$0;
  this.mouse = new Menu$ItemListener$1;
  this.pointer = new Menu$ItemListener$2(this);
}

defineClass(661, 1, {}, Menu$ItemListener);
var Ltripleplay_ui_Menu$ItemListener_2_classLit = createForClass('tripleplay.ui', 'Menu/ItemListener', 661, Ljava_lang_Object_2_classLit);
function Menu$ItemListener$1(){
}

defineClass(662, 1005, {}, Menu$ItemListener$1);
var Ltripleplay_ui_Menu$ItemListener$1_2_classLit = createForClass('tripleplay.ui', 'Menu/ItemListener/1', 662, Lplayn_scene_Mouse$Listener_2_classLit);
function Menu$ItemListener$2(this$1){
  this.this$11 = this$1;
}

defineClass(663, 975, {}, Menu$ItemListener$2);
_.onDrag = function onDrag_1(iact){
  $onPointerDrag(this.this$11.this$01, iact.event_0);
}
;
_.onEnd = function onEnd_1(iact){
  $onPointerEnd(this.this$11.this$01, iact.event_0);
}
;
_.onStart = function onStart_2(iact){
  $onPointerDrag(this.this$11.this$01, iact.event_0);
}
;
var Ltripleplay_ui_Menu$ItemListener$2_2_classLit = createForClass('tripleplay.ui', 'Menu/ItemListener/2', 663, Lplayn_scene_Pointer$Listener_2_classLit);
function $clinit_MenuHost(){
  $clinit_MenuHost = emptyMethod;
  TRIGGER_POINT = ($clinit_Style() , new Style$3(true, new MenuHost$1(($clinit_BoxPoint() , TL))));
  POPUP_ORIGIN = new Style$3(true, TL);
}

function $popup(this$static, pop_0){
  var activation, cleanup, menuRoot, psize;
  !pop_0.bounds && $inScreenArea(pop_0, this$static._screenArea);
  menuRoot = $addRoot(this$static.iface, new MenuHost$MenuRoot(this$static.iface, this$static._stylesheet, pop_0));
  $add_13(this$static.rootLayer, menuRoot.layer);
  psize = (!menuRoot._preferredSize_0 && (menuRoot._preferredSize_0 = $computeSize(menuRoot, 0, 0)) , menuRoot._preferredSize_0);
  $setSize_6(menuRoot, psize.width_0, psize.height_0);
  activation = new MenuHost$Activation(pop_0);
  cleanup = new MenuHost$4(this$static, pop_0, menuRoot, activation);
  activation.deactivated = $addConnection(pop_0.menu._deactivated, new MenuHost$5(this$static, cleanup));
  activation.triggerRemoved = $addConnection($hierarchyChanged(pop_0.trigger), new MenuHost$6(pop_0));
  !!this$static._active && $deactivate(this$static._active.pop_0.menu);
  $init_2(pop_0.menu, this$static.iface.anim);
  this$static._active = activation;
  $activate_0(pop_0.menu);
}

function MenuHost(iface, rootLayer){
  this._stylesheet = $create_1(new Stylesheet$Builder);
  this._screenArea = new Rectangle;
  this.iface = iface;
  this.rootLayer = rootLayer;
}

function MenuHost_0(iface, root){
  $clinit_MenuHost();
  MenuHost.call(this, iface, root.layer);
  this._stylesheet = root._sheet;
  $setSize_4(this._screenArea, iface.plat.graphics.viewSize);
}

function avoidPoint(outer, inner, fingerprint){
  $clinit_MenuHost();
  var best, bestDist, checkBounds, edge;
  checkBounds = new Rectangle;
  best = new Rectangle_1(inner);
  edge = fingerprint.x_0;
  $setBounds(checkBounds, outer.x_0, outer.y_0, edge - outer.x_0, outer.height_0);
  bestDist = compareAndConfine(checkBounds, inner, best, $intern_77);
  edge = fingerprint.x_0 + fingerprint.width_0;
  $setBounds(checkBounds, edge, outer.y_0, outer.width_0 - edge, outer.height_0);
  bestDist = compareAndConfine(checkBounds, inner, best, bestDist);
  edge = fingerprint.y_0;
  $setBounds(checkBounds, outer.x_0, outer.y_0, outer.width_0, edge - outer.y_0);
  bestDist = compareAndConfine(checkBounds, inner, best, bestDist);
  edge = fingerprint.y_0 + fingerprint.height_0;
  $setBounds(checkBounds, outer.x_0, edge, outer.width_0, outer.height_0 - edge);
  bestDist = compareAndConfine(checkBounds, inner, best, bestDist);
  $setBounds(inner, best.x_0, best.y_0, best.width_0, best.height_0);
  return bestDist < $intern_77;
}

function compareAndConfine(outer, inner, best, bestDist){
  var confined, dist, dx, dy;
  if (outer.width_0 <= inner.width_0 || outer.height_0 < inner.height_0)
    return bestDist;
  confined = confine(outer, new Rectangle_1(inner));
  dx = confined.x_0 - inner.x_0;
  dy = confined.y_0 - inner.y_0;
  dist = dx * dx + dy * dy;
  if (dist < bestDist) {
    $setBounds(best, confined.x_0, confined.y_0, confined.width_0, confined.height_0);
    bestDist = dist;
  }
  return bestDist;
}

function confine(outer, inner){
  $clinit_MenuHost();
  var dx, dy;
  dx = outer.x_0 - inner.x_0;
  dy = outer.y_0 - inner.y_0;
  dx <= 0 && (dx = min_0(0, outer.x_0 + outer.width_0 - (inner.x_0 + inner.width_0)));
  dy <= 0 && (dy = min_0(0, outer.y_0 + outer.height_0 - (inner.y_0 + inner.height_0)));
  inner.x_0 += dx;
  inner.y_0 += dy;
  return inner;
}

defineClass(359, 1, {}, MenuHost_0);
var POPUP_ORIGIN, TRIGGER_POINT;
var Ltripleplay_ui_MenuHost_2_classLit = createForClass('tripleplay.ui', 'MenuHost', 359, Ljava_lang_Object_2_classLit);
function $getLocation(this$static, trigger){
  return $resolve_1(this$static.val$location1, trigger, new Point);
}

function MenuHost$1(val$location){
  this.val$location1 = val$location;
}

defineClass(361, 1, {}, MenuHost$1);
var Ltripleplay_ui_MenuHost$1_2_classLit = createForClass('tripleplay.ui', 'MenuHost/1', 361, Ljava_lang_Object_2_classLit);
function MenuHost$4(this$0, val$pop, val$menuRoot, val$activation){
  this.this$01 = this$0;
  this.val$pop2 = val$pop;
  this.val$menuRoot3 = val$menuRoot;
  this.val$activation4 = val$activation;
}

defineClass(931, 968, {}, MenuHost$4);
_.onEmit_0 = function onEmit_69(){
  if (this.val$pop2.menu._parent == this.val$menuRoot3) {
    $setConstraint(this.val$pop2.menu, null);
    this.val$pop2._retain?$remove_6(this.val$menuRoot3, this.val$pop2.menu):$destroy(this.val$menuRoot3, this.val$pop2.menu);
    $hideNativeOverlays(($clinit_TPPlatform() , $clinit_TPPlatform() , _instance), null);
  }
  $clear_3(this.val$activation4);
  $disposeRoot(this.this$01.iface, this.val$menuRoot3);
  !!this.this$01._active && this.this$01._active.pop_0 == this.val$pop2 && (this.this$01._active = null);
}
;
var Ltripleplay_ui_MenuHost$4_2_classLit = createForClass('tripleplay.ui', 'MenuHost/4', 931, Lreact_UnitSlot_2_classLit);
function $onEmit_31(this$static){
  $once($addConnection(this$static.this$01.iface.frame_0, this$static.val$cleanup2));
}

function MenuHost$5(this$0, val$cleanup){
  this.this$01 = this$0;
  this.val$cleanup2 = val$cleanup;
}

defineClass(932, 953, {}, MenuHost$5);
_.onEmit = function onEmit_70(event_0){
  $onEmit_31(this, event_0);
}
;
var Ltripleplay_ui_MenuHost$5_2_classLit = createForClass('tripleplay.ui', 'MenuHost/5', 932, Lreact_Slot_2_classLit);
function MenuHost$6(val$pop){
  this.val$pop2 = val$pop;
}

defineClass(933, 953, {}, MenuHost$6);
_.onEmit = function onEmit_71(event_0){
  event_0.value_0 || $deactivate(this.val$pop2.menu);
}
;
var Ltripleplay_ui_MenuHost$6_2_classLit = createForClass('tripleplay.ui', 'MenuHost/6', 933, Lreact_Slot_2_classLit);
function $clear_3(this$static){
  !!this$static.triggerRemoved && $close_7(this$static.triggerRemoved);
  !!this$static.deactivated && $close_7(this$static.deactivated);
  $clinit_Closeable$Util();
  this$static.triggerRemoved = null;
  this$static.deactivated = null;
}

function MenuHost$Activation(pop_0){
  $clinit_Closeable$Util();
  this.pop_0 = pop_0;
}

defineClass(930, 1, {}, MenuHost$Activation);
var Ltripleplay_ui_MenuHost$Activation_2_classLit = createForClass('tripleplay.ui', 'MenuHost/Activation', 930, Ljava_lang_Object_2_classLit);
function $setLocation_2(this$static, x_0, y_0){
  $setTranslation(this$static.layer, ifloor(x_0), ifloor(y_0));
}

function $setSize_6(this$static, width_0, height){
  $setSize_1(this$static._size, width_0, height);
  $invalidate(this$static);
  return this$static;
}

function $setSize_7(this$static, size_0){
  return $setSize_6(this$static, size_0.width_0, size_0.height_0);
}

function Root(iface, layout, sheet_0){
  Elements.call(this, layout);
  this.validated = ($clinit_AbstractSignal() , new Signal);
  this.iface = iface;
  this._sheet = sheet_0;
  $set_1(this, ($clinit_Element$Flag() , HIT_ABSORB), true);
}

defineClass(315, 34, $intern_90, Root);
_.close_0 = function close_20(){
  $disposeRoot(this.iface, this);
}
;
_.getStyleClass = function getStyleClass_10(){
  return Ltripleplay_ui_Root_2_classLit;
}
;
_.preferredSize_0 = function preferredSize_0(hintX, hintY){
  return !this._preferredSize_0 && (this._preferredSize_0 = $computeSize(this, hintX, hintY)) , this._preferredSize_0;
}
;
_.root_0 = function root_1(){
  return this;
}
;
_.setLocation = function setLocation_0(x_0, y_0){
  $setLocation_2(this, x_0, y_0);
}
;
_.setSize = function setSize_0(width_0, height){
  return $setSize_6(this, width_0, height);
}
;
_.validate = function validate_2(){
  $validate(this);
}
;
_.wasValidated = function wasValidated_0(){
  $emit(this.validated, this);
}
;
var Ltripleplay_ui_Root_2_classLit = createForClass('tripleplay.ui', 'Root', 315, Ltripleplay_ui_Elements_2_classLit);
function MenuHost$MenuRoot(iface, sheet_0, pop_0){
  Root.call(this, iface, new MenuHost$RootLayout($hasTouch()), sheet_0);
  this.pop_0 = pop_0;
  $setDepth(this.layer, 1);
  $setHitTester(this.layer, null);
  $add_8(this, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [pop_0.menu]));
}

defineClass(928, 315, $intern_90, MenuHost$MenuRoot);
var Ltripleplay_ui_MenuHost$MenuRoot_2_classLit = createForClass('tripleplay.ui', 'MenuHost/MenuRoot', 928, Ltripleplay_ui_Root_2_classLit);
function $inScreenArea(this$static, area){
  this$static.bounds = new Rectangle_1(area);
  return this$static;
}

function MenuHost$Pop(trigger, menu){
  this.menu = menu;
  this.trigger = trigger;
}

defineClass(360, 1, {}, MenuHost$Pop);
_._retain = false;
var Ltripleplay_ui_MenuHost$Pop_2_classLit = createForClass('tripleplay.ui', 'MenuHost/Pop', 360, Ljava_lang_Object_2_classLit);
function MenuHost$RootLayout(hasTouch){
  this._hasTouch = hasTouch;
}

defineClass(929, 998, {}, MenuHost$RootLayout);
_.computeSize_1 = function computeSize_4(elems, hintX, hintY){
  return new Dimension_1(elems.childAt(0).preferredSize_0(hintX, hintY));
}
;
_.layout_2 = function layout_12(elems, left, top_0, width_0, height){
  var bounds, fingerBox, fingerRadius, ibounds, menuRoot, mpos, origin, pop_0, position, screenBounds, tpos;
  if (elems.childCount() == 0)
    return;
  menuRoot = elems;
  pop_0 = menuRoot.pop_0;
  position = resolveStyle(pop_0.trigger, ($clinit_MenuHost() , TRIGGER_POINT));
  origin = resolveStyle(pop_0.trigger, POPUP_ORIGIN);
  tpos = $getLocation(position, pop_0.trigger);
  mpos = $resolve(origin, 0, 0, width_0, height, new Point);
  bounds = new Rectangle_0(tpos.x_0 - mpos.x_0, tpos.y_0 - mpos.y_0, width_0, height);
  confine(pop_0.bounds, bounds);
  if (bounds.width_0 > 4 && bounds.height_0 > 4) {
    ibounds = new Rectangle_1(bounds);
    ibounds.x_0 -= -2;
    ibounds.y_0 -= -2;
    ibounds.width_0 += -4;
    ibounds.height_0 += -4;
    fingerRadius = this._hasTouch?10:3;
    fingerBox = new Rectangle_0(tpos.x_0 - fingerRadius, tpos.y_0 - fingerRadius, fingerRadius * 2, fingerRadius * 2);
    avoidPoint(pop_0.bounds, ibounds, fingerBox) || $warning(($clinit_Log_0() , log_2), "Oh god, menu doesn't fit", initValues(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_1, 1, 3, ['menu', pop_0.menu]));
    $setLocation(bounds, ibounds.x_0 - 2, ibounds.y_0 - 2);
  }
  screenBounds = new Rectangle_1(bounds);
  $setLocation_0(bounds, screenToLayer(elems.layer, bounds.x_0, bounds.y_0));
  $setBounds_0(elems.childAt(0), bounds.x_0, bounds.y_0, bounds.width_0, bounds.height_0);
  pop_0.menu._defunct || $hideNativeOverlays(($clinit_TPPlatform() , $clinit_TPPlatform() , _instance), screenBounds);
}
;
_._hasTouch = false;
var Ltripleplay_ui_MenuHost$RootLayout_2_classLit = createForClass('tripleplay.ui', 'MenuHost/RootLayout', 929, Ltripleplay_ui_Layout_2_classLit);
function MenuItem$1($anonymous0){
  Behavior$Toggle.call(this, $anonymous0);
}

defineClass(674, 242, {}, MenuItem$1);
_.onClick = function onClick_5(iact){
  !!this._actionSound && this._actionSound.play_0();
  $emit(this.clicked, this._owner);
}
;
_.onDrag = function onDrag_2(iact){
}
;
_.onEnd = function onEnd_2(iact){
}
;
_.onStart = function onStart_3(iact){
}
;
var Ltripleplay_ui_MenuItem$1_2_classLit = createForClass('tripleplay.ui', 'MenuItem/1', 674, Ltripleplay_ui_Behavior$Toggle_2_classLit);
function $clinit_Scroller(){
  $clinit_Scroller = emptyMethod;
  BAR_TYPE = ($clinit_Style() , new Style$3(true, new Scroller$1));
  ELEMENT_BUFFER = new Style$3(true, new Dimension_0(0, 0));
}

function $scroll(this$static, x_0, y_0){
  x_0 = max_1(0, min_0(x_0, this$static.hrange._max));
  y_0 = max_1(0, min_0(y_0, this$static.vrange._max));
  $setPosition_0(this$static._flicker, x_0, y_0);
}

function $setBehavior(this$static){
  $setOn(this$static.hrange, false);
  $setOn(this$static.vrange, true);
  $invalidate(this$static);
  return this$static;
}

function $update_7(this$static, delta){
  $update_10(this$static._flicker, delta);
  $update_8(this$static, false);
  !!this$static._bars && $update_9(this$static._bars, delta);
}

function $update_8(this$static, force){
  var dx, dy, pos;
  pos = this$static._flicker._position;
  dx = $set_11(this$static.hrange, pos.x_0);
  dy = $set_11(this$static.vrange, pos.y_0);
  if (dx || dy || force) {
    $setPosition(this$static._clippable, -pos.x_0, -pos.y_0);
    force || $updateVisibility(this$static);
    !!this$static._bars && $updatePosition(this$static._bars);
  }
}

function $updateBars(this$static, barType){
  if (this$static._bars) {
    if (this$static._barType == barType)
      return;
    $close(this$static._bars._layer);
    this$static._bars = null;
  }
  this$static._barType = barType;
  !!this$static._barType && (this$static._bars = new Scroller$TouchBars(this$static));
}

function $updateVisibility(this$static){
  var bx, by, child, child$iterator, hei, size_0, wid, x_0, y_0;
  if (!instanceOf(this$static.content_0, 22)) {
    return;
  }
  x_0 = this$static.hrange._cpos;
  y_0 = this$static.vrange._cpos;
  wid = this$static.hrange._size;
  hei = this$static.vrange._size;
  bx = this$static._elementBuffer.width_0;
  by = this$static._elementBuffer.height_0;
  for (child$iterator = this$static.content_0.iterator(); child$iterator.hasNext();) {
    child = child$iterator.next_0();
    size_0 = child._size;
    $isSet_0(child, ($clinit_Element$Flag() , VISIBLE_2)) && $setVisible(child.layer, child.layer.transform.tx - bx < x_0 + wid && child.layer.transform.tx + size_0.width_0 + bx > x_0 && child.layer.transform.ty - by < y_0 + hei && child.layer.transform.ty + size_0.height_0 + by > y_0);
  }
}

function Scroller(content_0){
  $clinit_Scroller();
  Container.call(this);
  this._children = ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST);
  $set_1(this, ($clinit_Element$Flag() , HIT_DESCEND), true);
  this.hrange = new Scroller$Range;
  this.vrange = new Scroller$Range;
  this._contentSize = new Dimension;
  $setLayout(this, $gap($offPolicy($stretchByDefault(($clinit_AxisLayout() , new AxisLayout$Horizontal)), ($clinit_AxisLayout$Policy() , STRETCH)), 0));
  $initChildren(this, new Arrays$ArrayList(initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [this._scroller = new Scroller$3(this, new Scroller$ScrollLayout(this))])));
  $add_8(this._scroller, initValues(getClassLiteralForArray(Ltripleplay_ui_Element_2_classLit, 1), $intern_1, 8, 0, [this.content_0 = content_0]));
  this._clippable = new Scroller$4(this);
  $set_1(this, HIT_ABSORB, true);
  $addConnection($events(this.layer), new Scroller$5);
  $addConnection($events(this.layer), this._flicker = new XYFlicker);
}

defineClass(198, 623, $intern_47, Scroller);
_.createLayoutData = function createLayoutData_4(hintX, hintY){
  return new Scroller$BarsLayoutData(this);
}
;
_.getStyleClass = function getStyleClass_11(){
  return Ltripleplay_ui_Scroller_2_classLit;
}
;
_.layout_0 = function layout_13(ldata, left, top_0, width_0, height){
  this._elementBuffer = resolveStyle(this, ELEMENT_BUFFER);
  $updateBars(this, ldata.barType);
  $layout_0(this, left, top_0, width_0, height);
  !!this._bars && $add_13(this.layer, $setTranslation($setDepth(this._bars._layer, 1), left, top_0));
}
;
_.wasAdded = function wasAdded_5(){
  $wasAdded_0(this);
  this._upconn = $addConnection((!this._parent?null:this._parent.root_0()).iface.frame_0, new Scroller$6(this));
  $invalidate(this);
}
;
_.wasRemoved = function wasRemoved_3(){
  $close_7(this._upconn);
  $updateBars(this, null);
  $wasRemoved_0(this);
}
;
var BAR_TYPE, ELEMENT_BUFFER;
var Ltripleplay_ui_Scroller_2_classLit = createForClass('tripleplay.ui', 'Scroller', 198, Ltripleplay_ui_Composite_2_classLit);
defineClass(1013, 1, {});
var Ltripleplay_ui_Scroller$BarType_2_classLit = createForClass('tripleplay.ui', 'Scroller/BarType', 1013, Ljava_lang_Object_2_classLit);
function Scroller$1(){
}

defineClass(732, 1013, {}, Scroller$1);
var Ltripleplay_ui_Scroller$1_2_classLit = createForClass('tripleplay.ui', 'Scroller/1', 732, Ltripleplay_ui_Scroller$BarType_2_classLit);
function Scroller$3(this$0, $anonymous0){
  this.this$01 = this$0;
  Group.call(this, $anonymous0);
}

defineClass(733, 20, $intern_48, Scroller$3);
_.createLayer = function createLayer_0(){
  return new GroupLayer_0;
}
;
_.layout = function layout_14(){
  $layout(this);
  $updateVisibility(this.this$01);
}
;
var Ltripleplay_ui_Scroller$3_2_classLit = createForClass('tripleplay.ui', 'Scroller/3', 733, Ltripleplay_ui_Group_2_classLit);
function $setPosition(this$static, x_0, y_0){
  $setTranslation(this$static.this$01.content_0.layer, x_0, y_0);
}

function Scroller$4(this$0){
  this.this$01 = this$0;
}

defineClass(734, 1, {}, Scroller$4);
var Ltripleplay_ui_Scroller$4_2_classLit = createForClass('tripleplay.ui', 'Scroller/4', 734, Ljava_lang_Object_2_classLit);
function Scroller$5(){
}

defineClass(735, 1005, {}, Scroller$5);
var Ltripleplay_ui_Scroller$5_2_classLit = createForClass('tripleplay.ui', 'Scroller/5', 735, Lplayn_scene_Mouse$Listener_2_classLit);
function Scroller$6(this$0){
  this.this$01 = this$0;
}

defineClass(736, 953, {}, Scroller$6);
_.onEmit = function onEmit_72(clock){
  $update_7(this.this$01, clock.dt);
}
;
var Ltripleplay_ui_Scroller$6_2_classLit = createForClass('tripleplay.ui', 'Scroller/6', 736, Lreact_Slot_2_classLit);
defineClass(727, 1, $intern_72);
_.close_0 = function close_21(){
  $close(this._layer);
}
;
var Ltripleplay_ui_Scroller$Bars_2_classLit = createForClass('tripleplay.ui', 'Scroller/Bars', 727, Ljava_lang_Object_2_classLit);
function Scroller$BarsLayoutData(this$0){
  this.this$01 = this$0;
  Element$LayoutData.call(this, this$0);
  this.barType = resolveStyle(this.this$01, ($clinit_Scroller() , BAR_TYPE));
}

defineClass(729, 150, {}, Scroller$BarsLayoutData);
var Ltripleplay_ui_Scroller$BarsLayoutData_2_classLit = createForClass('tripleplay.ui', 'Scroller/BarsLayoutData', 729, Ltripleplay_ui_Element$LayoutData_2_classLit);
function $contentSize(this$static){
  return this$static._on?this$static._csize:this$static._size;
}

function $extendHint(this$static, hint){
  return this$static._on?100000:hint;
}

function $set_11(this$static, cpos){
  if (cpos == this$static._cpos)
    return false;
  this$static._cpos = cpos;
  this$static._pos = this$static._max == 0?0:cpos / this$static._max * (this$static._size - this$static._extent);
  return true;
}

function $setOn(this$static, on){
  this$static._on = on;
}

function $setRange(this$static, viewSize, contentSize){
  this$static._size = viewSize;
  this$static._csize = contentSize;
  if (!this$static._on || this$static._size >= this$static._csize) {
    this$static._max = this$static._extent = this$static._pos = this$static._cpos = 0;
    return 0;
  }
   else {
    this$static._max = this$static._csize - this$static._size;
    this$static._extent = this$static._size * this$static._size / this$static._csize;
    this$static._pos = min_0(this$static._pos, this$static._size - this$static._extent);
    this$static._cpos = this$static._pos / (this$static._size - this$static._extent) * this$static._max;
    return this$static._cpos;
  }
}

function Scroller$Range(){
}

defineClass(331, 1, {}, Scroller$Range);
_._cpos = 0;
_._csize = 0;
_._extent = 0;
_._max = 0;
_._on = true;
_._pos = 0;
_._size = 0;
var Ltripleplay_ui_Scroller$Range_2_classLit = createForClass('tripleplay.ui', 'Scroller/Range', 331, Ljava_lang_Object_2_classLit);
function Scroller$ScrollLayout(this$0){
  this.this$01 = this$0;
}

defineClass(730, 998, {}, Scroller$ScrollLayout);
_.computeSize_1 = function computeSize_5(elems, hintX, hintY){
  $setSize_2(this.this$01._contentSize, elems.childAt(0).preferredSize_0($extendHint(this.this$01.hrange, hintX), $extendHint(this.this$01.vrange, hintY)));
  return new Dimension_1(this.this$01._contentSize);
}
;
_.layout_2 = function layout_15(elems, left, top_0, width_0, height){
  this.this$01.hrange._on && this.this$01._contentSize.width_0 > width_0 && (height -= 0);
  this.this$01.vrange._on && this.this$01._contentSize.height_0 > height && (width_0 -= 0);
  left = $setRange(this.this$01.hrange, width_0, this.this$01._contentSize.width_0);
  top_0 = $setRange(this.this$01.vrange, height, this.this$01._contentSize.height_0);
  $setBounds_0(this.this$01.content_0, 0, 0, $contentSize(this.this$01.hrange), $contentSize(this.this$01.vrange));
  $setSize_0(this.this$01._scroller.layer, width_0, height);
  $reset_0(this.this$01._flicker, this.this$01.hrange._max, this.this$01.vrange._max);
  $scroll(this.this$01, left, top_0);
  $update_8(this.this$01, true);
}
;
var Ltripleplay_ui_Scroller$ScrollLayout_2_classLit = createForClass('tripleplay.ui', 'Scroller/ScrollLayout', 730, Ltripleplay_ui_Layout_2_classLit);
function $drawBar(surface, x_0, y_0, w, h){
  $addQuad_0(surface.batch, surface.colorTex, combine(surface.fillColor, surface.tint), surface.lastTrans, x_0, y_0, w, h);
}

function $setBarAlpha(this$static, alpha_0){
  this$static._alpha = min_0(this$static._topAlpha, 0 > alpha_0?0:alpha_0);
  $setAlpha(this$static._layer, min_0(this$static._alpha, 1));
  $setVisible(this$static._layer, this$static._alpha > 0);
}

function $update_9(this$static, delta){
  this$static._alpha > 0 && this$static._fadeSpeed > 0 && $setBarAlpha(this$static, this$static._alpha - this$static._fadeSpeed * delta);
}

function $updatePosition(this$static){
  $setBarAlpha(this$static, this$static._topAlpha);
}

function Scroller$TouchBars(scroller){
  this._scroller = scroller;
  this._color = $intern_12;
  this._size = 5;
  this._topAlpha = 3;
  this._fadeSpeed = 0.0015;
  this._layer = new Scroller$TouchBars$1(this);
}

defineClass(728, 727, $intern_72, Scroller$TouchBars);
_._alpha = 0;
_._color = 0;
_._fadeSpeed = 0;
_._size = 0;
_._topAlpha = 0;
var Ltripleplay_ui_Scroller$TouchBars_2_classLit = createForClass('tripleplay.ui', 'Scroller/TouchBars', 728, Ltripleplay_ui_Scroller$Bars_2_classLit);
function Scroller$TouchBars$1(this$1){
  this.this$11 = this$1;
  Layer.call(this);
}

defineClass(731, 21, $intern_59, Scroller$TouchBars$1);
_.paintImpl = function paintImpl_8(surface){
  var h, v;
  $add_0(surface.transformStack, surface.lastTrans = $copy(surface.lastTrans));
  $setFillColor(surface, this.this$11._color);
  h = this.this$11._scroller.hrange;
  v = this.this$11._scroller.vrange;
  h._max != 0 && $drawBar(surface, h._pos, v._size - this.this$11._size, h._extent, this.this$11._size);
  v._max != 0 && $drawBar(surface, h._size - this.this$11._size, v._pos, this.this$11._size, v._extent);
  $restoreTx(surface);
}
;
var Ltripleplay_ui_Scroller$TouchBars$1_2_classLit = createForClass('tripleplay.ui', 'Scroller/TouchBars/1', 731, Lplayn_scene_Layer_2_classLit);
function $add_24(this$static, elem, more){
  var e, e$index, e$max;
  $onEmit_32(this$static._addSlot, elem);
  for (e$index = 0 , e$max = more.length; e$index < e$max; ++e$index) {
    e = more[e$index];
    $onEmit_32(this$static._addSlot, e);
  }
  return this$static;
}

function Selector(){
  this.selected = ($clinit_AbstractValue() , new Value(null));
  this._addSlot = new Selector$1(this);
  new Selector$2(this);
  this._clickSlot = new Selector$3(this);
  $addConnection(this.selected, new Selector$4);
}

defineClass(269, 1, {}, Selector);
_._preventDeselection = false;
var Ltripleplay_ui_Selector_2_classLit = createForClass('tripleplay.ui', 'Selector', 269, Ljava_lang_Object_2_classLit);
function $onEmit_32(this$static, child){
  instanceOf(child, 160) && $addConnection(child.clicked_0(), this$static.this$01._clickSlot);
}

function Selector$1(this$0){
  this.this$01 = this$0;
}

defineClass(905, 953, {}, Selector$1);
_.onEmit = function onEmit_73(child){
  $onEmit_32(this, child);
}
;
var Ltripleplay_ui_Selector$1_2_classLit = createForClass('tripleplay.ui', 'Selector/1', 905, Lreact_Slot_2_classLit);
function Selector$2(this$0){
  this.this$01 = this$0;
}

defineClass(906, 953, {}, Selector$2);
_.onEmit = function onEmit_74(removed){
  instanceOf(removed, 160) && $removeConnection(removed.clicked_0(), this.this$01._clickSlot);
  maskUndefined(this.this$01.selected._value) === maskUndefined(removed) && this.this$01.selected.updateAndNotify(null, false);
}
;
var Ltripleplay_ui_Selector$2_2_classLit = createForClass('tripleplay.ui', 'Selector/2', 906, Lreact_Slot_2_classLit);
function $onEmit_33(this$static, clicked){
  var sel;
  sel = clicked.selected_0();
  if (this$static.this$01._preventDeselection) {
    if (!sel._value.value_0) {
      sel.updateAndNotify(($clinit_Boolean() , $clinit_Boolean() , TRUE), false);
      return;
    }
  }
  this$static.this$01.selected.updateAndNotify(sel._value.value_0?clicked:null, false);
}

function Selector$3(this$0){
  this.this$01 = this$0;
}

defineClass(907, 953, {}, Selector$3);
_.onEmit = function onEmit_75(clicked){
  $onEmit_33(this, clicked);
}
;
var Ltripleplay_ui_Selector$3_2_classLit = createForClass('tripleplay.ui', 'Selector/3', 907, Lreact_Slot_2_classLit);
function Selector$4(){
}

defineClass(908, 1, {}, Selector$4);
_.onChange = function onChange_9(selected, deselected){
  !!deselected && deselected.selected_0().updateAndNotify(($clinit_Boolean() , $clinit_Boolean() , FALSE), false);
  !!selected && selected.selected_0().updateAndNotify(($clinit_Boolean() , $clinit_Boolean() , TRUE), false);
}
;
var Ltripleplay_ui_Selector$4_2_classLit = createForClass('tripleplay.ui', 'Selector/4', 908, Ljava_lang_Object_2_classLit);
function Shim(width_0, height){
  Shim_0.call(this, new Dimension_0(width_0, height));
}

function Shim_0(size_0){
  SizableWidget.call(this, size_0.width_0, size_0.height_0);
}

defineClass(41, 201, $intern_49, Shim);
_.getStyleClass = function getStyleClass_12(){
  return Ltripleplay_ui_Shim_2_classLit;
}
;
var Ltripleplay_ui_Shim_2_classLit = createForClass('tripleplay.ui', 'Shim', 41, Ltripleplay_ui_SizableWidget_2_classLit);
function SizableGroup(layout, wid, hei){
  Group.call(this, layout);
  this.preferredSize = new DimensionValue;
  $updateAndNotify(this.preferredSize, new Dimension_0(wid, hei), false);
  $addConnection(this.preferredSize, new Element$6(this, false));
}

defineClass(273, 20, $intern_48, SizableGroup);
_.createLayoutData = function createLayoutData_5(hintX, hintY){
  return new Element$SizableLayoutData(this, new Element$LayoutData(this), this.preferredSize._value);
}
;
var Ltripleplay_ui_SizableGroup_2_classLit = createForClass('tripleplay.ui', 'SizableGroup', 273, Ltripleplay_ui_Group_2_classLit);
function $clinit_Style(){
  $clinit_Style = emptyMethod;
  COLOR = new Style$1;
  HIGHLIGHT = new Style$2;
  SHADOW = new Style$3(true, valueOf(1426063360));
  SHADOW_X = new Style$3(true, new Float(2));
  SHADOW_Y = new Style$3(true, new Float(2));
  GRADIENT_COLOR = new Style$3(true, valueOf(-3735552));
  GRADIENT_TYPE = new Style$GradientTypeStyle;
  OUTLINE_WIDTH = new Style$3(true, new Float(1));
  OUTLINE_CAP = new Style$3(true, ($clinit_Canvas$LineCap() , ROUND_1));
  OUTLINE_JOIN = new Style$3(true, ($clinit_Canvas$LineJoin() , ROUND_2));
  HALIGN = new Style$HAlignStyle;
  VALIGN = new Style$VAlignStyle;
  FONT_0 = new Style$3(true, new Font('Helvetica', 16));
  TEXT_WRAP = new Style$Flag(false, false);
  TEXT_EFFECT = new Style$TextEffectStyle;
  UNDERLINE = new Style$Flag(true, false);
  AUTO_SHRINK = new Style$Flag(false, false);
  BACKGROUND = new Style$3(false, new BlankBackground);
  ICON_POS = new Style$PosStyle;
  ICON_GAP = new Style$3(false, valueOf(2));
  ICON_CUDDLE = new Style$Flag(false, false);
  ICON_EFFECT = new Style$3(false, ($clinit_IconEffect() , NONE_0));
  ACTION_SOUND = new Style$3(false, null);
}

function Style(inherited){
  this.inherited = inherited;
}

function toAlignment(align_0){
  $clinit_Style();
  switch (align_0.ordinal) {
    default:case 0:
      return $clinit_TextBlock$Align() , LEFT_1;
    case 1:
      return $clinit_TextBlock$Align() , RIGHT_1;
    case 2:
      return $clinit_TextBlock$Align() , CENTER;
  }
}

defineClass(96, 1, {});
_.inherited = false;
var ACTION_SOUND, AUTO_SHRINK, BACKGROUND, COLOR, FONT_0, GRADIENT_COLOR, GRADIENT_TYPE, HALIGN, HIGHLIGHT, ICON_CUDDLE, ICON_EFFECT, ICON_GAP, ICON_POS, OUTLINE_CAP, OUTLINE_JOIN, OUTLINE_WIDTH, SHADOW, SHADOW_X, SHADOW_Y, TEXT_EFFECT, TEXT_WRAP, UNDERLINE, VALIGN;
var Ltripleplay_ui_Style_2_classLit = createForClass('tripleplay.ui', 'Style', 96, Ljava_lang_Object_2_classLit);
function Style$1(){
  Style.call(this, true);
}

defineClass(644, 96, {}, Style$1);
_.getDefault = function getDefault(elem){
  return valueOf($isSet_0(elem, ($clinit_Element$Flag() , ENABLED))?$intern_45:-10066330);
}
;
var Ltripleplay_ui_Style$1_2_classLit = createForClass('tripleplay.ui', 'Style/1', 644, Ltripleplay_ui_Style_2_classLit);
function Style$2(){
  Style.call(this, true);
}

defineClass(645, 96, {}, Style$2);
_.getDefault = function getDefault_0(elem){
  return valueOf($isSet_0(elem, ($clinit_Element$Flag() , ENABLED))?-1426063361:-1429418804);
}
;
var Ltripleplay_ui_Style$2_2_classLit = createForClass('tripleplay.ui', 'Style/2', 645, Ltripleplay_ui_Style_2_classLit);
function Style$3($anonymous0, val$defaultValue){
  $clinit_Style();
  this.val$defaultValue2 = val$defaultValue;
  Style.call(this, $anonymous0);
}

defineClass(35, 96, {}, Style$3);
_.getDefault = function getDefault_1(elem){
  return this.val$defaultValue2;
}
;
var Ltripleplay_ui_Style$3_2_classLit = createForClass('tripleplay.ui', 'Style/3', 35, Ltripleplay_ui_Style_2_classLit);
function Style$Binding(style, value_0){
  this.style_0 = style;
  this.value_0 = value_0;
}

defineClass(6, 1, {6:1}, Style$Binding);
var Ltripleplay_ui_Style$Binding_2_classLit = createForClass('tripleplay.ui', 'Style/Binding', 6, Ljava_lang_Object_2_classLit);
function Style$Flag(inherited, defaultVal){
  $clinit_Style();
  Style.call(this, inherited);
  new Style$Binding(this, ($clinit_Boolean() , $clinit_Boolean() , FALSE));
  this.on = new Style$Binding(this, (null , TRUE));
  this._default = defaultVal?TRUE:FALSE;
}

defineClass(97, 96, {}, Style$Flag);
_.getDefault = function getDefault_2(mode){
  return this._default;
}
;
var Ltripleplay_ui_Style$Flag_2_classLit = createForClass('tripleplay.ui', 'Style/Flag', 97, Ltripleplay_ui_Style_2_classLit);
function Style$GradientTypeStyle(){
  Style.call(this, true);
  new Style$Binding(this, ($clinit_EffectRenderer$Gradient$Type() , BOTTOM_1));
  new Style$Binding(this, TOP_1);
  new Style$Binding(this, CENTER_3);
}

defineClass(632, 96, {}, Style$GradientTypeStyle);
_.getDefault = function getDefault_3(elem){
  return $clinit_EffectRenderer$Gradient$Type() , BOTTOM_1;
}
;
var Ltripleplay_ui_Style$GradientTypeStyle_2_classLit = createForClass('tripleplay.ui', 'Style/GradientTypeStyle', 632, Ltripleplay_ui_Style_2_classLit);
function $clinit_Style$HAlign(){
  $clinit_Style$HAlign = emptyMethod;
  LEFT_2 = new Style$HAlign$1;
  RIGHT_2 = new Style$HAlign$2;
  CENTER_1 = new Style$HAlign$3;
}

function Style$HAlign(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_39(){
  $clinit_Style$HAlign();
  return initValues(getClassLiteralForArray(Ltripleplay_ui_Style$HAlign_2_classLit, 1), $intern_1, 110, 0, [LEFT_2, RIGHT_2, CENTER_1]);
}

defineClass(110, 7, $intern_91);
var CENTER_1, LEFT_2, RIGHT_2;
var Ltripleplay_ui_Style$HAlign_2_classLit = createForEnum('tripleplay.ui', 'Style/HAlign', 110, Ljava_lang_Enum_2_classLit, values_39);
function Style$HAlign$1(){
  Style$HAlign.call(this, 'LEFT', 0);
}

defineClass(633, 110, $intern_91, Style$HAlign$1);
_.offset = function offset_0(size_0, extent){
  return 0;
}
;
var Ltripleplay_ui_Style$HAlign$1_2_classLit = createForEnum('tripleplay.ui', 'Style/HAlign/1', 633, Ltripleplay_ui_Style$HAlign_2_classLit, null);
function Style$HAlign$2(){
  Style$HAlign.call(this, 'RIGHT', 1);
}

defineClass(634, 110, $intern_91, Style$HAlign$2);
_.offset = function offset_1(size_0, extent){
  return extent - size_0;
}
;
var Ltripleplay_ui_Style$HAlign$2_2_classLit = createForEnum('tripleplay.ui', 'Style/HAlign/2', 634, Ltripleplay_ui_Style$HAlign_2_classLit, null);
function Style$HAlign$3(){
  Style$HAlign.call(this, 'CENTER', 2);
}

defineClass(635, 110, $intern_91, Style$HAlign$3);
_.offset = function offset_2(size_0, extent){
  return (extent - size_0) / 2;
}
;
var Ltripleplay_ui_Style$HAlign$3_2_classLit = createForEnum('tripleplay.ui', 'Style/HAlign/3', 635, Ltripleplay_ui_Style$HAlign_2_classLit, null);
function Style$HAlignStyle(){
  Style.call(this, false);
  this.left_0 = new Style$Binding(this, ($clinit_Style$HAlign() , LEFT_2));
  new Style$Binding(this, RIGHT_2);
  new Style$Binding(this, CENTER_1);
}

defineClass(628, 96, {}, Style$HAlignStyle);
_.getDefault = function getDefault_4(elem){
  return $clinit_Style$HAlign() , CENTER_1;
}
;
var Ltripleplay_ui_Style$HAlignStyle_2_classLit = createForClass('tripleplay.ui', 'Style/HAlignStyle', 628, Ltripleplay_ui_Style_2_classLit);
function $clinit_Style$Pos(){
  $clinit_Style$Pos = emptyMethod;
  LEFT_3 = new Style$Pos('LEFT', 0);
  ABOVE_1 = new Style$Pos('ABOVE', 1);
  RIGHT_3 = new Style$Pos('RIGHT', 2);
  BELOW_1 = new Style$Pos('BELOW', 3);
}

function $horizontal(this$static){
  return this$static == LEFT_3 || this$static == RIGHT_3;
}

function Style$Pos(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_40(){
  $clinit_Style$Pos();
  return initValues(getClassLiteralForArray(Ltripleplay_ui_Style$Pos_2_classLit, 1), $intern_1, 152, 0, [LEFT_3, ABOVE_1, RIGHT_3, BELOW_1]);
}

defineClass(152, 7, {3:1, 9:1, 7:1, 152:1}, Style$Pos);
var ABOVE_1, BELOW_1, LEFT_3, RIGHT_3;
var Ltripleplay_ui_Style$Pos_2_classLit = createForEnum('tripleplay.ui', 'Style/Pos', 152, Ljava_lang_Enum_2_classLit, values_40);
function Style$PosStyle(){
  Style.call(this, false);
  new Style$Binding(this, ($clinit_Style$Pos() , LEFT_3));
  new Style$Binding(this, ABOVE_1);
  new Style$Binding(this, RIGHT_3);
  this.below = new Style$Binding(this, BELOW_1);
}

defineClass(630, 96, {}, Style$PosStyle);
_.getDefault = function getDefault_5(elem){
  return $clinit_Style$Pos() , LEFT_3;
}
;
var Ltripleplay_ui_Style$PosStyle_2_classLit = createForClass('tripleplay.ui', 'Style/PosStyle', 630, Ltripleplay_ui_Style_2_classLit);
function $clinit_Style$TextEffect(){
  $clinit_Style$TextEffect = emptyMethod;
  PIXEL_OUTLINE = new Style$TextEffect$1;
  VECTOR_OUTLINE = new Style$TextEffect$2;
  SHADOW_0 = new Style$TextEffect$3;
  GRADIENT = new Style$TextEffect$4;
  NONE_1 = new Style$TextEffect$5;
}

function Style$TextEffect(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_41(){
  $clinit_Style$TextEffect();
  return initValues(getClassLiteralForArray(Ltripleplay_ui_Style$TextEffect_2_classLit, 1), $intern_1, 73, 0, [PIXEL_OUTLINE, VECTOR_OUTLINE, SHADOW_0, GRADIENT, NONE_1]);
}

defineClass(73, 7, $intern_92);
var GRADIENT, NONE_1, PIXEL_OUTLINE, SHADOW_0, VECTOR_OUTLINE;
var Ltripleplay_ui_Style$TextEffect_2_classLit = createForEnum('tripleplay.ui', 'Style/TextEffect', 73, Ljava_lang_Enum_2_classLit, values_41);
function Style$TextEffect$1(){
  Style$TextEffect.call(this, 'PIXEL_OUTLINE', 0);
}

defineClass(639, 73, $intern_92, Style$TextEffect$1);
_.createEffectRenderer = function createEffectRenderer(elem){
  return new EffectRenderer$PixelOutline(resolveStyle(elem, ($clinit_Style() , HIGHLIGHT)).value_0);
}
;
var Ltripleplay_ui_Style$TextEffect$1_2_classLit = createForEnum('tripleplay.ui', 'Style/TextEffect/1', 639, Ltripleplay_ui_Style$TextEffect_2_classLit, null);
function Style$TextEffect$2(){
  Style$TextEffect.call(this, 'VECTOR_OUTLINE', 1);
}

defineClass(640, 73, $intern_92, Style$TextEffect$2);
_.createEffectRenderer = function createEffectRenderer_0(elem){
  return new EffectRenderer$VectorOutline(resolveStyle(elem, ($clinit_Style() , HIGHLIGHT)).value_0, resolveStyle(elem, OUTLINE_WIDTH).value_0, resolveStyle(elem, OUTLINE_CAP), resolveStyle(elem, OUTLINE_JOIN));
}
;
var Ltripleplay_ui_Style$TextEffect$2_2_classLit = createForEnum('tripleplay.ui', 'Style/TextEffect/2', 640, Ltripleplay_ui_Style$TextEffect_2_classLit, null);
function Style$TextEffect$3(){
  Style$TextEffect.call(this, 'SHADOW', 2);
}

defineClass(641, 73, $intern_92, Style$TextEffect$3);
_.createEffectRenderer = function createEffectRenderer_1(elem){
  return new EffectRenderer$Shadow(resolveStyle(elem, ($clinit_Style() , SHADOW)).value_0, resolveStyle(elem, SHADOW_X).value_0, resolveStyle(elem, SHADOW_Y).value_0);
}
;
var Ltripleplay_ui_Style$TextEffect$3_2_classLit = createForEnum('tripleplay.ui', 'Style/TextEffect/3', 641, Ltripleplay_ui_Style$TextEffect_2_classLit, null);
function Style$TextEffect$4(){
  Style$TextEffect.call(this, 'GRADIENT', 3);
}

defineClass(642, 73, $intern_92, Style$TextEffect$4);
_.createEffectRenderer = function createEffectRenderer_2(elem){
  return new EffectRenderer$Gradient(resolveStyle(elem, ($clinit_Style() , GRADIENT_COLOR)).value_0, resolveStyle(elem, GRADIENT_TYPE));
}
;
var Ltripleplay_ui_Style$TextEffect$4_2_classLit = createForEnum('tripleplay.ui', 'Style/TextEffect/4', 642, Ltripleplay_ui_Style$TextEffect_2_classLit, null);
function Style$TextEffect$5(){
  Style$TextEffect.call(this, 'NONE', 4);
}

defineClass(643, 73, $intern_92, Style$TextEffect$5);
_.createEffectRenderer = function createEffectRenderer_3(elem){
  return $clinit_EffectRenderer() , NONE_2;
}
;
var Ltripleplay_ui_Style$TextEffect$5_2_classLit = createForEnum('tripleplay.ui', 'Style/TextEffect/5', 643, Ltripleplay_ui_Style$TextEffect_2_classLit, null);
function Style$TextEffectStyle(){
  Style.call(this, true);
  this.pixelOutline = new Style$Binding(this, ($clinit_Style$TextEffect() , PIXEL_OUTLINE));
  new Style$Binding(this, VECTOR_OUTLINE);
  new Style$Binding(this, SHADOW_0);
  new Style$Binding(this, GRADIENT);
  new Style$Binding(this, NONE_1);
}

defineClass(631, 96, {}, Style$TextEffectStyle);
_.getDefault = function getDefault_6(elem){
  return $clinit_Style$TextEffect() , NONE_1;
}
;
var Ltripleplay_ui_Style$TextEffectStyle_2_classLit = createForClass('tripleplay.ui', 'Style/TextEffectStyle', 631, Ltripleplay_ui_Style_2_classLit);
function $clinit_Style$VAlign(){
  $clinit_Style$VAlign = emptyMethod;
  TOP_0 = new Style$VAlign$1;
  BOTTOM_0 = new Style$VAlign$2;
  CENTER_2 = new Style$VAlign$3;
}

function Style$VAlign(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_42(){
  $clinit_Style$VAlign();
  return initValues(getClassLiteralForArray(Ltripleplay_ui_Style$VAlign_2_classLit, 1), $intern_1, 111, 0, [TOP_0, BOTTOM_0, CENTER_2]);
}

defineClass(111, 7, $intern_93);
var BOTTOM_0, CENTER_2, TOP_0;
var Ltripleplay_ui_Style$VAlign_2_classLit = createForEnum('tripleplay.ui', 'Style/VAlign', 111, Ljava_lang_Enum_2_classLit, values_42);
function Style$VAlign$1(){
  Style$VAlign.call(this, 'TOP', 0);
}

defineClass(636, 111, $intern_93, Style$VAlign$1);
_.offset = function offset_3(size_0, extent){
  return 0;
}
;
var Ltripleplay_ui_Style$VAlign$1_2_classLit = createForEnum('tripleplay.ui', 'Style/VAlign/1', 636, Ltripleplay_ui_Style$VAlign_2_classLit, null);
function Style$VAlign$2(){
  Style$VAlign.call(this, 'BOTTOM', 1);
}

defineClass(637, 111, $intern_93, Style$VAlign$2);
_.offset = function offset_4(size_0, extent){
  return extent - size_0;
}
;
var Ltripleplay_ui_Style$VAlign$2_2_classLit = createForEnum('tripleplay.ui', 'Style/VAlign/2', 637, Ltripleplay_ui_Style$VAlign_2_classLit, null);
function $offset(size_0, extent){
  return (extent - size_0) / 2;
}

function Style$VAlign$3(){
  Style$VAlign.call(this, 'CENTER', 2);
}

defineClass(638, 111, $intern_93, Style$VAlign$3);
_.offset = function offset_5(size_0, extent){
  return $offset(size_0, extent);
}
;
var Ltripleplay_ui_Style$VAlign$3_2_classLit = createForEnum('tripleplay.ui', 'Style/VAlign/3', 638, Ltripleplay_ui_Style$VAlign_2_classLit, null);
function Style$VAlignStyle(){
  Style.call(this, false);
  new Style$Binding(this, ($clinit_Style$VAlign() , TOP_0));
  new Style$Binding(this, BOTTOM_0);
  new Style$Binding(this, CENTER_2);
}

defineClass(629, 96, {}, Style$VAlignStyle);
_.getDefault = function getDefault_7(elem){
  return $clinit_Style$VAlign() , CENTER_2;
}
;
var Ltripleplay_ui_Style$VAlignStyle_2_classLit = createForClass('tripleplay.ui', 'Style/VAlignStyle', 629, Ltripleplay_ui_Style_2_classLit);
function $clinit_Styles(){
  $clinit_Styles = emptyMethod;
  _noneSingleton = new Styles(initDim(Ltripleplay_ui_Styles$Binding_2_classLit, $intern_1, 113, 0, 0, 1));
}

function $add_25(this$static, mode, bindings){
  var ii, nbindings;
  if (bindings.length == 0)
    return this$static;
  nbindings = initDim(Ltripleplay_ui_Styles$Binding_2_classLit, $intern_1, 113, bindings.length, 0, 1);
  for (ii = 0; ii < bindings.length; ii++) {
    nbindings[ii] = new Styles$Binding(bindings[ii], mode);
  }
  return $merge_0(this$static, nbindings);
}

function $get_17(this$static, key, elem){
  var cmp, high, low, mid, midVal;
  low = 0;
  high = this$static._bindings.length - 1;
  while (low <= high) {
    mid = low + high >>> 1;
    midVal = this$static._bindings[mid];
    cmp = $compareToStyle(midVal, key);
    if (cmp < 0)
      low = mid + 1;
    else if (cmp > 0)
      high = mid - 1;
    else 
      return $get_18(midVal, elem);
  }
  return null;
}

function $merge(this$static, styles){
  if (this$static._bindings.length == 0)
    return styles;
  return $merge_0(this$static, styles._bindings);
}

function $merge_0(this$static, obindings){
  var didx, dupidx, dups, idx, idx0, ii, ii0, nb, nbindings, ob;
  if (obindings.length == 0)
    return this$static;
  dupidx = initDim(I_classLit, $intern_37, 0, obindings.length, 7, 1);
  dups = 0;
  for (ii0 = 0; ii0 < obindings.length; ii0++) {
    idx0 = binarySearch(this$static._bindings, obindings[ii0], ($clinit_Comparators() , $clinit_Comparators() , NATURAL));
    idx0 >= 0 && ++dups;
    dupidx[ii0] = idx0;
  }
  nbindings = initDim(Ltripleplay_ui_Styles$Binding_2_classLit, $intern_1, 113, this$static._bindings.length + obindings.length - dups, 0, 1);
  arraycopy(this$static._bindings, 0, nbindings, 0, this$static._bindings.length);
  idx = this$static._bindings.length;
  for (ii = 0; ii < obindings.length; ii++) {
    didx = dupidx[ii];
    if (didx >= 0) {
      nb = nbindings[didx];
      ob = obindings[ii];
      nbindings[didx] = new Styles$Binding_1(nb.style_0, $merge_1(nb._defaultV, ob._defaultV), $merge_1(nb._disabledV, ob._disabledV), $merge_1(nb._selectedV, ob._selectedV), $merge_1(nb._disSelectedV, ob._disSelectedV));
    }
     else 
      nbindings[idx++] = obindings[ii];
  }
  mergeSort(nbindings, 0, nbindings.length, ($clinit_Comparators() , $clinit_Comparators() , NATURAL));
  return new Styles(nbindings);
}

function Styles(bindings){
  this._bindings = bindings;
}

function make(bindings){
  $clinit_Styles();
  return $add_25(_noneSingleton, 0, bindings);
}

function resolveStyle(element, style){
  $clinit_Styles();
  var group, sheet_0, value_0;
  value_0 = $get_17(element._styles, style, element);
  if (value_0 != null)
    return value_0;
  group = instanceOf(element, 22)?element:element._parent;
  for (; group; group = group._parent) {
    sheet_0 = group.stylesheet();
    if (!sheet_0)
      continue;
    value_0 = $get_19(sheet_0, style, element.getStyleClass(), element);
    if (value_0 != null)
      return value_0;
  }
  return style.getDefault(element);
}

defineClass(323, 1, {}, Styles);
var _noneSingleton;
var Ltripleplay_ui_Styles_2_classLit = createForClass('tripleplay.ui', 'Styles', 323, Ljava_lang_Object_2_classLit);
function $compareTo_3(this$static, other){
  var hc, ohc;
  if (this$static.style_0 == other.style_0)
    return 0;
  hc = getHashCode(this$static.style_0);
  ohc = getHashCode(other.style_0);
  return hc < ohc?-1:1;
}

function $compareToStyle(this$static, style){
  var hc, ohc;
  if (this$static.style_0 == style)
    return 0;
  hc = getHashCode(this$static.style_0);
  ohc = getHashCode(style);
  return hc < ohc?-1:1;
}

function $get_18(this$static, elem){
  if ($isSet_0(elem, ($clinit_Element$Flag() , ENABLED))) {
    if ($isSet_0(elem, SELECTED) && this$static._selectedV != null)
      return this$static._selectedV;
  }
   else {
    if ($isSet_0(elem, SELECTED) && this$static._disSelectedV != null)
      return this$static._disSelectedV;
    if (this$static._disabledV != null)
      return this$static._disabledV;
  }
  return this$static._defaultV;
}

function $merge_1(ours, theirs){
  return theirs == null?ours:theirs;
}

function Styles$Binding(binding, mode){
  Styles$Binding_0.call(this, binding.style_0);
  switch (mode) {
    case 0:
      this._defaultV = binding.value_0;
      break;
    case 1:
      this._disabledV = binding.value_0;
      break;
    case 2:
      this._selectedV = binding.value_0;
      break;
    case 3:
      this._disSelectedV = binding.value_0;
  }
}

function Styles$Binding_0(style){
  this.style_0 = style;
}

function Styles$Binding_1(style, defaultV, disabledV, selectedV, disSelectedV){
  Styles$Binding_0.call(this, style);
  this._defaultV = defaultV;
  this._disabledV = disabledV;
  this._selectedV = selectedV;
  this._disSelectedV = disSelectedV;
}

defineClass(113, 1, {9:1, 113:1}, Styles$Binding, Styles$Binding_1);
_.compareTo = function compareTo_9(other){
  return $compareTo_3(this, other);
}
;
var Ltripleplay_ui_Styles$Binding_2_classLit = createForClass('tripleplay.ui', 'Styles/Binding', 113, Ljava_lang_Object_2_classLit);
function $get_19(this$static, style, eclass, elem){
  var parent_0, styles, value_0;
  styles = this$static._styles.get_1(eclass);
  value_0 = !styles?null:$get_17(styles, style, elem);
  if (value_0 != null)
    return value_0;
  if (!style.inherited || eclass == Ltripleplay_ui_Element_2_classLit)
    return null;
  parent_0 = eclass.superclass;
  if (!parent_0) {
    throw new RuntimeException_0('Your PlayN application must not be compiled with -XdisableClassMetadata. It breaks TriplePlay stylesheets.');
  }
  return $get_19(this$static, style, parent_0, elem);
}

function Stylesheet(styles){
  this._styles = styles;
}

defineClass(626, 1, {}, Stylesheet);
var Ltripleplay_ui_Stylesheet_2_classLit = createForClass('tripleplay.ui', 'Stylesheet', 626, Ljava_lang_Object_2_classLit);
function $add_26(this$static, eclass, mode, styles){
  return $add_27(this$static, eclass, $add_25(($clinit_Styles() , $clinit_Styles() , _noneSingleton), mode, styles));
}

function $add_27(this$static, eclass, styles){
  var ostyles;
  ostyles = this$static._styles.get_1(eclass);
  this$static._styles.put(eclass, !ostyles?styles:$merge(ostyles, styles));
  return this$static;
}

function $add_28(this$static, eclass, styles){
  return $add_27(this$static, eclass, ($clinit_Styles() , $add_25((null , _noneSingleton), 0, styles)));
}

function $create_1(this$static){
  var sheet_0;
  sheet_0 = new Stylesheet(this$static._styles);
  this$static._styles = null;
  return sheet_0;
}

function Stylesheet$Builder(){
  this._styles = new HashMap;
}

defineClass(319, 1, {}, Stylesheet$Builder);
var Ltripleplay_ui_Stylesheet$Builder_2_classLit = createForClass('tripleplay.ui', 'Stylesheet/Builder', 319, Ljava_lang_Object_2_classLit);
function $clinit_Tabs(){
  $clinit_Tabs = emptyMethod;
  NOOP_HIGHLIGHTER = new Tabs$1;
  HIGHLIGHTER = ($clinit_Style() , new Style$3(true, NOOP_HIGHLIGHTER));
}

var HIGHLIGHTER, NOOP_HIGHLIGHTER;
var Ltripleplay_ui_Tabs_2_classLit = createForClass('tripleplay.ui', 'Tabs', null, Ltripleplay_ui_Composite_2_classLit);
function Tabs$1(){
}

defineClass(675, 1, {}, Tabs$1);
var Ltripleplay_ui_Tabs$1_2_classLit = createForClass('tripleplay.ui', 'Tabs/1', 675, Ljava_lang_Object_2_classLit);
function Tabs$2(){
}

defineClass(676, 1, {}, Tabs$2);
var Ltripleplay_ui_Tabs$2_2_classLit = createForClass('tripleplay.ui', 'Tabs/2', 676, Ljava_lang_Object_2_classLit);
function $onEmit_34(this$static, icon){
  if (!icon) {
    this$static.this$01._ldata = null;
    $invalidate(this$static.this$01);
  }
   else {
    $onSuccess(icon.state_0(), new TextWidget$1$1(this$static));
  }
}

function TextWidget$1(this$0){
  this.this$01 = this$0;
}

defineClass(239, 953, {}, TextWidget$1);
_.onEmit = function onEmit_76(icon){
  $onEmit_34(this, icon);
}
;
var Ltripleplay_ui_TextWidget$1_2_classLit = createForClass('tripleplay.ui', 'TextWidget/1', 239, Lreact_Slot_2_classLit);
function $onEmit_35(this$static){
  this$static.this$11.this$01._renderedIcon = null;
  this$static.this$11.this$01._ldata = null;
  $invalidate(this$static.this$11.this$01);
}

function TextWidget$1$1(this$1){
  this.this$11 = this$1;
}

defineClass(627, 953, {}, TextWidget$1$1);
_.onEmit = function onEmit_77(resource){
  $onEmit_35(this, resource);
}
;
var Ltripleplay_ui_TextWidget$1$1_2_classLit = createForClass('tripleplay.ui', 'TextWidget/1/1', 627, Lreact_Slot_2_classLit);
function BlankBackground(){
  Background.call(this);
}

defineClass(244, 131, {}, BlankBackground);
_.instantiate = function instantiate_4(size_0){
  return new BlankBackground$1(this, size_0);
}
;
var Ltripleplay_ui_bgs_BlankBackground_2_classLit = createForClass('tripleplay.ui.bgs', 'BlankBackground', 244, Ltripleplay_ui_Background_2_classLit);
function BlankBackground$1(this$0_1, $anonymous0){
  Background$Instance.call(this, this$0_1, $anonymous0);
}

defineClass(690, 320, $intern_72, BlankBackground$1);
_.addTo = function addTo_1(parent_0, x_0, y_0, depthAdjust){
}
;
_.close_0 = function close_22(){
}
;
var Ltripleplay_ui_bgs_BlankBackground$1_2_classLit = createForClass('tripleplay.ui.bgs', 'BlankBackground/1', 690, Ltripleplay_ui_Background$Instance_2_classLit);
function RoundRectBackground(gfx, bgColor, radius, borderColor, borderWidth){
  Background.call(this);
  this._gfx = gfx;
  this._bgColor = bgColor;
  this._radius = radius;
  this._borderColor = borderColor;
  this._borderWidth = borderWidth;
  this._borderRadius = radius;
}

defineClass(133, 131, {}, RoundRectBackground);
_.instantiate = function instantiate_5(size_0){
  var canvas, iheight, iradius, iwidth, layer;
  canvas = $createCanvas_0(this._gfx, size_0);
  if (this._borderWidth > 0) {
    $fillRoundRect($setFillColor_0(canvas, this._borderColor), 0, 0, size_0.width_0, size_0.height_0, this._radius);
    iwidth = size_0.width_0 - 2 * this._borderWidth;
    iheight = size_0.height_0 - 2 * this._borderWidth;
    iradius = this._borderRadius * (iheight / size_0.height_0);
    $fillRoundRect($setFillColor_0(canvas, this._bgColor), this._borderWidth, this._borderWidth, iwidth, iheight, iradius);
  }
   else {
    $fillRoundRect($setFillColor_0(canvas, this._bgColor), 0, 0, size_0.width_0, size_0.height_0, this._radius);
  }
  layer = new ImageLayer($toTexture(canvas, ($clinit_Texture$Config() , DEFAULT_0)));
  return new Background$LayerInstance(this, size_0, layer);
}
;
_._bgColor = 0;
_._borderColor = 0;
_._borderRadius = 0;
_._borderWidth = 0;
_._radius = 0;
var Ltripleplay_ui_bgs_RoundRectBackground_2_classLit = createForClass('tripleplay.ui.bgs', 'RoundRectBackground', 133, Ltripleplay_ui_Background_2_classLit);
function $clinit_AbsoluteLayout(){
  $clinit_AbsoluteLayout = emptyMethod;
  ZERO_0 = new Dimension_0(0, 0);
}

function AbsoluteLayout(){
  $clinit_AbsoluteLayout();
}

function at(elem, x_0, y_0, width_0, height){
  $clinit_AbsoluteLayout();
  return at_0(elem, new Point_0(x_0, y_0), new Dimension_0(width_0, height));
}

function at_0(elem, position, size_0){
  elem.setConstraint(new AbsoluteLayout$Constraint(position, size_0, ($clinit_Style$HAlign() , $clinit_Style$VAlign())));
  return elem;
}

function uniform(where){
  $clinit_AbsoluteLayout();
  return new AbsoluteLayout$Constraint_0(where, where, ZERO_0);
}

defineClass(336, 998, {}, AbsoluteLayout);
_.computeSize_1 = function computeSize_6(elems, hintX, hintY){
  var bounds, c, elem, elem$iterator, psize;
  bounds = new Rectangle;
  for (elem$iterator = elems.iterator(); elem$iterator.hasNext();) {
    elem = elem$iterator.next_0();
    if (!$isSet_0(elem, ($clinit_Element$Flag() , VISIBLE_2)))
      continue;
    c = elem._constraint;
    psize = $psize(c, elem);
    $add_14(bounds, new Rectangle_2($pos(c, 0, 0, psize), psize));
  }
  return new Dimension_0(bounds.width_0, bounds.height_0);
}
;
_.layout_2 = function layout_16(elems, left, top_0, width_0, height){
  var c, elem, elem$iterator, pos, psize;
  for (elem$iterator = elems.iterator(); elem$iterator.hasNext();) {
    elem = elem$iterator.next_0();
    if (!$isSet_0(elem, ($clinit_Element$Flag() , VISIBLE_2)))
      continue;
    c = elem._constraint;
    psize = $psize(c, elem);
    pos = $pos(c, width_0, height, psize);
    $setBounds_0(elem, left + pos.x_0, top_0 + pos.y_0, psize.width_0, psize.height_0);
  }
}
;
var ZERO_0;
var Ltripleplay_ui_layout_AbsoluteLayout_2_classLit = createForClass('tripleplay.ui.layout', 'AbsoluteLayout', 336, Ltripleplay_ui_Layout_2_classLit);
function $pos(this$static, width_0, height, prefSize){
  var origin, position;
  position = $resolve(this$static.position_0, 0, 0, width_0, height, new Point);
  origin = $resolve_0(this$static.origin, prefSize, new Point);
  position.x_0 -= origin.x_0;
  position.y_0 -= origin.y_0;
  return position;
}

function $psize(this$static, elem){
  var fheight, fwidth, psize;
  fwidth = this$static.size_0.width_0;
  fheight = this$static.size_0.height_0;
  if (fwidth > 0 && fheight > 0)
    return this$static.size_0;
  psize = elem.preferredSize_0(fwidth, fheight);
  return fwidth > 0?new Dimension_0(fwidth, psize.height_0):fheight > 0?new Dimension_0(psize.width_0, fheight):psize;
}

function AbsoluteLayout$Constraint(position, size_0){
  AbsoluteLayout$Constraint_0.call(this, $offset_0(($clinit_BoxPoint() , TL), position.x_0, position.y_0), $align(TL), size_0);
}

function AbsoluteLayout$Constraint_0(position, origin, size_0){
  this.position_0 = position;
  this.origin = origin;
  this.size_0 = size_0;
}

defineClass(256, 999, {}, AbsoluteLayout$Constraint, AbsoluteLayout$Constraint_0);
var Ltripleplay_ui_layout_AbsoluteLayout$Constraint_2_classLit = createForClass('tripleplay.ui.layout', 'AbsoluteLayout/Constraint', 256, Ltripleplay_ui_Layout$Constraint_2_classLit);
function $clinit_AxisLayout(){
  $clinit_AxisLayout = emptyMethod;
  UNSTRETCHED = new AxisLayout$Constraint(false, 1);
  UNIFORM_STRETCHED = new AxisLayout$Constraint(true, 1);
}

function $computeMetrics(this$static, elems, hintX, hintY, vert){
  var availX, availY, c, ehintX, ehintY, elem, elem$iterator, elem$iterator0, m, pheight, psize, pwidth;
  m = new AxisLayout$Metrics;
  for (elem$iterator0 = elems.iterator(); elem$iterator0.hasNext();) {
    elem = elem$iterator0.next_0();
    if (!$isSet_0(elem, ($clinit_Element$Flag() , VISIBLE_2)))
      continue;
    ++m.count;
    c = $constraint(this$static, elem);
    if (c.stretch) {
      ++m.stretchers;
      m.totalWeight += c.weight;
    }
     else {
      psize = elem.preferredSize_0(hintX, hintY);
      pwidth = psize.width_0;
      pheight = psize.height_0;
      m.prefWidth += pwidth;
      m.prefHeight += pheight;
      m.maxWidth = max_1(m.maxWidth, pwidth);
      m.maxHeight = max_1(m.maxHeight, pheight);
      m.fixWidth += pwidth;
      m.fixHeight += pheight;
    }
  }
  for (elem$iterator = elems.iterator(); elem$iterator.hasNext();) {
    elem = elem$iterator.next_0();
    if (!$isSet_0(elem, ($clinit_Element$Flag() , VISIBLE_2)))
      continue;
    c = $constraint(this$static, elem);
    if (!c.stretch)
      continue;
    availX = hintX - $gaps(m, this$static._gap);
    availY = hintY - $gaps(m, this$static._gap);
    ehintX = vert?availX:$computeSize_0(c, 0, m.totalWeight, availX - m.fixWidth);
    ehintY = vert?$computeSize_0(c, 0, m.totalWeight, availY - m.fixHeight):availY;
    psize = elem.preferredSize_0(ehintX, ehintY);
    pwidth = psize.width_0;
    pheight = psize.height_0;
    m.unitWidth = max_1(m.unitWidth, pwidth / c.weight);
    m.unitHeight = max_1(m.unitHeight, pheight / c.weight);
    m.maxWidth = max_1(m.maxWidth, pwidth);
    m.maxHeight = max_1(m.maxHeight, pheight);
  }
  m.prefWidth += m.stretchers * m.unitWidth;
  m.prefHeight += m.stretchers * m.unitHeight;
  return m;
}

function $constraint(this$static, elem){
  var c;
  c = elem._constraint;
  return instanceOf(c, 81)?c:this$static._stretchByDefault?UNIFORM_STRETCHED:UNSTRETCHED;
}

function $gap(this$static, gap){
  this$static._gap = gap;
  return this$static;
}

function $offPolicy(this$static, policy){
  this$static._offPolicy = policy;
  return this$static;
}

function $stretchByDefault(this$static){
  this$static._stretchByDefault = true;
  return this$static;
}

function AxisLayout(){
  this._offPolicy = ($clinit_AxisLayout$Policy() , DEFAULT_2);
}

defineClass(316, 998, {});
_._gap = 5;
_._stretchByDefault = false;
var UNIFORM_STRETCHED, UNSTRETCHED;
var Ltripleplay_ui_layout_AxisLayout_2_classLit = createForClass('tripleplay.ui.layout', 'AxisLayout', 316, Ltripleplay_ui_Layout_2_classLit);
function $computeSize_0(this$static, size_0, totalWeight, availSize){
  return this$static.stretch?availSize * this$static.weight / totalWeight:size_0;
}

function AxisLayout$Constraint(stretch, weight){
  this.stretch = stretch;
  this.weight = weight;
}

defineClass(81, 999, {81:1}, AxisLayout$Constraint);
_.stretch = false;
_.weight = 0;
var Ltripleplay_ui_layout_AxisLayout$Constraint_2_classLit = createForClass('tripleplay.ui.layout', 'AxisLayout/Constraint', 81, Ltripleplay_ui_Layout$Constraint_2_classLit);
function AxisLayout$Horizontal(){
  $clinit_AxisLayout();
  AxisLayout.call(this);
}

defineClass(90, 316, {}, AxisLayout$Horizontal);
_.computeSize_1 = function computeSize_7(elems, hintX, hintY){
  var m;
  m = $computeMetrics(this, elems, hintX, hintY, false);
  return new Dimension_0(m.prefWidth + $gaps(m, this._gap), m.maxHeight);
}
;
_.layout_2 = function layout_17(elems, left, top_0, width_0, height){
  var c, eheight, elem, elem$iterator, ewidth, halign, m, psize, stretchWidth, valign, x_0;
  halign = resolveStyle(elems, ($clinit_Style() , HALIGN));
  valign = resolveStyle(elems, VALIGN);
  m = $computeMetrics(this, elems, width_0, height, false);
  stretchWidth = max_1(0, width_0 - $gaps(m, this._gap) - m.fixWidth);
  x_0 = left + (m.stretchers > 0?0:halign.offset(m.fixWidth + $gaps(m, this._gap), width_0));
  for (elem$iterator = elems.iterator(); elem$iterator.hasNext();) {
    elem = elem$iterator.next_0();
    if (!$isSet_0(elem, ($clinit_Element$Flag() , VISIBLE_2)))
      continue;
    psize = elem.preferredSize_0(width_0, height);
    c = $constraint(this, elem);
    ewidth = $computeSize_0(c, psize.width_0, m.totalWeight, stretchWidth);
    eheight = this._offPolicy.computeSize_2(psize.height_0, m.maxHeight, height);
    $setBounds_0(elem, x_0, top_0 + valign.offset(eheight, height), ewidth, eheight);
    x_0 += ewidth + this._gap;
  }
}
;
var Ltripleplay_ui_layout_AxisLayout$Horizontal_2_classLit = createForClass('tripleplay.ui.layout', 'AxisLayout/Horizontal', 90, Ltripleplay_ui_layout_AxisLayout_2_classLit);
function $gaps(this$static, gap){
  return gap * (this$static.count - 1);
}

function AxisLayout$Metrics(){
}

defineClass(617, 1, {}, AxisLayout$Metrics);
_.count = 0;
_.fixHeight = 0;
_.fixWidth = 0;
_.maxHeight = 0;
_.maxWidth = 0;
_.prefHeight = 0;
_.prefWidth = 0;
_.stretchers = 0;
_.totalWeight = 0;
_.unitHeight = 0;
_.unitWidth = 0;
var Ltripleplay_ui_layout_AxisLayout$Metrics_2_classLit = createForClass('tripleplay.ui.layout', 'AxisLayout/Metrics', 617, Ljava_lang_Object_2_classLit);
function $clinit_AxisLayout$Policy(){
  $clinit_AxisLayout$Policy = emptyMethod;
  DEFAULT_2 = new AxisLayout$Policy$1;
  STRETCH = new AxisLayout$Policy$2;
  EQUALIZE = new AxisLayout$Policy$3;
  CONSTRAIN = new AxisLayout$Policy$4;
}

function AxisLayout$Policy(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_43(){
  $clinit_AxisLayout$Policy();
  return initValues(getClassLiteralForArray(Ltripleplay_ui_layout_AxisLayout$Policy_2_classLit, 1), $intern_1, 89, 0, [DEFAULT_2, STRETCH, EQUALIZE, CONSTRAIN]);
}

defineClass(89, 7, $intern_94);
var CONSTRAIN, DEFAULT_2, EQUALIZE, STRETCH;
var Ltripleplay_ui_layout_AxisLayout$Policy_2_classLit = createForEnum('tripleplay.ui.layout', 'AxisLayout/Policy', 89, Ljava_lang_Enum_2_classLit, values_43);
function AxisLayout$Policy$1(){
  AxisLayout$Policy.call(this, 'DEFAULT', 0);
}

defineClass(618, 89, $intern_94, AxisLayout$Policy$1);
_.computeSize_2 = function computeSize_8(size_0, maxSize, extent){
  return size_0 < extent?size_0:extent;
}
;
var Ltripleplay_ui_layout_AxisLayout$Policy$1_2_classLit = createForEnum('tripleplay.ui.layout', 'AxisLayout/Policy/1', 618, Ltripleplay_ui_layout_AxisLayout$Policy_2_classLit, null);
function AxisLayout$Policy$2(){
  AxisLayout$Policy.call(this, 'STRETCH', 1);
}

defineClass(619, 89, $intern_94, AxisLayout$Policy$2);
_.computeSize_2 = function computeSize_9(size_0, maxSize, extent){
  return extent;
}
;
var Ltripleplay_ui_layout_AxisLayout$Policy$2_2_classLit = createForEnum('tripleplay.ui.layout', 'AxisLayout/Policy/2', 619, Ltripleplay_ui_layout_AxisLayout$Policy_2_classLit, null);
function AxisLayout$Policy$3(){
  AxisLayout$Policy.call(this, 'EQUALIZE', 2);
}

defineClass(620, 89, $intern_94, AxisLayout$Policy$3);
_.computeSize_2 = function computeSize_10(size_0, maxSize, extent){
  return maxSize < extent?maxSize:extent;
}
;
var Ltripleplay_ui_layout_AxisLayout$Policy$3_2_classLit = createForEnum('tripleplay.ui.layout', 'AxisLayout/Policy/3', 620, Ltripleplay_ui_layout_AxisLayout$Policy_2_classLit, null);
function AxisLayout$Policy$4(){
  AxisLayout$Policy.call(this, 'CONSTRAIN', 3);
}

defineClass(621, 89, $intern_94, AxisLayout$Policy$4);
_.computeSize_2 = function computeSize_11(size_0, maxSize, extent){
  return size_0 < extent?size_0:extent;
}
;
var Ltripleplay_ui_layout_AxisLayout$Policy$4_2_classLit = createForEnum('tripleplay.ui.layout', 'AxisLayout/Policy/4', 621, Ltripleplay_ui_layout_AxisLayout$Policy_2_classLit, null);
function AxisLayout$Vertical(){
  $clinit_AxisLayout();
  AxisLayout.call(this);
}

defineClass(25, 316, {}, AxisLayout$Vertical);
_.computeSize_1 = function computeSize_12(elems, hintX, hintY){
  var m;
  m = $computeMetrics(this, elems, hintX, hintY, true);
  return new Dimension_0(m.maxWidth, m.prefHeight + $gaps(m, this._gap));
}
;
_.layout_2 = function layout_18(elems, left, top_0, width_0, height){
  var c, eheight, elem, elem$iterator, ewidth, halign, m, psize, stretchHeight, valign, y_0;
  halign = resolveStyle(elems, ($clinit_Style() , HALIGN));
  valign = resolveStyle(elems, VALIGN);
  m = $computeMetrics(this, elems, width_0, height, true);
  stretchHeight = max_1(0, height - $gaps(m, this._gap) - m.fixHeight);
  y_0 = top_0 + (m.stretchers > 0?0:valign.offset(m.fixHeight + $gaps(m, this._gap), height));
  for (elem$iterator = elems.iterator(); elem$iterator.hasNext();) {
    elem = elem$iterator.next_0();
    if (!$isSet_0(elem, ($clinit_Element$Flag() , VISIBLE_2)))
      continue;
    psize = elem.preferredSize_0(width_0, height);
    c = $constraint(this, elem);
    ewidth = this._offPolicy.computeSize_2(psize.width_0, m.maxWidth, width_0);
    eheight = $computeSize_0(c, psize.height_0, m.totalWeight, stretchHeight);
    $setBounds_0(elem, left + halign.offset(ewidth, width_0), y_0, ewidth, eheight);
    y_0 += eheight + this._gap;
  }
}
;
var Ltripleplay_ui_layout_AxisLayout$Vertical_2_classLit = createForClass('tripleplay.ui.layout', 'AxisLayout/Vertical', 25, Ltripleplay_ui_layout_AxisLayout_2_classLit);
function $computeMetrics_0(this$static, elems, width_0, height){
  var elem, esize, ii, ll, m, rowSize;
  m = new FlowLayout$Metrics(this$static);
  rowSize = new Dimension;
  for (ii = 0 , ll = elems.childCount(); ii < ll; ++ii) {
    elem = elems.childAt(ii);
    if (!$isSet_0(elem, ($clinit_Element$Flag() , VISIBLE_2)))
      continue;
    esize = elem.preferredSize_0(width_0, height);
    if (rowSize.width_0 > 0 && width_0 > 0 && rowSize.width_0 + this$static._hgap + esize.width_0 > width_0) {
      $addBreak(m, ii, rowSize);
      rowSize = new Dimension_1(esize);
    }
     else {
      rowSize.width_0 += (rowSize.width_0 > 0?this$static._hgap:0) + esize.width_0;
      rowSize.height_0 = max_1(esize.height_0, rowSize.height_0);
    }
  }
  $addBreak(m, elems.childCount(), rowSize);
  return m;
}

function FlowLayout(){
  this._valign = ($clinit_Style$VAlign() , CENTER_2);
}

defineClass(939, 998, {}, FlowLayout);
_.computeSize_1 = function computeSize_13(elems, hintX, hintY){
  var m;
  m = $computeMetrics_0(this, elems, hintX, hintY);
  return m.size_0;
}
;
_.layout_2 = function layout_19(elems, left, top_0, width_0, height){
  var elem, elemIdx, esize, halign, m, row, rowSize, size_0, x_0, y_0;
  halign = resolveStyle(elems, ($clinit_Style() , HALIGN));
  m = $computeMetrics_0(this, elems, width_0, height);
  y_0 = top_0 + resolveStyle(elems, VALIGN).offset(m.size_0.height_0, height);
  for (elemIdx = 0 , row = 0 , size_0 = m.rowBreaks.array.length; row < size_0; ++row) {
    rowSize = $get(m.rows_0, row);
    x_0 = left + halign.offset(rowSize.width_0, width_0);
    for (; elemIdx < $get(m.rowBreaks, row).value_0; ++elemIdx) {
      elem = elems.childAt(elemIdx);
      if (!$isSet_0(elem, ($clinit_Element$Flag() , VISIBLE_2)))
        continue;
      esize = elem.preferredSize_0(width_0, height);
      !this._valign?$setBounds_0(elem, x_0, y_0, esize.width_0, rowSize.height_0):$setBounds_0(elem, x_0, y_0 + $offset(esize.height_0, rowSize.height_0), esize.width_0, esize.height_0);
      x_0 += esize.width_0 + this._hgap;
    }
    y_0 += this._vgap + rowSize.height_0;
  }
}
;
_._hgap = 5;
_._vgap = 5;
var Ltripleplay_ui_layout_FlowLayout_2_classLit = createForClass('tripleplay.ui.layout', 'FlowLayout', 939, Ltripleplay_ui_Layout_2_classLit);
function $addBreak(this$static, idx, lastRowSize){
  if (lastRowSize.height_0 == 0 && lastRowSize.width_0 == 0)
    return;
  $add_0(this$static.rowBreaks, valueOf(idx));
  $add_0(this$static.rows_0, lastRowSize);
  this$static.size_0.height_0 += (this$static.size_0.height_0 > 0?this$static.this$01._vgap:0) + lastRowSize.height_0;
  this$static.size_0.width_0 = max_1(this$static.size_0.width_0, lastRowSize.width_0);
}

function FlowLayout$Metrics(this$0){
  this.this$01 = this$0;
  this.size_0 = new Dimension;
  this.rows_0 = new ArrayList;
  this.rowBreaks = new ArrayList;
}

defineClass(940, 1, {}, FlowLayout$Metrics);
var Ltripleplay_ui_layout_FlowLayout$Metrics_2_classLit = createForClass('tripleplay.ui.layout', 'FlowLayout/Metrics', 940, Ljava_lang_Object_2_classLit);
function $clinit_TableLayout(){
  $clinit_TableLayout = emptyMethod;
  new TableLayout$Column(($clinit_Style$HAlign() , CENTER_1), false, 1, 0);
}

function $computeMetrics_1(this$static, elems, hintX, hintY){
  var cc, cc0, cells_0, col, columns, elem, elem$iterator, elem$iterator0, elem$iterator1, fixedWidth, freeHintX, ii, metrics, psize, row, rows_0;
  columns = this$static._columns.length;
  cells_0 = 0;
  for (elem$iterator0 = elems.iterator(); elem$iterator0.hasNext();) {
    elem$iterator0.next_0();
    cells_0 += 1;
  }
  rows_0 = ~~(cells_0 / columns);
  cells_0 % columns != 0 && ++rows_0;
  metrics = new TableLayout$Metrics;
  metrics.columnWidths = initDim(F_classLit, $intern_79, 0, columns, 7, 1);
  metrics.rowHeights = initDim(F_classLit, $intern_79, 0, rows_0, 7, 1);
  for (cc0 = 0; cc0 < columns; cc0++)
    metrics.columnWidths[cc0] = this$static._columns[cc0]._minWidth;
  ii = 0;
  for (elem$iterator1 = elems.iterator(); elem$iterator1.hasNext();) {
    elem = elem$iterator1.next_0();
    col = ii % columns;
    row = ~~(ii / columns);
    if ($isSet_0(elem, ($clinit_Element$Flag() , VISIBLE_2)) && this$static._columns[col]._weight == 0) {
      psize = elem.preferredSize_0(hintX, hintY);
      metrics.rowHeights[row] = max_1(metrics.rowHeights[row], psize.height_0);
      metrics.columnWidths[col] = max_1(metrics.columnWidths[col], psize.width_0);
    }
    ii += 1;
  }
  fixedWidth = this$static._colgap * (columns - 1);
  for (cc = 0; cc < columns; cc++)
    fixedWidth += metrics.columnWidths[cc];
  freeHintX = (hintX - fixedWidth) / $freeWeight(this$static);
  ii = 0;
  for (elem$iterator = elems.iterator(); elem$iterator.hasNext();) {
    elem = elem$iterator.next_0();
    col = ii % columns;
    row = ~~(ii / columns);
    if ($isSet_0(elem, ($clinit_Element$Flag() , VISIBLE_2)) && this$static._columns[col]._weight > 0) {
      psize = elem.preferredSize_0(freeHintX, hintY);
      metrics.rowHeights[row] = max_1(metrics.rowHeights[row], psize.height_0);
      metrics.columnWidths[col] = max_1(metrics.columnWidths[col], psize.width_0);
    }
    ii += 1;
  }
  return metrics;
}

function $freeWeight(this$static){
  var freeWeight, ii;
  freeWeight = 0;
  for (ii = 0; ii < this$static._columns.length; ii++)
    freeWeight += this$static._columns[ii]._weight;
  return freeWeight;
}

function TableLayout(columns){
  $clinit_TableLayout();
  this._rowVAlign = ($clinit_Style$VAlign() , CENTER_2);
  this._columns = columns;
}

function sum_0(values){
  $clinit_TableLayout();
  var total, value_0, value$index, value$max;
  total = 0;
  for (value$index = 0 , value$max = values.length; value$index < value$max; ++value$index) {
    value_0 = values[value$index];
    total += value_0;
  }
  return total;
}

defineClass(182, 998, {}, TableLayout);
_.computeSize_1 = function computeSize_14(elems, hintX, hintY){
  var m;
  m = $computeMetrics_1(this, elems, hintX, hintY);
  return new Dimension_0($totalWidth(m, this._colgap), $totalHeight(m, this._rowgap));
}
;
_.layout_2 = function layout_20(elems, left, top_0, width_0, height){
  var ccfg, col, colWidth, columns, elem, elem$iterator, elemHeight, elemWidth, freeExtra, freeWeight, halign, ii, m, naturalWidth, psize, row, rowHeight, startX, valign, x_0, y_0;
  m = $computeMetrics_1(this, elems, width_0, height);
  columns = m.columnWidths.length;
  row = 0;
  col = 0;
  naturalWidth = $totalWidth(m, this._colgap);
  freeWeight = $freeWeight(this);
  freeExtra = (width_0 - naturalWidth) / freeWeight;
  halign = resolveStyle(elems, ($clinit_Style() , HALIGN));
  startX = left + (freeWeight == 0?halign.offset(naturalWidth, width_0):0);
  x_0 = startX;
  valign = resolveStyle(elems, VALIGN);
  y_0 = top_0 + valign.offset($totalHeight(m, this._rowgap), height);
  for (elem$iterator = elems.iterator(); elem$iterator.hasNext();) {
    elem = elem$iterator.next_0();
    colWidth = 0;
    for (ii = 0; ii < 1; ii++) {
      colWidth += max_1(0, m.columnWidths[col + ii] + (freeWeight == 0?0:freeExtra * this._columns[col + ii]._weight));
    }
    colWidth += 0;
    ccfg = this._columns[col];
    rowHeight = m.rowHeights[row];
    if (colWidth > 0 && $isSet_0(elem, ($clinit_Element$Flag() , VISIBLE_2))) {
      psize = elem.preferredSize_0(0, 0);
      elemWidth = ccfg._stretch?colWidth:min_0(psize.width_0, colWidth);
      elemHeight = this._vstretch?rowHeight:min_0(psize.height_0, rowHeight);
      $setBounds_0(elem, x_0 + ccfg._halign.offset(elemWidth, colWidth), y_0 + $offset(elemHeight, rowHeight), elemWidth, elemHeight);
    }
    x_0 += colWidth + this._colgap;
    if ((col += 1) == columns) {
      col = 0;
      x_0 = startX;
      rowHeight > 0 && (y_0 += rowHeight + this._rowgap);
      ++row;
    }
  }
}
;
_._colgap = 0;
_._rowgap = 0;
_._vstretch = false;
var Ltripleplay_ui_layout_TableLayout_2_classLit = createForClass('tripleplay.ui.layout', 'TableLayout', 182, Ltripleplay_ui_Layout_2_classLit);
function $totalHeight(this$static, gap){
  return sum_0(this$static.rowHeights) + gap * (this$static.rowHeights.length - 1);
}

function $totalWidth(this$static, gap){
  return sum_0(this$static.columnWidths) + gap * (this$static.columnWidths.length - 1);
}

function TableLayout$Metrics(){
}

defineClass(884, 1, {}, TableLayout$Metrics);
var Ltripleplay_ui_layout_TableLayout$Metrics_2_classLit = createForClass('tripleplay.ui.layout', 'TableLayout/Metrics', 884, Ljava_lang_Object_2_classLit);
function $clinit_BoxPoint(){
  $clinit_BoxPoint = emptyMethod;
  TL = new BoxPoint(0, 0);
  new BoxPoint(0, 1);
  new BoxPoint(1, 0);
  BR = new BoxPoint(1, 1);
  new BoxPoint(0.5, 0.5);
}

function $align(this$static){
  return new BoxPoint_0(0, 0, this$static.ox, this$static.oy);
}

function $offset_0(this$static, x_0, y_0){
  return new BoxPoint_0(this$static.nx, this$static.ny, x_0, y_0);
}

function $resolve(this$static, x_0, y_0, width_0, height, dest){
  return $set_5(dest, x_0 + this$static.ox + this$static.nx * width_0, y_0 + this$static.oy + this$static.ny * height);
}

function $resolve_0(this$static, size_0, dest){
  return $resolve(this$static, 0, 0, size_0.width_0, size_0.height_0, dest);
}

function $resolve_1(this$static, elem, dest){
  layerToParent(elem.layer, $set_5(dest, 0, 0), dest);
  return $resolve(this$static, dest.x_0, dest.y_0, elem._size.width_0, elem._size.height_0, dest);
}

function BoxPoint(nx, ny){
  BoxPoint_0.call(this, nx, ny, 0, 0);
}

function BoxPoint_0(nx, ny, ox, oy){
  $clinit_BoxPoint();
  this.nx = nx;
  this.ny = ny;
  this.ox = ox;
  this.oy = oy;
}

defineClass(100, 1, {}, BoxPoint, BoxPoint_0);
_.nx = 0;
_.ny = 0;
_.ox = 0;
_.oy = 0;
var BR, TL;
var Ltripleplay_ui_util_BoxPoint_2_classLit = createForClass('tripleplay.ui.util', 'BoxPoint', 100, Ljava_lang_Object_2_classLit);
function $clinit_Insets(){
  $clinit_Insets = emptyMethod;
  ZERO_1 = new Insets(0, 0, 0, 0);
}

function $subtractFrom(this$static, size_0){
  size_0.width_0 -= this$static._left + this$static._right;
  size_0.height_0 -= this$static._top + this$static._bottom;
  return size_0;
}

function Insets(top_0, right, bottom, left){
  $clinit_Insets();
  this._top = top_0;
  this._right = right;
  this._bottom = bottom;
  this._left = left;
}

defineClass(176, 1, {}, Insets);
_.toString$ = function toString_90(){
  return this._top + ',' + this._right + ',' + this._bottom + ',' + this._left;
}
;
_._bottom = 0;
_._left = 0;
_._right = 0;
_._top = 0;
var ZERO_1;
var Ltripleplay_ui_util_Insets_2_classLit = createForClass('tripleplay.ui.util', 'Insets', 176, Ljava_lang_Object_2_classLit);
function $getPosition(event_0, dest){
  $set_5(dest, -event_0.x_0, -event_0.y_0);
}

function $reset_0(this$static, maxX, maxY){
  $set_5(this$static._max, maxX, maxY);
  $setPosition_0(this$static, this$static._position.x_0, this$static._position.y_0);
}

function $setPosition_0(this$static, x_0, y_0){
  $set_5(this$static._position, clamp(x_0, this$static._min.x_0, this$static._max.x_0), clamp(y_0, this$static._min.y_0, this$static._max.y_0));
}

function $update_10(this$static, delta){
  var x_0, y_0;
  if (this$static._vel.x_0 == 0 && this$static._vel.y_0 == 0)
    return;
  $set_6(this$static._prev, this$static._position);
  x_0 = clamp(this$static._position.x_0 + this$static._vel.x_0 * delta, this$static._min.x_0, this$static._max.x_0);
  y_0 = clamp(this$static._position.y_0 + this$static._vel.y_0 * delta, this$static._min.y_0, this$static._max.y_0);
  x_0 == this$static._position.x_0 && (this$static._vel.x_0 = 0);
  y_0 == this$static._position.y_0 && (this$static._vel.y_0 = 0);
  $set_5(this$static._position, x_0, y_0);
  this$static._vel.x_0 = applyAccelertion(this$static._vel.x_0, this$static._accel.x_0, delta);
  this$static._vel.y_0 = applyAccelertion(this$static._vel.y_0, this$static._accel.y_0, delta);
}

function XYFlicker(){
  this.clicked = ($clinit_AbstractSignal() , new Signal);
  this._position = new Point;
  this._vel = new Point;
  this._accel = new Point;
  this._origPos = new Point;
  this._start = new Point;
  this._cur = new Point;
  this._prev = new Point;
  this._max = new Point;
  this._min = new Point;
}

function applyAccelertion(v, a, dt){
  var prev;
  prev = v;
  v += a * dt;
  return (prev > 0?1:prev < 0?-1:0) == (v > 0?1:v < 0?-1:0)?v:0;
}

defineClass(757, 975, {}, XYFlicker);
_.onCancel = function onCancel_2(iact){
  $set_5(this._vel, 0, 0);
  $set_5(this._accel, 0, 0);
}
;
_.onDrag = function onDrag_3(iact){
  var dx, dy;
  $set_6(this._prev, this._cur);
  this._prevStamp = this._curStamp;
  $getPosition(iact.event_0, this._cur);
  this._curStamp = iact.event_0.time;
  dx = this._cur.x_0 - this._start.x_0;
  dy = this._cur.y_0 - this._start.y_0;
  $setPosition_0(this, this._origPos.x_0 + dx, this._origPos.y_0 + dy);
  this._maxDeltaSq = max_1(dx * dx + dy * dy, this._maxDeltaSq);
  dx = this._position.x_0 - this._origPos.x_0;
  dy = this._position.y_0 - this._origPos.y_0;
  dx * dx + dy * dy >= 225 && $capture(iact, ($clinit_Interaction$CaptureMode() , ONLY));
}
;
_.onEnd = function onEnd_3(iact){
  var delta, dragSpeed, dragTime, dragVel, sx, sy;
  if (this._maxDeltaSq < 225) {
    $emit(this.clicked, iact.event_0);
    return;
  }
  dragTime = this._curStamp - this._prevStamp;
  delta = new Point_0(this._cur.x_0 - this._prev.x_0, this._cur.y_0 - this._prev.y_0);
  dragVel = $mult(delta, 1 / dragTime, new Point);
  dragSpeed = ($clinit_Points() , sqrt_0(distanceSq(dragVel.x_0, dragVel.y_0, 0, 0)));
  if (dragSpeed > 0.5 && sqrt_0(distanceSq(delta.x_0, delta.y_0, 0, 0)) > 10) {
    dragSpeed > $intern_95 && $set_5(dragVel, dragVel.x_0 * ($intern_95 / dragSpeed), dragVel.y_0 * ($intern_95 / dragSpeed));
    $set_6(this._vel, dragVel);
    $multLocal(this._vel);
    sx = signum(this._vel.x_0);
    sy = signum(this._vel.y_0);
    this._accel.x_0 = -sx * $intern_96;
    this._accel.y_0 = -sy * $intern_96;
  }
}
;
_.onStart = function onStart_4(iact){
  $set_5(this._vel, 0, 0);
  this._maxDeltaSq = 0;
  $set_6(this._origPos, this._position);
  $getPosition(iact.event_0, this._start);
  $set_6(this._prev, this._start);
  $set_6(this._cur, this._start);
  this._prevStamp = 0;
  this._curStamp = iact.event_0.time;
}
;
_._curStamp = 0;
_._maxDeltaSq = 0;
_._prevStamp = 0;
var Ltripleplay_ui_util_XYFlicker_2_classLit = createForClass('tripleplay.ui.util', 'XYFlicker', 757, Lplayn_scene_Pointer$Listener_2_classLit);
function $add_29(this$static, elem){
  this$static._size == this$static._elems.length && $expand_0(this$static, ~~(this$static._elems.length * 3 / 2) + 1);
  this$static._elems[this$static._size++] = elem;
  return this$static._size;
}

function $expand_0(this$static, capacity){
  var elems;
  elems = initDim(Ljava_lang_Object_2_classLit, $intern_1, 1, capacity, 3, 1);
  arraycopy(this$static._elems, 0, elems, 0, this$static._elems.length);
  this$static._elems = elems;
}

function $get_20(this$static, index_0){
  var elem;
  elem = this$static._elems[index_0];
  return elem;
}

function $removeAt_0(this$static, index_0){
  var elem;
  elem = this$static._elems[index_0];
  this$static._elems[index_0] = this$static._elems[--this$static._size];
  this$static._elems[this$static._size] = null;
  return elem;
}

function $removeLast_0(this$static){
  var elem;
  elem = this$static._elems[--this$static._size];
  this$static._elems[this$static._size] = null;
  return elem;
}

function Bag(){
  this._elems = initDim(Ljava_lang_Object_2_classLit, $intern_1, 1, 16, 3, 1);
}

defineClass(179, 1, {}, Bag);
_.iterator = function iterator_35(){
  return new Bag$1(this);
}
;
_.toString$ = function toString_91(){
  var buf, ii, ll;
  buf = new StringBuilder_1('{');
  for (ii = 0 , ll = this._size; ii < ll; ii++) {
    ii > 0 && (buf.string += ',' , buf);
    $append_6(buf, this._elems[ii]);
  }
  return (buf.string += '}' , buf).string;
}
;
_._size = 0;
var Ltripleplay_util_Bag_2_classLit = createForClass('tripleplay.util', 'Bag', 179, Ljava_lang_Object_2_classLit);
function Bag$1(this$0){
  this.this$01 = this$0;
}

defineClass(824, 1, {}, Bag$1);
_.hasNext = function hasNext_25(){
  return this._pos < this.this$01._size;
}
;
_.next_0 = function next_26(){
  return $get_20(this.this$01, this._pos++);
}
;
_.remove_1 = function remove_52(){
  $removeAt_0(this.this$01, --this._pos);
}
;
_._pos = 0;
var Ltripleplay_util_Bag$1_2_classLit = createForClass('tripleplay.util', 'Bag/1', 824, Ljava_lang_Object_2_classLit);
function $clear_4(this$static, value_0){
  var word;
  word = ~~(value_0 / 32);
  this$static._words.length > word && (this$static._words[word] &= ~(1 << value_0 % 32));
}

function $isSet_2(this$static, value_0){
  var word;
  word = ~~(value_0 / 32);
  return this$static._words.length > word && (this$static._words[word] & 1 << value_0 % 32) != 0;
}

function $set_12(this$static, value_0){
  var word, words;
  word = ~~(value_0 / 32);
  if (this$static._words.length <= word) {
    words = initDim(I_classLit, $intern_37, 0, this$static._words.length * 2, 7, 1);
    arraycopy(this$static._words, 0, words, 0, this$static._words.length);
    this$static._words = words;
  }
  this$static._words[word] |= 1 << value_0 % 32;
}

function BitVec(){
  this._words = initDim(I_classLit, $intern_37, 0, 2, 7, 1);
}

defineClass(344, 1, {}, BitVec);
_.toString$ = function toString_92(){
  var buf, ii;
  buf = new StringBuilder_1('[');
  for (ii = 0; ii < this._words.length * 32; ii++) {
    if (!$isSet_2(this, ii))
      continue;
    buf.string.length > 1 && (buf.string += ', ' , buf);
    buf.string += ii;
  }
  return (buf.string += ']' , buf).string;
}
;
var Ltripleplay_util_BitVec_2_classLit = createForClass('tripleplay.util', 'BitVec', 344, Ljava_lang_Object_2_classLit);
function DimensionValue(){
  $clinit_AbstractValue();
  Value.call(this, new Dimension_0(0, 0));
}

defineClass(341, 17, {}, DimensionValue);
var Ltripleplay_util_DimensionValue_2_classLit = createForClass('tripleplay.util', 'DimensionValue', 341, Lreact_Value_2_classLit);
function $clinit_EffectRenderer(){
  $clinit_EffectRenderer = emptyMethod;
  NONE_2 = new EffectRenderer$1;
}

defineClass(1006, 1, {});
_.adjustHeight = function adjustHeight(height){
  return height;
}
;
_.adjustWidth = function adjustWidth(width_0){
  return width_0;
}
;
var NONE_2;
var Ltripleplay_util_EffectRenderer_2_classLit = createForClass('tripleplay.util', 'EffectRenderer', 1006, Ljava_lang_Object_2_classLit);
function EffectRenderer$1(){
}

defineClass(691, 1006, {}, EffectRenderer$1);
_.render_0 = function render_2(canvas, layout, textColor, underlined, x_0, y_0){
  var bounds, sx, sy;
  $save(canvas.ctx);
  $setFillStyleWeb(canvas.ctx, cssColorString(textColor));
  if (underlined) {
    bounds = layout.bounds;
    sx = x_0 + bounds.x_0;
    sy = y_0 + bounds.y_0 + bounds.height_0 + 1;
    $fillRect_1(canvas, sx, sy, bounds.width_0, 1);
  }
  $fill(layout, canvas.ctx, x_0, y_0);
  $restore(canvas.ctx);
}
;
var Ltripleplay_util_EffectRenderer$1_2_classLit = createForClass('tripleplay.util', 'EffectRenderer/1', 691, Ltripleplay_util_EffectRenderer_2_classLit);
function EffectRenderer$Gradient(gradientColor, gradientType){
  $clinit_EffectRenderer();
  this.gradientColor = gradientColor;
  this.gradientType = gradientType;
}

defineClass(248, 1006, {248:1}, EffectRenderer$Gradient);
_.equals$ = function equals_42(obj){
  var that;
  if (!instanceOf(obj, 248))
    return false;
  that = obj;
  return this.gradientColor == that.gradientColor && this.gradientType == that.gradientType;
}
;
_.hashCode$ = function hashCode_46(){
  return 83 * this.gradientColor ^ 113 * this.gradientType.ordinal;
}
;
_.render_0 = function render_3(canvas, text_0, textColor, underlined, x_0, y_0){
  var bounds, colors, positions, sx, sy;
  colors = null;
  positions = null;
  switch (this.gradientType.ordinal) {
    case 0:
      colors = initValues(getClassLiteralForArray(I_classLit, 1), $intern_37, 0, 7, [textColor, this.gradientColor]);
      positions = initValues(getClassLiteralForArray(F_classLit, 1), $intern_79, 0, 7, [0, 1]);
      break;
    case 1:
      colors = initValues(getClassLiteralForArray(I_classLit, 1), $intern_37, 0, 7, [this.gradientColor, textColor]);
      positions = initValues(getClassLiteralForArray(F_classLit, 1), $intern_79, 0, 7, [0, 1]);
      break;
    case 2:
      colors = initValues(getClassLiteralForArray(I_classLit, 1), $intern_37, 0, 7, [textColor, this.gradientColor, textColor]);
      positions = initValues(getClassLiteralForArray(F_classLit, 1), $intern_79, 0, 7, [0, 0.5, 1]);
  }
  $save(canvas.ctx);
  $setFillGradient(canvas, $createGradient(canvas, new Gradient$Linear(text_0.size_0.height_0, colors, positions)));
  $fill(text_0, canvas.ctx, x_0, y_0);
  if (underlined) {
    bounds = text_0.bounds;
    sx = x_0 + bounds.x_0;
    sy = y_0 + bounds.y_0 + bounds.height_0 + 1;
    $fillRect_1(canvas, sx, sy, bounds.width_0, 1);
  }
  $restore(canvas.ctx);
}
;
_.gradientColor = 0;
var Ltripleplay_util_EffectRenderer$Gradient_2_classLit = createForClass('tripleplay.util', 'EffectRenderer/Gradient', 248, Ltripleplay_util_EffectRenderer_2_classLit);
function $clinit_EffectRenderer$Gradient$Type(){
  $clinit_EffectRenderer$Gradient$Type = emptyMethod;
  BOTTOM_1 = new EffectRenderer$Gradient$Type('BOTTOM', 0);
  TOP_1 = new EffectRenderer$Gradient$Type('TOP', 1);
  CENTER_3 = new EffectRenderer$Gradient$Type('CENTER', 2);
}

function EffectRenderer$Gradient$Type(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_44(){
  $clinit_EffectRenderer$Gradient$Type();
  return initValues(getClassLiteralForArray(Ltripleplay_util_EffectRenderer$Gradient$Type_2_classLit, 1), $intern_1, 177, 0, [BOTTOM_1, TOP_1, CENTER_3]);
}

defineClass(177, 7, {3:1, 9:1, 7:1, 177:1}, EffectRenderer$Gradient$Type);
var BOTTOM_1, CENTER_3, TOP_1;
var Ltripleplay_util_EffectRenderer$Gradient$Type_2_classLit = createForEnum('tripleplay.util', 'EffectRenderer/Gradient/Type', 177, Ljava_lang_Enum_2_classLit, values_44);
function EffectRenderer$PixelOutline(outlineColor){
  $clinit_EffectRenderer();
  this.outlineColor = outlineColor;
}

defineClass(245, 1006, {245:1}, EffectRenderer$PixelOutline);
_.adjustHeight = function adjustHeight_0(height){
  return height + 2;
}
;
_.adjustWidth = function adjustWidth_0(width_0){
  return width_0 + 2;
}
;
_.equals$ = function equals_43(obj){
  if (!instanceOf(obj, 245))
    return false;
  return this.outlineColor == obj.outlineColor;
}
;
_.hashCode$ = function hashCode_47(){
  return this.outlineColor;
}
;
_.render_0 = function render_4(canvas, text_0, textColor, underlined, x_0, y_0){
  var bounds, sx, sy;
  $save(canvas.ctx);
  if (underlined) {
    bounds = text_0.bounds;
    sx = x_0 + bounds.x_0 + 1;
    sy = y_0 + bounds.y_0 + bounds.height_0 + 2;
    $fillRect_1($setFillColor_0(canvas, this.outlineColor), sx - 1, sy - 1, bounds.width_0 + 3, 3);
    $fillRect_1(($setFillStyleWeb(canvas.ctx, cssColorString(textColor)) , canvas), sx, sy, bounds.width_0, 1);
  }
  $setFillColor_0(canvas, this.outlineColor);
  $fill(text_0, canvas.ctx, x_0, y_0);
  $fill(text_0, canvas.ctx, x_0, y_0 + 1);
  $fill(text_0, canvas.ctx, x_0, y_0 + 2);
  $fill(text_0, canvas.ctx, x_0 + 1, y_0);
  $fill(text_0, canvas.ctx, x_0 + 1, y_0 + 2);
  $fill(text_0, canvas.ctx, x_0 + 2, y_0);
  $fill(text_0, canvas.ctx, x_0 + 2, y_0 + 1);
  $fill(text_0, canvas.ctx, x_0 + 2, y_0 + 2);
  $setFillStyleWeb(canvas.ctx, cssColorString(textColor));
  $fill(text_0, canvas.ctx, x_0 + 1, y_0 + 1);
  $restore(canvas.ctx);
}
;
_.outlineColor = 0;
var Ltripleplay_util_EffectRenderer$PixelOutline_2_classLit = createForClass('tripleplay.util', 'EffectRenderer/PixelOutline', 245, Ltripleplay_util_EffectRenderer_2_classLit);
function EffectRenderer$Shadow(shadowColor, shadowX, shadowY){
  $clinit_EffectRenderer();
  this.shadowColor = shadowColor;
  this.shadowX = shadowX;
  this.shadowY = shadowY;
}

defineClass(247, 1006, {247:1}, EffectRenderer$Shadow);
_.adjustHeight = function adjustHeight_1(height){
  return height + abs_0(this.shadowY);
}
;
_.adjustWidth = function adjustWidth_1(width_0){
  return width_0 + abs_0(this.shadowX);
}
;
_.equals$ = function equals_44(obj){
  var that;
  if (!instanceOf(obj, 247))
    return false;
  that = obj;
  return this.shadowColor == that.shadowColor && this.shadowX == that.shadowX && this.shadowY == that.shadowY;
}
;
_.hashCode$ = function hashCode_48(){
  return this.shadowColor ^ round_int(this.shadowX) ^ round_int(this.shadowY);
}
;
_.render_0 = function render_5(canvas, text_0, textColor, underlined, x_0, y_0){
  var bounds, sx, sy, tx, ty;
  tx = this.shadowX < 0?-this.shadowX:0;
  ty = this.shadowY < 0?-this.shadowY:0;
  sx = this.shadowX < 0?0:this.shadowX;
  sy = this.shadowY < 0?0:this.shadowY;
  $save(canvas.ctx);
  if (underlined) {
    bounds = text_0.bounds;
    $fillRect_1($setFillColor_0(canvas, this.shadowColor), sx + bounds.x_0 + x_0, sy + bounds.y_0 + bounds.height_0 + 1, bounds.width_0 + 1, 1);
    $fillRect_1(($setFillStyleWeb(canvas.ctx, cssColorString(textColor)) , canvas), tx + bounds.x_0 + x_0, ty + bounds.y_0 + bounds.height_0 + 1, bounds.width_0 + 1, 1);
  }
  $setFillColor_0(canvas, this.shadowColor);
  $fill(text_0, canvas.ctx, x_0 + sx, y_0 + sy);
  $setFillStyleWeb(canvas.ctx, cssColorString(textColor));
  $fill(text_0, canvas.ctx, x_0 + tx, y_0 + ty);
  $restore(canvas.ctx);
}
;
_.shadowColor = 0;
_.shadowX = 0;
_.shadowY = 0;
var Ltripleplay_util_EffectRenderer$Shadow_2_classLit = createForClass('tripleplay.util', 'EffectRenderer/Shadow', 247, Ltripleplay_util_EffectRenderer_2_classLit);
function EffectRenderer$VectorOutline(outlineColor, outlineWidth, cap, join_0){
  $clinit_EffectRenderer();
  this.outlineColor = outlineColor;
  this.outlineWidth = outlineWidth;
  this.outlineCap = cap;
  this.outlineJoin = join_0;
}

defineClass(246, 1006, {246:1}, EffectRenderer$VectorOutline);
_.adjustHeight = function adjustHeight_2(height){
  return height + 2 * this.outlineWidth;
}
;
_.adjustWidth = function adjustWidth_2(width_0){
  return width_0 + 2 * this.outlineWidth;
}
;
_.equals$ = function equals_45(obj){
  var that;
  if (!instanceOf(obj, 246))
    return false;
  that = obj;
  return this.outlineColor == that.outlineColor && this.outlineWidth == that.outlineWidth && this.outlineCap == that.outlineCap && this.outlineJoin == that.outlineJoin;
}
;
_.hashCode$ = function hashCode_49(){
  return this.outlineColor ^ round_int(this.outlineWidth) ^ getHashCode(this.outlineCap) ^ getHashCode(this.outlineJoin);
}
;
_.render_0 = function render_6(canvas, text_0, textColor, underlined, x_0, y_0){
  var bounds, sx, sy;
  $save(canvas.ctx);
  $setStrokeColor(canvas, this.outlineColor);
  $setStrokeWidth(canvas, this.outlineWidth * 2);
  $setLineCap_0(canvas, this.outlineCap);
  $setLineJoin_0(canvas, this.outlineJoin);
  $strokeText_0(canvas, text_0, x_0 + this.outlineWidth, y_0 + this.outlineWidth);
  $setFillStyleWeb(canvas.ctx, cssColorString(textColor));
  $fillText_0(canvas, text_0, x_0 + this.outlineWidth, y_0 + this.outlineWidth);
  if (underlined) {
    bounds = text_0.bounds;
    sx = x_0 + bounds.x_0 + this.outlineWidth;
    sy = y_0 + bounds.y_0 + bounds.height_0 + this.outlineWidth + 1;
    $fillRect_1(canvas, sx, sy, bounds.width_0, 1);
  }
  $restore(canvas.ctx);
}
;
_.outlineColor = 0;
_.outlineWidth = 0;
var Ltripleplay_util_EffectRenderer$VectorOutline_2_classLit = createForClass('tripleplay.util', 'EffectRenderer/VectorOutline', 246, Ltripleplay_util_EffectRenderer_2_classLit);
function $close_8(this$static){
  if (this$static._layer) {
    $close_3(this$static._layer);
    this$static._layer = null;
  }
  this$static._preparedWidth = 0;
  this$static._preparedHeight = 0;
}

function $prepare(this$static, gfx, width_0, height){
  var layer;
  layer = this$static._layer;
  if (!layer) {
    layer = new CanvasLayer(gfx, width_0, height);
    $add_13(this$static._parent, layer);
    this$static._layer = layer;
  }
   else 
    (layer.canvas.width_0 < width_0 || layer.canvas.height_0 < height) && (layer.canvas = $createCanvas(layer.gfx, width_0, height));
  this$static._preparedWidth = width_0;
  this$static._preparedHeight = height;
}

function Glyph(parent_0){
  this._parent = parent_0;
}

defineClass(696, 1, $intern_72, Glyph);
_.close_0 = function close_23(){
  $close_8(this);
}
;
_._preparedHeight = 0;
_._preparedWidth = 0;
var Ltripleplay_util_Glyph_2_classLit = createForClass('tripleplay.util', 'Glyph', 696, Ljava_lang_Object_2_classLit);
function $clinit_Interpolator(){
  $clinit_Interpolator = emptyMethod;
  LINEAR = new Interpolator$2;
  EASE_IN = new Interpolator$3;
  EASE_OUT = new Interpolator$4;
  EASE_INOUT = new Interpolator$5;
}

function $apply_5(this$static, start_0, range, dt, t){
  var pos;
  pos = t == 0?1:this$static.apply_2(dt / t);
  return start_0 + range * pos;
}

function $applyClamp(this$static, start_0, range, dt){
  return $apply_5(this$static, start_0, range, dt < 0?0:dt > 500?500:dt, 500);
}

defineClass(1018, 1, {});
var EASE_IN, EASE_INOUT, EASE_OUT, LINEAR;
var Ltripleplay_util_Interpolator_2_classLit = createForClass('tripleplay.util', 'Interpolator', 1018, Ljava_lang_Object_2_classLit);
function Interpolator$2(){
}

defineClass(773, 1018, {}, Interpolator$2);
_.apply_2 = function apply_11(v){
  return v;
}
;
_.toString$ = function toString_93(){
  return 'LINEAR';
}
;
var Ltripleplay_util_Interpolator$2_2_classLit = createForClass('tripleplay.util', 'Interpolator/2', 773, Ltripleplay_util_Interpolator_2_classLit);
function Interpolator$3(){
}

defineClass(774, 1018, {}, Interpolator$3);
_.apply_2 = function apply_12(v){
  return v * v * v;
}
;
_.toString$ = function toString_94(){
  return 'EASE_IN';
}
;
var Ltripleplay_util_Interpolator$3_2_classLit = createForClass('tripleplay.util', 'Interpolator/3', 774, Ltripleplay_util_Interpolator_2_classLit);
function Interpolator$4(){
}

defineClass(775, 1018, {}, Interpolator$4);
_.apply_2 = function apply_13(v){
  var vv;
  vv = v - 1;
  return 1 + vv * vv * vv;
}
;
_.toString$ = function toString_95(){
  return 'EASE_OUT';
}
;
var Ltripleplay_util_Interpolator$4_2_classLit = createForClass('tripleplay.util', 'Interpolator/4', 775, Ltripleplay_util_Interpolator_2_classLit);
function Interpolator$5(){
}

defineClass(776, 1018, {}, Interpolator$5);
_.apply_2 = function apply_14(v){
  var ov, v2;
  v2 = 2 * v;
  if (v2 < 1) {
    return v2 * v2 * v2 / 2;
  }
  ov = v2 - 2;
  return (2 + ov * ov * ov) / 2;
}
;
_.toString$ = function toString_96(){
  return 'EASE_INOUT';
}
;
var Ltripleplay_util_Interpolator$5_2_classLit = createForClass('tripleplay.util', 'Interpolator/5', 776, Ltripleplay_util_Interpolator_2_classLit);
function Layers$2(val$width, val$height){
  this.val$width1 = val$width;
  this.val$height2 = val$height;
  this.val$color3 = $intern_56;
  Layer.call(this);
}

defineClass(807, 21, $intern_59, Layers$2);
_.height_1 = function height_8(){
  return this.val$height2;
}
;
_.paintImpl = function paintImpl_9(surf){
  $fillRect_0($setFillColor(surf, this.val$color3), 0, 0, this.val$width1, this.val$height2);
}
;
_.width_1 = function width_9(){
  return this.val$width1;
}
;
_.val$color3 = 0;
_.val$height2 = 0;
_.val$width1 = 0;
var Ltripleplay_util_Layers$2_2_classLit = createForClass('tripleplay.util', 'Layers/2', 807, Lplayn_scene_Layer_2_classLit);
function $clinit_Logger(){
  $clinit_Logger = emptyMethod;
  levels = new Logger$Levels;
}

function $log_0(message, args){
  var error, sb;
  sb = $append_7(new StringBuilder, message);
  if (args.length > 1) {
    sb.string += ' [';
    format_3(sb, args);
    sb.string += ']';
  }
  error = args.length % 2 == 1?args[args.length - 1]:null;
  $clinit_System();
  !!error && error.printStackTrace(out_0);
}

function $warning(this$static, message, args){
  $shouldLog(levels, ($clinit_Logger$Level() , WARNING), this$static._ident) && $log_0(message, args);
}

function Logger(ident){
  $clinit_Logger();
  this._ident = ident;
}

function format_3(into, args){
  var ii, ll;
  for (ii = 0 , ll = ~~(args.length / 2); ii < ll; ii++) {
    ii > 0 && (into.string += ', ' , into);
    $append_6($append_7($append_6(into, args[2 * ii]), '='), args[2 * ii + 1]);
  }
  return into;
}

defineClass(314, 1, {}, Logger);
var levels;
var Ltripleplay_util_Logger_2_classLit = createForClass('tripleplay.util', 'Logger', 314, Ljava_lang_Object_2_classLit);
function $clinit_Logger$Level(){
  $clinit_Logger$Level = emptyMethod;
  DEBUG_0 = new Logger$Level('DEBUG', 0);
  INFO_1 = new Logger$Level('INFO', 1);
  WARNING = new Logger$Level('WARNING', 2);
  ERROR_0 = new Logger$Level('ERROR', 3);
  OFF = new Logger$Level('OFF', 4);
}

function Logger$Level(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_45(){
  $clinit_Logger$Level();
  return initValues(getClassLiteralForArray(Ltripleplay_util_Logger$Level_2_classLit, 1), $intern_1, 130, 0, [DEBUG_0, INFO_1, WARNING, ERROR_0, OFF]);
}

defineClass(130, 7, {3:1, 9:1, 7:1, 130:1}, Logger$Level);
var DEBUG_0, ERROR_0, INFO_1, OFF, WARNING;
var Ltripleplay_util_Logger$Level_2_classLit = createForEnum('tripleplay.util', 'Logger/Level', 130, Ljava_lang_Enum_2_classLit, values_45);
function $shouldLog(this$static, level, ident){
  var ilevel;
  ilevel = this$static._levels.get_1(ident);
  if (ilevel)
    return level.ordinal >= ilevel.ordinal;
  return level.ordinal >= this$static._defaultLevel.ordinal;
}

function Logger$Levels(){
  this._defaultLevel = ($clinit_Logger$Level() , DEBUG_0);
  this._levels = new HashMap;
}

defineClass(604, 1, {}, Logger$Levels);
var Ltripleplay_util_Logger$Levels_2_classLit = createForClass('tripleplay.util', 'Logger/Levels', 604, Ljava_lang_Object_2_classLit);
function $clear_5(this$static){
  var toBeCleared;
  if (this$static._target) {
    toBeCleared = this$static._target;
    this$static._target = null;
    toBeCleared.close_0();
  }
}

function $set_13(this$static, target){
  $clear_5(this$static);
  this$static._target = target;
  return target;
}

defineClass(1009, 1, {});
var Ltripleplay_util_Ref_2_classLit = createForClass('tripleplay.util', 'Ref', 1009, Ljava_lang_Object_2_classLit);
function Ref$1(){
}

defineClass(720, 1009, {}, Ref$1);
var Ltripleplay_util_Ref$1_2_classLit = createForClass('tripleplay.util', 'Ref/1', 720, Ltripleplay_util_Ref_2_classLit);
defineClass(767, 1, {});
var Ltripleplay_util_StyledText_2_classLit = createForClass('tripleplay.util', 'StyledText', 767, Ljava_lang_Object_2_classLit);
function $equals_6(this$static, other){
  var op;
  if (instanceOf(other, 135)) {
    op = other;
    return $equals(this$static.text_0, op.text_0) && $equals_7(this$static.style_0, op.style_0);
  }
   else 
    return false;
}

function StyledText$Plain(gfx, text_0, style){
  this._gfx = gfx;
  this.text_0 = text_0;
  this.style_0 = style;
}

defineClass(135, 767, {135:1});
_.equals$ = function equals_46(other){
  return $equals_6(this, other);
}
;
_.hashCode$ = function hashCode_50(){
  return getHashCode_0(this.text_0) ^ $hashCode_3(this.style_0);
}
;
var Ltripleplay_util_StyledText$Plain_2_classLit = createForClass('tripleplay.util', 'StyledText/Plain', 135, Ltripleplay_util_StyledText_2_classLit);
function StyledText$Block(gfx, text_0, style, wrap, align_0){
  StyledText$Plain.call(this, gfx, text_0, style);
  this.wrap = wrap;
  this.align_0 = align_0;
  this._layouts = layoutText_0(gfx, gfx.dummyCtx, text_0, style, wrap);
  this._bounds = getBounds(this._layouts, new Rectangle);
  this._bounds.width_0 = style.effect.adjustWidth(this._bounds.width_0);
  this._bounds.height_0 = style.effect.adjustHeight(this._bounds.height_0);
}

defineClass(335, 135, {135:1}, StyledText$Block);
_.equals$ = function equals_47(other){
  var op;
  if (instanceOf(other, 135)) {
    op = other;
    return $equals(this.text_0, op.text_0) && $equals_7(this.style_0, op.style_0);
  }
   else 
    return false;
}
;
_.hashCode$ = function hashCode_51(){
  return getHashCode_0(this.text_0) ^ $hashCode_3(this.style_0) ^ $hashCode_2(this.wrap) ^ getHashCode(this.align_0);
}
;
_.height_1 = function height_9(){
  return this._bounds.height_0;
}
;
_.render_1 = function render_7(canvas, x_0, y_0){
  var bx, layout, layout$array, layout$index, layout$max, lx, ly;
  bx = this._bounds.x_0;
  ly = y_0 + this._bounds.y_0;
  for (layout$array = this._layouts , layout$index = 0 , layout$max = layout$array.length; layout$index < layout$max; ++layout$index) {
    layout = layout$array[layout$index];
    lx = x_0 + bx + this.align_0.getX(this.style_0.effect.adjustWidth(layout.size_0.width_0), this._bounds.width_0 - this._bounds.x_0);
    this.style_0.effect.render_0(canvas, layout, this.style_0.textColor, this.style_0.underlined, lx, ly);
    ly += $intern_75 * layout.metrics.height_0 + $descent(layout.metrics) + $intern_39 * layout.metrics.height_0;
  }
}
;
_.resize = function resize(size_0){
  return new StyledText$Block(this._gfx, this.text_0, $withFont(this.style_0, $derive(this.style_0.font_0, size_0)), this.wrap, this.align_0);
}
;
_.toString$ = function toString_97(){
  return "Block '" + this.text_0 + "' @ " + this.style_0 + '/' + this.wrap + '/' + this.align_0;
}
;
_.width_1 = function width_10(){
  return this._bounds.width_0;
}
;
var Ltripleplay_util_StyledText$Block_2_classLit = createForClass('tripleplay.util', 'StyledText/Block', 335, Ltripleplay_util_StyledText$Plain_2_classLit);
function StyledText$Span(gfx, text_0, style){
  StyledText$Plain.call(this, gfx, text_0, style);
  this._layout = layoutText(gfx, gfx.dummyCtx, text_0, style);
}

defineClass(202, 135, {135:1, 202:1}, StyledText$Span);
_.equals$ = function equals_48(other){
  return instanceOf(other, 202) && $equals_6(this, other);
}
;
_.height_1 = function height_10(){
  return this.style_0.effect.adjustHeight(this._layout.size_0.height_0);
}
;
_.render_1 = function render_8(canvas, x_0, y_0){
  this.style_0.effect.render_0(canvas, this._layout, this.style_0.textColor, this.style_0.underlined, x_0, y_0);
}
;
_.resize = function resize_0(size_0){
  return new StyledText$Span(this._gfx, this.text_0, $withFont(this.style_0, $derive(this.style_0.font_0, size_0)));
}
;
_.toString$ = function toString_98(){
  return "Span '" + this.text_0 + "' @ " + this.style_0;
}
;
_.width_1 = function width_11(){
  return this.style_0.effect.adjustWidth(this._layout.size_0.width_0);
}
;
var Ltripleplay_util_StyledText$Span_2_classLit = createForClass('tripleplay.util', 'StyledText/Span', 202, Ltripleplay_util_StyledText$Plain_2_classLit);
function $clinit_TextStyle(){
  $clinit_TextStyle = emptyMethod;
  new TextStyle(null, true, $intern_45, ($clinit_EffectRenderer() , NONE_2), false);
}

function $equals_7(this$static, other){
  var os;
  if (!instanceOf(other, 156))
    return false;
  os = other;
  return $equals_3(this$static, other) && this$static.textColor == os.textColor && this$static.effect.equals$(os.effect) && this$static.underlined == os.underlined;
}

function $hashCode_3(this$static){
  return $hashCode_1(this$static) ^ this$static.textColor ^ this$static.effect.hashCode$() ^ (this$static.underlined?1:0);
}

function $withFont(this$static, font){
  return new TextStyle(font, this$static.antialias_0, this$static.textColor, this$static.effect, this$static.underlined);
}

function TextStyle(font, antialias, textColor, effect, underlined){
  $clinit_TextStyle();
  TextFormat_0.call(this, font, antialias);
  this.textColor = textColor;
  this.effect = effect;
  this.underlined = underlined;
}

defineClass(156, 114, {114:1, 156:1}, TextStyle);
_.equals$ = function equals_49(other){
  return $equals_7(this, other);
}
;
_.hashCode$ = function hashCode_52(){
  return $hashCode_3(this);
}
;
_.withFont = function withFont_0(font){
  return new TextStyle(font, this.antialias_0, this.textColor, this.effect, this.underlined);
}
;
_.textColor = 0;
_.underlined = false;
var Ltripleplay_util_TextStyle_2_classLit = createForClass('tripleplay.util', 'TextStyle', 156, Lplayn_core_TextFormat_2_classLit);
var Lcom_google_gwt_lang_CollapsedPropertyHolder_2_classLit = createForClass('com.google.gwt.lang', 'CollapsedPropertyHolder', 944, Ljava_lang_Object_2_classLit), Lcom_google_gwt_lang_JavaClassHierarchySetupUtil_2_classLit = createForClass('com.google.gwt.lang', 'JavaClassHierarchySetupUtil', 946, Ljava_lang_Object_2_classLit), Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit = createForClass('com.google.gwt.lang', 'LongLibBase/LongEmul', null, Ljava_lang_Object_2_classLit), I_classLit = createForPrimitive('int', 'I'), Lcom_google_gwt_lang_ModuleUtils_2_classLit = createForClass('com.google.gwt.lang', 'ModuleUtils', 949, Ljava_lang_Object_2_classLit), D_classLit = createForPrimitive('double', 'D'), F_classLit = createForPrimitive('float', 'F'), S_classLit = createForPrimitive('short', 'S'), C_classLit = createForPrimitive('char', 'C'), Ljava_util_Map$Entry_2_classLit = createForInterface('java.util', 'Map/Entry'), Lreact_Closeable_2_classLit = createForInterface('react', 'Closeable'), Lcom_google_common_base_Predicate_2_classLit = createForInterface('com.google.common.base', 'Predicate');
var $entry = registerEntry();
var gwtOnLoad = gwtOnLoad = gwtOnLoad_0;
addInitFunctions(init);
setGwtProperty('permProps', [[['locale', 'default'], ['user.agent', 'safari']]]);
$sendStats('moduleStartup', 'moduleEvalEnd');
gwtOnLoad(__gwtModuleFunction.__errFn, __gwtModuleFunction.__moduleName, __gwtModuleFunction.__moduleBase, __gwtModuleFunction.__softPermutationId,__gwtModuleFunction.__computePropValue);
$sendStats('moduleStartup', 'end');
$gwt && $gwt.permProps && __gwtModuleFunction.__moduleStartupDone($gwt.permProps);
//# sourceURL=sim-0.js

